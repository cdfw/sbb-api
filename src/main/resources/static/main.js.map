{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/_guards/auth.guard.ts","webpack:///./src/app/_guards/index.ts","webpack:///./src/app/_services/alert.service.ts","webpack:///./src/app/_services/authentication.service.ts","webpack:///./src/app/_services/error-interceptor.ts","webpack:///./src/app/_services/http.interceptor.ts","webpack:///./src/app/_services/index.ts","webpack:///./src/app/_services/user.service.ts","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/login/login-form/login-form.component.css","webpack:///./src/app/login/login-form/login-form.component.html","webpack:///./src/app/login/login-form/login-form.component.ts","webpack:///./src/app/login/login-form/reset-password-dialog.html","webpack:///./src/app/login/login-routing.module.ts","webpack:///./src/app/login/login.module.ts","webpack:///./src/app/service/inputs/inputs.component.css","webpack:///./src/app/service/inputs/inputs.component.html","webpack:///./src/app/service/inputs/inputs.component.ts","webpack:///./src/app/service/mat-snack-bar/mat-snack-bar.component.css","webpack:///./src/app/service/mat-snack-bar/mat-snack-bar.component.html","webpack:///./src/app/service/mat-snack-bar/mat-snack-bar.component.ts","webpack:///./src/app/service/matrix-details/matrix-details.component.css","webpack:///./src/app/service/matrix-details/matrix-details.component.html","webpack:///./src/app/service/matrix-details/matrix-details.component.ts","webpack:///./src/app/service/service-matrix.service.ts","webpack:///./src/app/service/service-routing.module.ts","webpack:///./src/app/service/service.module.ts","webpack:///./src/app/service/task-details/save-input-confirm-dialog.html","webpack:///./src/app/service/task-details/task-details.component.css","webpack:///./src/app/service/task-details/task-details.component.html","webpack:///./src/app/service/task-details/task-details.component.ts","webpack:///./src/app/user/user-registration/user-registration.component.css","webpack:///./src/app/user/user-registration/user-registration.component.html","webpack:///./src/app/user/user-registration/user-registration.component.ts","webpack:///./src/app/user/user-routing.module.ts","webpack:///./src/app/user/user.module.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { Injectable } from '@angular/core';\nimport { Router, CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot } from '@angular/router';\n\n@Injectable({providedIn: \"root\"})\n\nexport class AuthGuard implements CanActivate {\n\n    constructor(private router: Router) { }\n\n    canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot) {\n        if (localStorage.getItem('currentUser')) {\n            // logged in so return true\n            return true;\n        }\n\n        // not logged in so redirect to login page with the return url\n        this.router.navigate(['/login']);\n        //, { queryParams: { returnUrl: state.url }}\n        return false;\n    }\n}\n","export * from './auth.guard';","import { Injectable } from '@angular/core';\nimport { Router, NavigationStart } from '@angular/router';\nimport { Observable, Subject } from 'rxjs';\n\n@Injectable()\nexport class AlertService {\n    private subject = new Subject<any>();\n    private keepAfterNavigationChange = false;\n\n    constructor(private router: Router) {\n        // clear alert message on route change\n        router.events.subscribe(event => {\n            if (event instanceof NavigationStart) {\n                if (this.keepAfterNavigationChange) {\n                    // only keep for a single location change\n                    this.keepAfterNavigationChange = false;\n                } else {\n                    // clear alert\n                    this.subject.next();\n                }\n            }\n        });\n    }\n\n    success(message: string, keepAfterNavigationChange = false) {\n        this.keepAfterNavigationChange = keepAfterNavigationChange;\n        this.subject.next({ type: 'success', text: message });\n    }\n\n    error(message: string, keepAfterNavigationChange = false) {\n        this.keepAfterNavigationChange = keepAfterNavigationChange;\n        this.subject.next({ type: 'error', text: message });\n    }\n\n    getMessage(): Observable<any> {\n        return this.subject.asObservable();\n    }\n}","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { UserEntity } from '../_models/UserEntity';\r\nimport { map } from 'rxjs/operators';\r\nimport { MatSnackBarComponent } from '../service/mat-snack-bar/mat-snack-bar.component';\r\n\r\n\r\n@Injectable()\r\nexport class AuthenticationService {\r\n\r\n  user: UserEntity;\r\n  API_URL: string = \"http://cdfw-alb-prod-775994205.us-west-1.elb.amazonaws.com:9301/\";\r\n  //  API_URL: string = \"http://ec2-18-220-6-166.us-east-2.compute.amazonaws.com:8080/\";\r\n   //API_URL: string = \"http://localhost:8080/\";\r\n\r\n  constructor(private http: HttpClient, private snackBar: MatSnackBarComponent) { }\r\n\r\n  login(username: string, password: string) {\r\n    var self = this;\r\n    return this.http.post<UserEntity>(this.API_URL + 'authenticateUser', { username: username, password: password }).\r\n      toPromise()\r\n      .then(function (response) {\r\n        if (response) {\r\n          localStorage.setItem('currentUser', JSON.stringify(response));\r\n          return true;\r\n        }\r\n        return false;\r\n      }, function (error) {\r\n        return error;\r\n      });\r\n\r\n  }\r\n\r\n  resetPassword(username: string, password: string, newpassword: string) {\r\n    var self = this;\r\n    console.log(username + ', ' + password);\r\n    return this.http.post<UserEntity>(this.API_URL + 'resetPassword', { username: username, password: password, newpassword: newpassword });\r\n  }\r\n\r\n  logout() {\r\n    localStorage.removeItem('currentUser');\r\n  }\r\n\r\n}\r\n","import { HttpEvent,\r\n         HttpInterceptor,\r\n         HttpHandler,\r\n         HttpRequest,\r\n         HttpResponse,\r\n         HttpErrorResponse} from '@angular/common/http';\r\nimport { Observable, throwError } from 'rxjs';\r\nimport { catchError } from 'rxjs/operators';\r\nimport { MatSnackBarComponent } from '../service/mat-snack-bar/mat-snack-bar.component';\r\nimport { Injectable } from '@angular/core';\r\n\r\n@Injectable()\r\nexport class HttpErrorInterceptor  implements HttpInterceptor {\r\n\r\nconstructor( private snackBar: MatSnackBarComponent) {\r\n\r\n}\r\n\r\n  intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>>{\r\n    return next.handle(request)\r\n               .pipe(\r\n                 catchError( (error: HttpErrorResponse) => {\r\n                    let errMsg = '';\r\n                    // Client Side Error\r\n                    if (error.error instanceof ErrorEvent) {\r\n                      errMsg = `Error: ${error.error.message}`;\r\n                    }\r\n                    else {  // Server Side Error\r\n                      errMsg = `Error Code: ${error.status},  Message: ${error.message}`;\r\n                    }\r\n                    // show error snackbar with red background\r\n\t          \t      this.snackBar.openSnackBar('We are experiencing technical difficulties. Please try again later.','Close','red-snackbar');\r\n                    //this.snackBar.openSnackBar(errMsg,'Close','red-snackbar');\r\n                    // return an observable\r\n                    return throwError(errMsg);\r\n                  })\r\n               )\r\n  }\r\n}\r\n","import {Injectable} from '@angular/core';\r\nimport {HttpEvent, HttpInterceptor, HttpHandler, HttpRequest} from '@angular/common/http';\r\nimport {Observable} from \"rxjs\";\r\nimport { NgxSpinnerService } from 'ngx-spinner';\r\nimport { tap, finalize } from 'rxjs/operators';\r\n\r\n@Injectable()\r\nexport class AuthInterceptor implements HttpInterceptor {\r\n  count = 0;\r\n  constructor(private spinner: NgxSpinnerService) { }\r\n  intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n    var user = JSON.parse(localStorage.getItem('currentUser'));\r\n    req = req.clone({\r\n        setHeaders: {\r\n            Authorization: 'Bearer '+ (user !== null ? user.userToken : '')\r\n        }\r\n    });\r\n\r\n    this.spinner.show()\r\n\r\n    this.count++;\r\n\r\n    return next.handle(req)\r\n            .pipe ( tap (\r\n                    event => console.log(event),\r\n                    error => console.log( error )\r\n                ), finalize(() => {\r\n                    this.count--;\r\n                    if ( this.count == 0 ) this.spinner.hide ()\r\n                })\r\n            );\r\n  }\r\n}","export * from './alert.service';\r\nexport * from './authentication.service';\r\nexport * from './user.service';","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\nimport { User } from '../_models';\n\n@Injectable()\nexport class UserService {\n    constructor(private http: HttpClient) { }\n\n    get user():Object{\n      return JSON.parse(localStorage.getItem('currentUser'));\n    }\n\n    get userId():Object{\n      return JSON.parse(localStorage.getItem('currentUser'))['id'];\n    }\n\n    getSelectedRegionObject(selectedRegion:string): any {\n      if(localStorage.getItem('currentUser') != null || localStorage.getItem('currentUser') != undefined){\n        let userRegionMapping = this.user['userRegionMappingsById'];\n        for(let userRegion of userRegionMapping) {\n          if(selectedRegion === userRegion['regionByRegionId']['regionName']){\n            return userRegion['regionByRegionId'];\n          }\n        }\n      }\n      return null;\n    }\n\n    get userRole():string{\n      return JSON.parse(localStorage.getItem('currentUser'))['userRoleByRoleId']['roleName'];\n    }\n\n    getUser() {\n        return this.http.get<User[]>(`/users`);\n    }\n\n    getById(id: number) {\n        return this.http.get(`/users/` + id);\n    }\n\n    register(user: User) {\n        return this.http.post(`/users/register`, user);\n    }\n\n    update(user: User) {\n        return this.http.put(`/users/` + user.id, user);\n    }\n\n    delete(id: number) {\n        return this.http.delete(`/users/` + id);\n    }\n}\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { UserRegistrationComponent} from './user/user-registration/user-registration.component';\r\nimport { MatrixDetailsComponent} from './service/matrix-details/matrix-details.component';\r\nimport { LoginFormComponent } from './login/login-form/login-form.component';\r\nimport { TaskDetailsComponent } from './service/task-details/task-details.component';\r\nimport { AuthGuard } from './_guards';\r\n\r\n\r\nconst routes: Routes = [\r\n  { path: 'user', component: UserRegistrationComponent, canActivate: [AuthGuard] },\r\n  { path: 'service/:regionId', component:  MatrixDetailsComponent, canActivate: [AuthGuard]},\r\n  { path: ':regionId/task/:taskId', component:  TaskDetailsComponent, canActivate: [AuthGuard]},\r\n  { path: 'login', component:  LoginFormComponent},\r\n  { path: '', component:  LoginFormComponent},\r\n  // otherwise redirect to home\r\n    { path: '**', redirectTo: '' }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","module.exports = \".flex-container {\\r\\n  display:flex;\\r\\n  /*background-color: green;*/\\r\\n  flex-direction: column;\\r\\n  justify-content: center;\\r\\n  align-content: center;\\r\\n}\\r\\n\\r\\n.vertical-middle{\\r\\n  margin-top: auto;\\r\\n  margin-bottom: auto;\\r\\n}\\r\\n\\r\\n.fill-remaining-space {\\r\\n  /* This fills the remaining space, by using flexbox.\\r\\n     Every toolbar row uses a flexbox row layout. */\\r\\n  flex: 1 1 auto;\\r\\n  text-align: center;\\r\\n}\\r\\n\\r\\n.main-content {\\r\\n  width:100%;\\r\\n  /*flex: 1 1 auto;*/\\r\\n}\\r\\n\\r\\nfooter\\r\\n {\\r\\n   position: fixed;\\r\\n   left: 0;\\r\\n   bottom: 0;\\r\\n   width: 100%;\\r\\n   text-align:center;\\r\\n   background-color: #ccc;\\r\\n   font-size: 14px;\\r\\n   padding-top: 3px;\\r\\n   padding-bottom: 3px\\r\\n }\\r\\n\\r\\n.fake-link {\\r\\n     color: blue;\\r\\n     text-decoration: underline;\\r\\n     cursor: pointer;\\r\\n }\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvYXBwLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxZQUFZO0VBQ1osMkJBQTJCO0VBQzNCLHNCQUFzQjtFQUN0Qix1QkFBdUI7RUFDdkIscUJBQXFCO0FBQ3ZCOztBQUVBO0VBQ0UsZ0JBQWdCO0VBQ2hCLG1CQUFtQjtBQUNyQjs7QUFFQTtFQUNFO21EQUNpRDtFQUNqRCxjQUFjO0VBQ2Qsa0JBQWtCO0FBQ3BCOztBQUVBO0VBQ0UsVUFBVTtFQUNWLGtCQUFrQjtBQUNwQjs7QUFFQTs7R0FFRyxlQUFlO0dBQ2YsT0FBTztHQUNQLFNBQVM7R0FDVCxXQUFXO0dBQ1gsaUJBQWlCO0dBQ2pCLHNCQUFzQjtHQUN0QixlQUFlO0dBQ2YsZ0JBQWdCO0dBQ2hCO0NBQ0Y7O0FBRUE7S0FDSSxXQUFXO0tBQ1gsMEJBQTBCO0tBQzFCLGVBQWU7Q0FDbkIiLCJmaWxlIjoic3JjL2FwcC9hcHAuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi5mbGV4LWNvbnRhaW5lciB7XHJcbiAgZGlzcGxheTpmbGV4O1xyXG4gIC8qYmFja2dyb3VuZC1jb2xvcjogZ3JlZW47Ki9cclxuICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xyXG4gIGp1c3RpZnktY29udGVudDogY2VudGVyO1xyXG4gIGFsaWduLWNvbnRlbnQ6IGNlbnRlcjtcclxufVxyXG5cclxuLnZlcnRpY2FsLW1pZGRsZXtcclxuICBtYXJnaW4tdG9wOiBhdXRvO1xyXG4gIG1hcmdpbi1ib3R0b206IGF1dG87XHJcbn1cclxuXHJcbi5maWxsLXJlbWFpbmluZy1zcGFjZSB7XHJcbiAgLyogVGhpcyBmaWxscyB0aGUgcmVtYWluaW5nIHNwYWNlLCBieSB1c2luZyBmbGV4Ym94LlxyXG4gICAgIEV2ZXJ5IHRvb2xiYXIgcm93IHVzZXMgYSBmbGV4Ym94IHJvdyBsYXlvdXQuICovXHJcbiAgZmxleDogMSAxIGF1dG87XHJcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG59XHJcblxyXG4ubWFpbi1jb250ZW50IHtcclxuICB3aWR0aDoxMDAlO1xyXG4gIC8qZmxleDogMSAxIGF1dG87Ki9cclxufVxyXG5cclxuZm9vdGVyXHJcbiB7XHJcbiAgIHBvc2l0aW9uOiBmaXhlZDtcclxuICAgbGVmdDogMDtcclxuICAgYm90dG9tOiAwO1xyXG4gICB3aWR0aDogMTAwJTtcclxuICAgdGV4dC1hbGlnbjpjZW50ZXI7XHJcbiAgIGJhY2tncm91bmQtY29sb3I6ICNjY2M7XHJcbiAgIGZvbnQtc2l6ZTogMTRweDtcclxuICAgcGFkZGluZy10b3A6IDNweDtcclxuICAgcGFkZGluZy1ib3R0b206IDNweFxyXG4gfVxyXG5cclxuIC5mYWtlLWxpbmsge1xyXG4gICAgIGNvbG9yOiBibHVlO1xyXG4gICAgIHRleHQtZGVjb3JhdGlvbjogdW5kZXJsaW5lO1xyXG4gICAgIGN1cnNvcjogcG9pbnRlcjtcclxuIH1cclxuIl19 */\"","module.exports = \"<div class=\\\"flex-container\\\">\\r\\n\\r\\n  <div style =\\\"width:100%; background-color: #1f4e79; color: white;\\\">\\r\\n    <!-- <mat-toolbar color=\\\"primary\\\"> -->\\r\\n      <!-- <div class=\\\"row m-0 w-100 p-2 h-100\\\">\\r\\n        <div class=\\\"col-md-2\\\">\\r\\n            <img src=\\\"../assets/SBB.png\\\" alt=\\\"\\\" class=\\\"logo\\\">\\r\\n        </div>\\r\\n        <div class=\\\"col-md-8 text-center vertical-middle text-bold\\\">\\r\\n          {{title}} {{getDataType()}}\\r\\n        </div>\\r\\n        <div class=\\\"col-md-2 text-right vertical-middle\\\">\\r\\n            <img src=\\\"../assets/CDFW.png\\\" alt=\\\"\\\">\\r\\n        </div>\\r\\n      </div> -->\\r\\n      <div class=\\\"row m-0 w-100 p-2 h-100\\\">\\r\\n          <div class=\\\"col-md-3\\\">\\r\\n              <img src=\\\"../assets/cdfw-logo.png\\\" alt=\\\"\\\" class=\\\"logo\\\">\\r\\n          </div>\\r\\n          <div class=\\\"col-md-6 text-center vertical-middle text-bold\\\">\\r\\n            {{title}} {{getDataType()}}\\r\\n          </div>\\r\\n          <div class=\\\"col-md-3 text-right vertical-middle\\\">\\r\\n              <img src=\\\"../assets/SBB.png\\\" alt=\\\"\\\" class=\\\"logo-sbb\\\">\\r\\n          </div>\\r\\n        </div>\\r\\n      <!-- <mat-toolbar-row>\\r\\n        <img src=\\\"../assets/SBB.png\\\" alt=\\\"\\\" class=\\\"logo\\\">\\r\\n        <span class=\\\"fill-remaining-space\\\">\\r\\n           Mission Level Data Collection Tool \\r\\n        </span>\\r\\n        <img src=\\\"../assets/CDFW.png\\\" alt=\\\"\\\">\\r\\n      </mat-toolbar-row> -->\\r\\n    <!-- </mat-toolbar> -->\\r\\n  </div>\\r\\n\\r\\n  <div class = \\\"main-content\\\">\\r\\n    <router-outlet #routerOutlet=\\\"outlet\\\"> </router-outlet>\\r\\n    <ngx-spinner\\r\\n        size = \\\"default\\\"\\r\\n        color = \\\"#fff\\\"\\r\\n        type = \\\"ball-pulse\\\"\\r\\n        fullScreen = \\\"true\\\"\\r\\n        >\\r\\n        <p style=\\\"color: white\\\" > Loading... </p>\\r\\n        </ngx-spinner>\\r\\n  </div>\\r\\n  <div>\\r\\n    <footer flex>\\r\\n      <div class=\\\"footer-copyright py-1 pb-1 text-center\\\">\\r\\n        Please contact the project team at\\r\\n        <span class=\\\"fake-link\\\">sbbsupport@wildlife.ca.gov</span>\\r\\n        if you need assistance\\r\\n      </div>\\r\\n    </footer>\\r\\n  </div>\\r\\n</div>\\r\\n\"","import { Component } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { UserService } from './_services';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n  title = 'Service Based Budgeting Project Data Collection Tool';\r\n\r\n  constructor(private userService:UserService) {}\r\n\r\n  getUserDetails() {\r\n      //this.router.navigate(['/heroes']);\r\n  }\r\n\r\n  getDataType(){\r\n    if(this.userService.user != null){\r\n      if(this.userService.user['dataTypeByDataTypeId']['dataType'] == 'mission'){\r\n        return ' - Mission Level';\r\n      } else if(this.userService.user['dataTypeByDataTypeId']['dataType'] == 'current'){\r\n        return ' - Current State'\r\n      } \r\n    } \r\n    return '';\r\n  }\r\n\r\n}\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\n\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\n\r\nimport { UserModule } from './user/user.module';\r\nimport { ServiceModule } from './service/service.module';\r\nimport { LoginModule } from './login/login.module';\r\n\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\n\r\nimport {\r\n  MatButtonModule, MatCardModule, MatDialogModule, MatInputModule, MatTableModule,\r\n  MatToolbarModule, MatMenuModule, MatIconModule, MatProgressSpinnerModule, MatSidenavModule, MatSnackBarModule\r\n} from '@angular/material';\r\n\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { MatTooltipModule } from '@angular/material/tooltip';\r\nimport { NgxSpinnerModule } from 'ngx-spinner';\r\n\r\nimport { FlexLayoutModule } from \"@angular/flex-layout\";\r\nimport { InputsComponent } from './service/inputs/inputs.component';\r\nimport { AuthenticationService } from './_services/authentication.service'\r\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { UserService } from './_services';\r\n\r\nimport 'hammerjs';\r\nimport { HttpErrorInterceptor } from './_services/error-interceptor';\r\nimport { MatSnackBarComponent } from './service/mat-snack-bar/mat-snack-bar.component';\r\nimport { AuthInterceptor } from './_services/http.interceptor';\r\nimport { ResestPasswordDialog } from './login/login-form/login-form.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    MatSnackBarComponent,\r\n    ResestPasswordDialog\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    AppRoutingModule,\r\n    HttpClientModule,\r\n    //material\r\n\r\n    BrowserAnimationsModule,\r\n    MatFormFieldModule,\r\n    MatToolbarModule,\r\n    MatButtonModule,\r\n    MatCardModule,\r\n    MatInputModule,\r\n    MatDialogModule,\r\n    MatTableModule,\r\n    MatMenuModule,\r\n    MatIconModule,\r\n    MatProgressSpinnerModule,\r\n    MatSidenavModule,\r\n    MatTooltipModule,\r\n    FlexLayoutModule,\r\n    UserModule,\r\n    ServiceModule,\r\n    LoginModule,\r\n    MatSnackBarModule,\r\n    NgxSpinnerModule\r\n  ],\r\n  providers: [{\r\n    provide: HTTP_INTERCEPTORS,\r\n    useClass: HttpErrorInterceptor,\r\n    multi: true,\r\n  },\r\n  {\r\n    provide: HTTP_INTERCEPTORS,\r\n    useClass: AuthInterceptor,\r\n    multi: true,\r\n  },\r\n    AuthenticationService, UserService, MatSnackBarComponent],\r\n  bootstrap: [AppComponent],\r\n  entryComponents: [InputsComponent, ResestPasswordDialog]\r\n})\r\nexport class AppModule { }\r\n","module.exports = \".loginForm {\\r\\n  min-height: 50vh;\\r\\n  padding-top: 80px;\\r\\n  width: 350px;\\r\\n  margin: auto;\\r\\n}\\r\\n\\r\\n.text-center {\\r\\n  text-align: center;\\r\\n}\\r\\n\\r\\n.login-table {\\r\\n  width: 85%;\\r\\n  margin: auto;\\r\\n}\\r\\n\\r\\n.login-table .mat-form-field {\\r\\n  width: 100%;\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbG9naW4vbG9naW4tZm9ybS9sb2dpbi1mb3JtLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxnQkFBZ0I7RUFDaEIsaUJBQWlCO0VBQ2pCLFlBQVk7RUFDWixZQUFZO0FBQ2Q7O0FBRUE7RUFDRSxrQkFBa0I7QUFDcEI7O0FBRUE7RUFDRSxVQUFVO0VBQ1YsWUFBWTtBQUNkOztBQUVBO0VBQ0UsV0FBVztBQUNiIiwiZmlsZSI6InNyYy9hcHAvbG9naW4vbG9naW4tZm9ybS9sb2dpbi1mb3JtLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIubG9naW5Gb3JtIHtcclxuICBtaW4taGVpZ2h0OiA1MHZoO1xyXG4gIHBhZGRpbmctdG9wOiA4MHB4O1xyXG4gIHdpZHRoOiAzNTBweDtcclxuICBtYXJnaW46IGF1dG87XHJcbn1cclxuXHJcbi50ZXh0LWNlbnRlciB7XHJcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG59XHJcblxyXG4ubG9naW4tdGFibGUge1xyXG4gIHdpZHRoOiA4NSU7XHJcbiAgbWFyZ2luOiBhdXRvO1xyXG59XHJcblxyXG4ubG9naW4tdGFibGUgLm1hdC1mb3JtLWZpZWxkIHtcclxuICB3aWR0aDogMTAwJTtcclxufSJdfQ== */\"","module.exports = \"<form class=\\\"loginForm\\\" [formGroup]=\\\"loginForm\\\">\\r\\n  <mat-card>\\r\\n    <mat-card-header>\\r\\n      <mat-card-title>Login</mat-card-title>\\r\\n    </mat-card-header>\\r\\n    <mat-card-content>\\r\\n      <table cellspacing=\\\"0\\\" class=\\\"login-table\\\">\\r\\n        <tr>\\r\\n          <td>\\r\\n            <div class=\\\"form-group\\\">\\r\\n              <mat-form-field>\\r\\n                <input matInput placeholder=\\\"Username\\\" name=\\\"username\\\" required formControlName=\\\"username\\\">\\r\\n                <mat-error\\r\\n                  *ngIf=\\\"loginForm.controls['username'].errors?.required && loginForm.controls['username'].touched\\\">\\r\\n                  Username is <strong>required</strong>\\r\\n                </mat-error>\\r\\n              </mat-form-field>\\r\\n            </div>\\r\\n          </td>\\r\\n        </tr>\\r\\n        <tr>\\r\\n          <td>\\r\\n            <mat-form-field>\\r\\n              <input matInput placeholder=\\\"Password\\\" type=\\\"password\\\" name=\\\"password\\\" formControlName=\\\"password\\\"\\r\\n                required>\\r\\n              <mat-error\\r\\n                *ngIf=\\\"loginForm.controls['password'].errors?.required && loginForm.controls['password'].touched\\\">\\r\\n                Password is <strong>required</strong>\\r\\n              </mat-error>\\r\\n            </mat-form-field>\\r\\n          </td>\\r\\n        </tr>\\r\\n        <tr>\\r\\n          <td>\\r\\n            <span style=\\\"color:red;\\\" *ngIf=\\\"errMsg != null\\\">{{errMsg}}</span>\\r\\n          </td>\\r\\n        </tr>\\r\\n      </table>\\r\\n      <mat-spinner [style.display]=\\\"showSpinner ? 'block' : 'none'\\\"></mat-spinner>\\r\\n    </mat-card-content>\\r\\n    <mat-card-actions class=\\\"text-center\\\">\\r\\n      <button type=\\\"button\\\" mat-raised-button (click)=\\\"resetPassword()\\\">Reset Password</button>\\r\\n      <button type=\\\"submit\\\" mat-raised-button color=\\\"primary\\\" (click)=\\\"onSubmit()\\\">Login</button>\\r\\n    </mat-card-actions>\\r\\n  </mat-card>\\r\\n</form>\\r\\n\"","import { Component, OnInit, Inject } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { AuthenticationService } from '../../_services/authentication.service';\r\nimport { FormBuilder, FormGroup, Validators, FormControl, FormGroupDirective, NgForm } from '@angular/forms';\r\nimport { UserService } from 'src/app/_services';\r\nimport { MatSnackBarComponent } from 'src/app/service/mat-snack-bar/mat-snack-bar.component';\r\nimport { MAT_DIALOG_DATA, MatDialogRef, MatDialog, ErrorStateMatcher } from '@angular/material';\r\n\r\n\r\n@Component({\r\n  selector: 'app-login-form',\r\n  templateUrl: './login-form.component.html',\r\n  styleUrls: ['./login-form.component.css']\r\n})\r\nexport class LoginFormComponent implements OnInit {\r\n\r\n  show: boolean = false;\r\n  userName: FormControl;\r\n  password: FormControl;\r\n  loginForm: FormGroup;\r\n  errMsg: string = null;\r\n\r\n  constructor(private router: Router, private authenticationService: AuthenticationService,\r\n    private formBuilder: FormBuilder, private userService: UserService, private dialog: MatDialog,\r\n    private snackBar: MatSnackBarComponent) { }\r\n\r\n  ngOnInit() {\r\n    this.loginForm = this.formBuilder.group({\r\n      username: new FormControl('', Validators.required),\r\n      password: new FormControl('', Validators.required)\r\n    });\r\n    // reset login status\r\n    this.authenticationService.logout();\r\n  }\r\n\r\n  // convenience getter for easy access to form fields\r\n  get f() { return this.loginForm.controls; }\r\n\r\n  login() {\r\n    this.router.navigate(['service']);\r\n  }\r\n\r\n  onSubmit() {\r\n    if (this.loginForm.valid) {\r\n      this.authenticationService.login(this.f.username.value, this.f.password.value).then(\r\n        isMission => {\r\n          if (isMission) {\r\n            var mappedRegions = this.userService.user['userRegionMappingsById'];\r\n            if (mappedRegions.length > 0) {\r\n              let userRegion = mappedRegions[0]['regionByRegionId']['regionName'];\r\n              this.router.navigate(['service', userRegion]);\r\n            } else {\r\n              //  this.snackBar.openSnackBar( `User ${this.f.username.value} does not have access to any region.`, 'Close', \"red-snackbar\");\r\n              this.errMsg = `User ${this.f.username.value} does not have access to any region. `;\r\n              this.router.navigate(['login']);\r\n            }\r\n          } else {\r\n            // this.snackBar.openSnackBar( \"Invalid Credentials\", 'Close', \"red-snackbar\");\r\n            this.errMsg = \"Invalid Credentials\";\r\n            this.router.navigate(['login']);\r\n          }\r\n        }\r\n      );\r\n    }\r\n  }\r\n\r\n  resetPassword() {\r\n    const dialogRef = this.dialog.open(ResestPasswordDialog, {\r\n      width: '500px',\r\n      data: { confirm: 'No' }\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe(result => {\r\n    });\r\n  }\r\n}\r\n\r\n\r\n@Component({\r\n  selector: 'reset-password-dialog',\r\n  templateUrl: 'reset-password-dialog.html',\r\n})\r\nexport class ResestPasswordDialog {\r\n\r\n  resetForm: FormGroup;\r\n  errorMsg: string;\r\n\r\n  constructor(\r\n    public dialogRef: MatDialogRef<ResestPasswordDialog>, private authenticationService: AuthenticationService, private snackBar: MatSnackBarComponent,\r\n    @Inject(MAT_DIALOG_DATA) public data: any) { }\r\n\r\n  ngOnInit() {\r\n    this.resetForm = new FormGroup({\r\n      userName: new FormControl('', Validators.required),\r\n      password: new FormControl('', Validators.required),\r\n      newPassword: new FormControl('', Validators.required),\r\n      confirmPassword: new FormControl('', Validators.required)\r\n    });\r\n  }\r\n\r\n  checkPasswords() {\r\n    let pass = this.resetForm.controls.newPassword.value;\r\n    let confirmPass = this.resetForm.controls.confirmPassword.value;\r\n    if (pass === confirmPass) {\r\n      return true;\r\n    } else {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  resetPassword() {\r\n    if (this.checkPasswords() == false) {\r\n      this.resetForm.controls['confirmPassword'].setErrors({ 'incorrect': true });\r\n    } else {\r\n      this.resetForm.controls['confirmPassword'].setErrors(null);\r\n      this.authenticationService.resetPassword(this.resetForm.controls['userName'].value, this.resetForm.controls['password'].value, this.resetForm.controls['newPassword'].value)\r\n        .subscribe(res => {\r\n          if (res != null) {\r\n            this.snackBar.openSnackBar(\"Password saved successfully\", 'Close', \"green-snackbar\");\r\n            this.closeDialog('Yes');\r\n          } else {\r\n            this.errorMsg = \"Invalid user credentials\"\r\n          }\r\n        })\r\n    }\r\n  }\r\n\r\n  closeDialog(confirm): void {\r\n    this.dialogRef.close({ 'confirm': confirm });\r\n  }\r\n\r\n}","module.exports = \"<h1 mat-dialog-title>Reset Password</h1>\\r\\n<div mat-dialog-content style=\\\"min-height:200px;\\\">\\r\\n  <p *ngIf=\\\"errorMsg != null\\\" style=\\\"color:red\\\">{{errorMsg}}</p>\\r\\n  <form class=\\\"resetForm\\\" [formGroup]=\\\"resetForm\\\">\\r\\n    <mat-form-field class=\\\"p-2\\\">\\r\\n      <input matInput placeholder=\\\"Username\\\" name=\\\"userName\\\" required formControlName=\\\"userName\\\">\\r\\n      <mat-error>\\r\\n        Username is <strong>required</strong>\\r\\n      </mat-error>\\r\\n    </mat-form-field>\\r\\n\\r\\n    <mat-form-field class=\\\"p-2\\\">\\r\\n      <input matInput placeholder=\\\"Password\\\" type=\\\"password\\\" name=\\\"password\\\" formControlName=\\\"password\\\" required>\\r\\n      <mat-error>\\r\\n        Password is <strong>required</strong>\\r\\n      </mat-error>\\r\\n    </mat-form-field>\\r\\n\\r\\n    <mat-form-field class=\\\"p-2\\\">\\r\\n      <input matInput placeholder=\\\"New Password\\\" type=\\\"password\\\" name=\\\"newPassword\\\" formControlName=\\\"newPassword\\\"\\r\\n        required minlength=\\\"6\\\" maxlength=\\\"15\\\">\\r\\n      <mat-error\\r\\n        *ngIf=\\\"resetForm.controls['newPassword'].errors != null && resetForm.controls['newPassword'].errors.required\\\">\\r\\n        Password is <strong>required</strong>\\r\\n      </mat-error>\\r\\n      <mat-error\\r\\n        *ngIf=\\\"resetForm.controls['newPassword'].errors != null && resetForm.controls['newPassword'].errors.minlength\\\">\\r\\n        Password length must match be minimum of 6\\r\\n      </mat-error>\\r\\n    </mat-form-field>\\r\\n\\r\\n    <mat-form-field class=\\\"p-2\\\">\\r\\n      <input matInput placeholder=\\\"Confirm Password\\\" type=\\\"password\\\" name=\\\"confirmPassword\\\"\\r\\n        formControlName=\\\"confirmPassword\\\" required minlength=\\\"6\\\" maxlength=\\\"15\\\">\\r\\n      <mat-error\\r\\n        *ngIf=\\\"resetForm.controls['confirmPassword'].errors != null && resetForm.controls['confirmPassword'].errors.required\\\">\\r\\n        Password is <strong>required</strong>\\r\\n      </mat-error>\\r\\n      <mat-error\\r\\n        *ngIf=\\\"resetForm.controls['confirmPassword'].errors != null && resetForm.controls['confirmPassword'].errors.incorrect\\\">\\r\\n        Password must match with new password\\r\\n      </mat-error>\\r\\n      <mat-error\\r\\n        *ngIf=\\\"resetForm.controls['confirmPassword'].errors != null && resetForm.controls['confirmPassword'].errors.minlength\\\">\\r\\n        Password length must match be minimum of 6\\r\\n      </mat-error>\\r\\n    </mat-form-field>\\r\\n  </form>\\r\\n</div>\\r\\n<div class=\\\"text-center\\\">\\r\\n  <button mat-raised-button (click)=\\\"closeDialog('No')\\\" class=\\\"mr-2\\\">Cancel</button>\\r\\n  <button mat-raised-button color=\\\"primary\\\" (click)=\\\"resetPassword()\\\" [disabled]=\\\"!resetForm.valid\\\">Reset</button>\\r\\n</div>\"","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class LoginRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { LoginRoutingModule } from './login-routing.module';\nimport { LoginFormComponent } from './login-form/login-form.component';\nimport { FormsModule, ReactiveFormsModule} from '@angular/forms';\n\n\nimport {\n  MatButtonModule, MatCardModule, MatDialogModule, MatInputModule, MatTableModule,\n  MatToolbarModule, MatMenuModule,MatIconModule, MatProgressSpinnerModule\n} from '@angular/material';\n\nimport { BrowserAnimationsModule} from '@angular/platform-browser/animations';\n\n@NgModule({\n  declarations: [LoginFormComponent],\n  imports: [\n    CommonModule,\n    LoginRoutingModule,\n    MatButtonModule,\n    MatCardModule,\n    MatDialogModule,\n     MatInputModule,\n     MatTableModule,\n     MatToolbarModule,\n     MatMenuModule,\n     MatIconModule,\n     MatProgressSpinnerModule,\n     BrowserAnimationsModule,\n     FormsModule,\n     ReactiveFormsModule\n  ]\n})\nexport class LoginModule { }\n","module.exports = \".highlight{\\r\\n  background: #ddd;\\r\\n}\\r\\n\\r\\n.mat-row:hover{\\r\\n  background-color: #EEE;\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvc2VydmljZS9pbnB1dHMvaW5wdXRzLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxnQkFBZ0I7QUFDbEI7O0FBRUE7RUFDRSxzQkFBc0I7QUFDeEIiLCJmaWxlIjoic3JjL2FwcC9zZXJ2aWNlL2lucHV0cy9pbnB1dHMuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi5oaWdobGlnaHR7XHJcbiAgYmFja2dyb3VuZDogI2RkZDtcclxufVxyXG5cclxuLm1hdC1yb3c6aG92ZXJ7XHJcbiAgYmFja2dyb3VuZC1jb2xvcjogI0VFRTtcclxufSJdfQ== */\"","module.exports = \"<div>\\r\\n  <mat-card>\\r\\n  <mat-card-header>\\r\\n      <mat-card-title>Review Inputs</mat-card-title>\\r\\n  </mat-card-header>\\r\\n  <mat-card-content>\\r\\n  <table mat-table [dataSource]=\\\"inputs\\\" class=\\\"mat-elevation-z8 w-100\\\">\\r\\n    <!-- Position Column -->\\r\\n    <ng-container matColumnDef=\\\"name\\\">\\r\\n      <th mat-header-cell *matHeaderCellDef> Respondent Name </th>\\r\\n      <td mat-cell *matCellDef=\\\"let element\\\"> {{element.userById.userName}}  </td>\\r\\n    </ng-container>\\r\\n\\r\\n    <!-- Position Column -->\\r\\n    <ng-container matColumnDef=\\\"value\\\">\\r\\n      <th mat-header-cell *matHeaderCellDef> Input Value </th>\\r\\n      <td mat-cell *matCellDef=\\\"let element\\\"> {{element.inputValue}} </td>\\r\\n    </ng-container>\\r\\n\\r\\n    <!-- Position Column -->\\r\\n    <ng-container matColumnDef=\\\"status\\\">\\r\\n      <th mat-header-cell *matHeaderCellDef> Status </th>\\r\\n      <td mat-cell *matCellDef=\\\"let element\\\"> {{element.statusBySttsId.statusCode}} </td>\\r\\n    </ng-container>\\r\\n\\r\\n    <!-- Position Column -->\\r\\n    <ng-container matColumnDef=\\\"approverName\\\">\\r\\n      <th mat-header-cell *matHeaderCellDef> Validated By </th>\\r\\n      <td mat-cell *matCellDef=\\\"let element\\\"> <div *ngIf=\\\"element.userByApproverId != undefined\\\"> {{element.userByApproverId.userName}} </div> </td>\\r\\n    </ng-container>\\r\\n\\r\\n    <tr mat-header-row *matHeaderRowDef=\\\"inputDisplayedColumns\\\"></tr>\\r\\n    <tr mat-row *matRowDef=\\\"let row; columns: inputDisplayedColumns;\\\"\\r\\n            [ngClass]=\\\"{'highlight': selectedRowIndex == row.id}\\\"\\r\\n            (click)=\\\"highlight(row)\\\">\\r\\n    </tr>\\r\\n  </table>\\r\\n  </mat-card-content>\\r\\n  <mat-card-actions class=\\\"text-center\\\">\\r\\n    <button mat-raised-button color=\\\"primary\\\" (click)=\\\"approveResponse()\\\" [disabled]=\\\"this.selectedRow != undefined && this.selectedRow.taskStatus == 'Approved'\\\">Select</button>\\r\\n    <button mat-raised-button color=\\\"primary\\\" (click)=\\\"provideYourInput()\\\">Provide your own Input</button>\\r\\n  </mat-card-actions>\\r\\n  </mat-card>\\r\\n</div>\\r\\n\"","import { Component, OnInit, AfterViewInit, Inject } from '@angular/core';\r\nimport { ServiceMatrixService } from '../service-matrix.service';\r\nimport { MatDialogRef, MAT_DIALOG_DATA, MatTableDataSource } from '@angular/material';\r\nimport { UserService } from 'src/app/_services';\r\nimport { Router } from '@angular/router';\r\nimport { MatSnackBarComponent } from '../mat-snack-bar/mat-snack-bar.component';\r\n\r\n@Component({\r\n  selector: 'app-inputs',\r\n  templateUrl: './inputs.component.html',\r\n  styleUrls: ['./inputs.component.css']\r\n})\r\nexport class InputsComponent implements OnInit  {\r\n\r\n  selectedRowIndex: number = -1;\r\n  selectedRow: any;\r\n  selectedRegionObject: any;\r\n  user: any;\r\n  inputs = new MatTableDataSource<Object>();\r\n  inputDisplayedColumns: string[] = [ \"value\", \"name\", \"status\", \"approverName\"];\r\n  approvedInput: number;\r\n\r\n  errorMessage: string = null;\r\n  successMessage: string = null;\r\n\r\n  constructor(private serviceMatrix : ServiceMatrixService,\r\n              public dialogRef : MatDialogRef<InputsComponent>,\r\n              private userService:UserService,\r\n            @Inject(MAT_DIALOG_DATA) public data: any,\r\n          private router: Router, private snackBar: MatSnackBarComponent\r\n         ) {\r\n\r\n          }\r\n\r\n  ngOnInit() {\r\n    this.user = this.userService.user;\r\n    this.selectedRegionObject = this.userService.getSelectedRegionObject(this.data.regionName);\r\n    this.fetchInputs();\r\n  }\r\n\r\n  fetchInputs(){\r\n    let _self = this;\r\n    this.serviceMatrix.fetchInputs(this.selectedRegionObject.regionId, this.data.taskId ).subscribe(\r\n    data => {\r\n      _self.inputs.data = data as Object[];\r\n    },\r\n    err => {\r\n      this.errorMessage = \"Error fectching input values. Please try again later.\"\r\n    });\r\n  }\r\n\r\n  approveResponse(){\r\n    this.serviceMatrix.selectedRowIndex = this.selectedRowIndex;\r\n    let _self = this;\r\n    this.serviceMatrix.selectInput(this.selectedRegionObject.regionId, this.data.taskId,this.selectedRow.id, this.userService.userId).subscribe(\r\n    data => {\r\n      _self.approvedInput = Number(data);\r\n      this.snackBar.openSnackBar( \"Selected Input is approved\", 'Close', \"green-snackbar\");\r\n      this.dialogRef.close(this.data);\r\n    },\r\n    err => {\r\n        this.snackBar.openSnackBar( \"Error saving selected input\", 'Close', \"red-snackbar\");\r\n        this.onClose();\r\n    });\r\n  }\r\n\r\n  provideYourInput() {\r\n    this.onClose();\r\n  }\r\n\r\n  highlight(row){\r\n    var myJSON = JSON.stringify(row);\r\n    this.selectedRowIndex = row.id;\r\n    this.selectedRow = row;\r\n  }\r\n\r\n  onClose() {\r\n    this.dialogRef.close();\r\n  }\r\n\r\n  /*openSnackBar(message: string, action: string) {\r\n  let config = new MatSnackBarConfig();\r\n   config.verticalPosition = 'bottom';\r\n   config.horizontalPosition = 'right';\r\n   config.duration = 2000;\r\n    this.snackBar.open(message, action, config);\r\n  } */\r\n\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3NlcnZpY2UvbWF0LXNuYWNrLWJhci9tYXQtc25hY2stYmFyLmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<p>\\r\\n  mat-snack-bar works!\\r\\n</p>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport {MatSnackBar} from '@angular/material';\r\n\r\n@Component({\r\n  selector: 'app-mat-snack-bar',\r\n  templateUrl: './mat-snack-bar.component.html',\r\n  styleUrls: ['./mat-snack-bar.component.css']\r\n})\r\nexport class MatSnackBarComponent implements OnInit {\r\n\r\n  constructor(private snackBar: MatSnackBar) { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  // this function will open up snackbar on top right position with custom background color (defined in css)\r\nopenSnackBar(message: string, action: string, className: string) {\r\n    this.snackBar.open(message, action, {\r\n     duration: 4000,\r\n     verticalPosition: 'bottom',\r\n     horizontalPosition: 'right',\r\n     panelClass: [className],\r\n    });\r\n}\r\n\r\n}\r\n","module.exports = \"mat-cell,\\r\\n.mat-cell,\\r\\nmat-footer-cell,\\r\\n.mat-footer-cell,\\r\\nmat-header-cell, .mat-header-cell {\\r\\n  padding: 0.75rem !important;\\r\\n}\\r\\n\\r\\ntable, mat-paginator {\\r\\n  width: 90%;\\r\\n}\\r\\n\\r\\nmat-header-cell {\\r\\n  display:flex;\\r\\n  justify-content:flex-end;\\r\\n }\\r\\n\\r\\n.mat-form-field {\\r\\n   font-size: 14px;\\r\\n   width: 50%;\\r\\n }\\r\\n\\r\\n.mat-row:hover {\\r\\n  background-color: #DDD;\\r\\n}\\r\\n\\r\\n.example-fill-remaining-space {\\r\\n  /* This fills the remaining space, by using flexbox.\\r\\n     Every toolbar row uses a flexbox row layout. */\\r\\n  flex: 1 1 auto;\\r\\n}\\r\\n\\r\\nmat-toolbar  span, mat-toolbar  a  span {\\r\\n  font-size: 10pt;\\r\\n}\\r\\n\\r\\n.table-col-title {\\r\\n  font-weight: 500;\\r\\n  color: black;\\r\\n  font-size: 14px;\\r\\n}\\r\\n\\r\\n.table-col-header {\\r\\n  font-size: 12px;\\r\\n}\\r\\n\\r\\n.filter-input{\\r\\n  width: 75%;\\r\\n  text-align: left;\\r\\n}\\r\\n\\r\\n.th-header-background{\\r\\n  background: #1f4e79;\\r\\n  color: white;\\r\\n  font-size: 14px;\\r\\n}\\r\\n\\r\\n.help-text-icon {\\r\\n  font-size: 14px;\\r\\n}\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvc2VydmljZS9tYXRyaXgtZGV0YWlscy9tYXRyaXgtZGV0YWlscy5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOzs7OztFQUtFLDJCQUEyQjtBQUM3Qjs7QUFFQTtFQUNFLFVBQVU7QUFDWjs7QUFFQTtFQUNFLFlBQVk7RUFDWix3QkFBd0I7Q0FDekI7O0FBRUE7R0FDRSxlQUFlO0dBQ2YsVUFBVTtDQUNaOztBQUVBO0VBQ0Msc0JBQXNCO0FBQ3hCOztBQUVBO0VBQ0U7bURBQ2lEO0VBQ2pELGNBQWM7QUFDaEI7O0FBRUE7RUFDRSxlQUFlO0FBQ2pCOztBQUVBO0VBQ0UsZ0JBQWdCO0VBQ2hCLFlBQVk7RUFDWixlQUFlO0FBQ2pCOztBQUVBO0VBQ0UsZUFBZTtBQUNqQjs7QUFFQTtFQUNFLFVBQVU7RUFDVixnQkFBZ0I7QUFDbEI7O0FBRUE7RUFDRSxtQkFBbUI7RUFDbkIsWUFBWTtFQUNaLGVBQWU7QUFDakI7O0FBRUE7RUFDRSxlQUFlO0FBQ2pCIiwiZmlsZSI6InNyYy9hcHAvc2VydmljZS9tYXRyaXgtZGV0YWlscy9tYXRyaXgtZGV0YWlscy5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsibWF0LWNlbGwsXHJcbi5tYXQtY2VsbCxcclxubWF0LWZvb3Rlci1jZWxsLFxyXG4ubWF0LWZvb3Rlci1jZWxsLFxyXG5tYXQtaGVhZGVyLWNlbGwsIC5tYXQtaGVhZGVyLWNlbGwge1xyXG4gIHBhZGRpbmc6IDAuNzVyZW0gIWltcG9ydGFudDtcclxufVxyXG5cclxudGFibGUsIG1hdC1wYWdpbmF0b3Ige1xyXG4gIHdpZHRoOiA5MCU7XHJcbn1cclxuXHJcbm1hdC1oZWFkZXItY2VsbCB7XHJcbiAgZGlzcGxheTpmbGV4O1xyXG4gIGp1c3RpZnktY29udGVudDpmbGV4LWVuZDtcclxuIH1cclxuXHJcbiAubWF0LWZvcm0tZmllbGQge1xyXG4gICBmb250LXNpemU6IDE0cHg7XHJcbiAgIHdpZHRoOiA1MCU7XHJcbiB9XHJcblxyXG4gLm1hdC1yb3c6aG92ZXIge1xyXG4gIGJhY2tncm91bmQtY29sb3I6ICNEREQ7XHJcbn1cclxuXHJcbi5leGFtcGxlLWZpbGwtcmVtYWluaW5nLXNwYWNlIHtcclxuICAvKiBUaGlzIGZpbGxzIHRoZSByZW1haW5pbmcgc3BhY2UsIGJ5IHVzaW5nIGZsZXhib3guXHJcbiAgICAgRXZlcnkgdG9vbGJhciByb3cgdXNlcyBhIGZsZXhib3ggcm93IGxheW91dC4gKi9cclxuICBmbGV4OiAxIDEgYXV0bztcclxufVxyXG5cclxubWF0LXRvb2xiYXIgIHNwYW4sIG1hdC10b29sYmFyICBhICBzcGFuIHtcclxuICBmb250LXNpemU6IDEwcHQ7XHJcbn1cclxuXHJcbi50YWJsZS1jb2wtdGl0bGUge1xyXG4gIGZvbnQtd2VpZ2h0OiA1MDA7XHJcbiAgY29sb3I6IGJsYWNrO1xyXG4gIGZvbnQtc2l6ZTogMTRweDtcclxufVxyXG5cclxuLnRhYmxlLWNvbC1oZWFkZXIge1xyXG4gIGZvbnQtc2l6ZTogMTJweDtcclxufVxyXG5cclxuLmZpbHRlci1pbnB1dHtcclxuICB3aWR0aDogNzUlO1xyXG4gIHRleHQtYWxpZ246IGxlZnQ7XHJcbn1cclxuXHJcbi50aC1oZWFkZXItYmFja2dyb3VuZHtcclxuICBiYWNrZ3JvdW5kOiAjMWY0ZTc5O1xyXG4gIGNvbG9yOiB3aGl0ZTtcclxuICBmb250LXNpemU6IDE0cHg7XHJcbn1cclxuXHJcbi5oZWxwLXRleHQtaWNvbiB7XHJcbiAgZm9udC1zaXplOiAxNHB4O1xyXG59XHJcbiJdfQ== */\"","module.exports = \"<div align=\\\"center\\\" class=\\\"mb-4\\\">\\r\\n    <mat-toolbar>\\r\\n        <div class=\\\"row w-100 m-0\\\">\\r\\n        <div class=\\\"col-md-6 text-left\\\">\\r\\n        <span> <b>Task Catalog</b> </span>\\r\\n\\r\\n        <button mat-button color=\\\"primary\\\" matTooltip=\\\"User Info\\\" style=\\\"cursor:default;\\\">\\r\\n            <mat-icon>account_box</mat-icon>\\r\\n            {{user.userName}}\\r\\n          </button>\\r\\n          <button mat-button color=\\\"primary\\\" matTooltip=\\\"Region\\\" style=\\\"cursor:default;\\\">\\r\\n              <mat-icon>language</mat-icon>\\r\\n              {{selectedRegion}}\\r\\n            </button>\\r\\n        </div>\\r\\n        <div class=\\\"col-md-6 text-right\\\">\\r\\n          <span> <b>Actions: </b></span>\\r\\n          <button mat-button color = \\\"primary\\\" [matMenuTriggerFor]=\\\"region\\\">\\r\\n              <mat-icon>language</mat-icon>\\r\\n              Pick a different region\\r\\n          </button>\\r\\n\\r\\n          <mat-menu #region=\\\"matMenu\\\">\\r\\n            <button mat-menu-item *ngFor=\\\"let item of regionList\\\"\\r\\n            (click)=\\\"chooseRegion(item.regionByRegionId.regionName)\\\"> {{item.regionByRegionId.regionName}} </button>\\r\\n          </mat-menu>\\r\\n\\r\\n          \\r\\n          <a mat-button color=\\\"primary\\\" title=\\\"Provide Feedback\\\" target=\\\"_new\\\" href=\\\"https://deloitteus.sharefile.com/home/shared/fo8dafd8-6efd-428c-aa4f-2e7bf8643f16\\\">\\r\\n              <mat-icon>feedback</mat-icon>\\r\\n          </a>\\r\\n          <a mat-button color=\\\"primary\\\" title=\\\"Training Materials\\\" target=\\\"_new\\\" href=\\\"https://deloitteus.sharefile.com/home/shared/fo8dafd8-6efd-428c-aa4f-2e7bf8643f16\\\">\\r\\n              <mat-icon>file_copy</mat-icon>\\r\\n          </a>\\r\\n\\r\\n          <button mat-button color = \\\"primary\\\" (click)=\\\"backToLogin()\\\">\\r\\n              <mat-icon>power_settings_new</mat-icon>\\r\\n              Logout\\r\\n          </button>\\r\\n        </div>\\r\\n        </div>\\r\\n      </mat-toolbar>\\r\\n  <!-- <mat-toolbar >\\r\\n    <h4> Task Catalog &nbsp;&nbsp; </h4>\\r\\n    <mat-icon matListAvatar color=\\\"primary\\\" matTooltip = \\\"User Info\\\">account_box</mat-icon>\\r\\n    <span>{{user.userName}} &nbsp;&nbsp;</span>\\r\\n    <mat-icon matListAvatar color=\\\"primary\\\">language</mat-icon>\\r\\n    <span > {{selectedRegion}} &nbsp;&nbsp;</span>\\r\\n    <span class=\\\"example-fill-remaining-space\\\"></span>\\r\\n    <span> <b>Actions: </b> </span>\\r\\n    <button mat-button color = \\\"primary\\\" [matMenuTriggerFor]=\\\"region\\\">\\r\\n        <mat-icon>language</mat-icon>\\r\\n        Pick a different region\\r\\n    </button>\\r\\n\\r\\n    <mat-menu #region=\\\"matMenu\\\">\\r\\n      <button mat-menu-item *ngFor=\\\"let item of regionList\\\"\\r\\n      (click)=\\\"chooseRegion(item.regionByRegionId.regionName)\\\"> {{item.regionByRegionId.regionName}} </button>\\r\\n    </mat-menu>\\r\\n\\r\\n    <button mat-button color = \\\"primary\\\" (click)=\\\"backToLogin()\\\">\\r\\n        <mat-icon>power_settings_new</mat-icon>\\r\\n        Logout\\r\\n    </button>\\r\\n\\r\\n  </mat-toolbar> -->\\r\\n\\r\\n  <mat-form-field>\\r\\n    <input matInput (keyup)=\\\"applyFilter($event.target.value)\\\" placeholder=\\\"Filter\\\" [(ngModel)] = \\\"globalFilter\\\">\\r\\n  </mat-form-field>\\r\\n  <button mat-button color=\\\"primary\\\" (click)=\\\"clearAllFilters()\\\">Clear All Filters</button>\\r\\n  \\r\\n  <table mat-table [dataSource] = \\\"dataSource\\\" matSort class=\\\"mat-elevation-z8\\\">\\r\\n    <ng-container matColumnDef =\\\"taskId\\\">\\r\\n      <th mat-header-cell *matHeaderCellDef mat-sort-header class=\\\"th-header-background\\\">Task ID</th>\\r\\n      <td mat-cell *matCellDef= \\\"let element\\\">\\r\\n        {{element.taskId}}\\r\\n      </td>\\r\\n    </ng-container>\\r\\n\\r\\n   <ng-container matColumnDef =\\\"serviceName\\\">\\r\\n      <th mat-header-cell *matHeaderCellDef mat-sort-header class=\\\"th-header-background\\\">Service</th>\\r\\n      <td mat-cell *matCellDef= \\\"let element\\\">\\r\\n        {{element.serviceName}}\\r\\n      </td>\\r\\n    </ng-container>\\r\\n\\r\\n   <ng-container matColumnDef =\\\"program\\\">\\r\\n      <th mat-header-cell *matHeaderCellDef mat-sort-header class=\\\"th-header-background\\\">Program</th>\\r\\n      <td mat-cell *matCellDef= \\\"let element\\\">\\r\\n        {{element.program}}\\r\\n      </td>\\r\\n    </ng-container>\\r\\n\\r\\n   <ng-container matColumnDef =\\\"subProgram\\\">\\r\\n       <th mat-header-cell *matHeaderCellDef mat-sort-header class=\\\"th-header-background\\\">Sub Program</th>\\r\\n       <td mat-cell *matCellDef= \\\"let element\\\">\\r\\n         {{element.subProgram}}\\r\\n       </td>\\r\\n     </ng-container>\\r\\n\\r\\n     <ng-container matColumnDef =\\\"taskCategory\\\">\\r\\n        <th mat-header-cell *matHeaderCellDef mat-sort-header class=\\\"th-header-background\\\">Task Category</th>\\r\\n        <td mat-cell *matCellDef= \\\"let element\\\">\\r\\n          {{element.taskCategory}}\\r\\n        </td>\\r\\n      </ng-container>\\r\\n\\r\\n      <ng-container matColumnDef =\\\"taskName\\\">\\r\\n         <th mat-header-cell *matHeaderCellDef mat-sort-header class=\\\"th-header-background\\\">Task</th>\\r\\n         <td mat-cell *matCellDef= \\\"let element\\\">\\r\\n           {{element.taskName}}\\r\\n         </td>\\r\\n       </ng-container>\\r\\n\\r\\n    <ng-container matColumnDef=\\\"myInput\\\">\\r\\n     <th mat-header-cell *matHeaderCellDef mat-sort-header class=\\\"th-header-background\\\"\\r\\n      matTooltip=\\\"Displays the input you provided, if applicable. You may select the task in question to update your prior entry if necessary. \\\"\\r\\n     >\\r\\n       My Input <i class=\\\"material-icons help-text-icon\\\"\\r\\n       placement=\\\"bottom\\\"\\r\\n       >help</i>\\r\\n      </th>\\r\\n     <td mat-cell *matCellDef=\\\"let element\\\">\\r\\n             {{element.myInput}}\\r\\n     </td>\\r\\n   </ng-container>\\r\\n\\r\\n   <!--<ng-container matColumnDef =\\\"approved\\\">\\r\\n      <th mat-header-cell *matHeaderCellDef mat-sort-header class=\\\"th-header-background\\\">Approved</th>\\r\\n      <td mat-cell *matCellDef= \\\"let element\\\">\\r\\n        <button mat-icon-button color=\\\"primary\\\" >\\r\\n            <mat-icon class=\\\"mat-18\\\">done_all</mat-icon>\\r\\n        </button>\\r\\n      </td>\\r\\n    </ng-container> -->\\r\\n\\r\\n   <ng-container matColumnDef =\\\"statusCode\\\">\\r\\n      <th mat-header-cell *matHeaderCellDef mat-sort-header class=\\\"th-header-background\\\"\\r\\n      matTooltip=\\\"'Not started' indicates that no input has been provided for this task.\\r\\n      'Pending' indicates that one or more inputs have been provided, and that the Region lead / Approver has not yet made the final input selection.\\r\\n      'Approved' indicates that the assigned Region lead / Approver has validated the final input and closed the item. Please e-mail your assigned Region lead / Approver with any additional comments you may have. \\\">\\r\\n        Status <i class=\\\"material-icons help-text-icon\\\" placement=\\\"bottom\\\"\\r\\n         >help</i>\\r\\n        </th>\\r\\n      <td mat-cell *matCellDef= \\\"let element\\\">\\r\\n        {{element.taskStatus}}\\r\\n      </td>\\r\\n    </ng-container>\\r\\n\\r\\n    <ng-container matColumnDef =\\\"inputCount\\\">\\r\\n       <th mat-header-cell *matHeaderCellDef mat-sort-header class=\\\"th-header-background\\\"\\r\\n       matTooltip=\\\"Yes answer indicates that at least one input was received; No answer indicates that there has been no input provided by anyone in the region so far. Filter for Yes on this column to select only the tasks that have received one or more inputs across the region so far.\\\">\\r\\n         Input Received <i class=\\\"material-icons help-text-icon\\\" placement=\\\"bottom\\\"\\r\\n          >help</i>\\r\\n        </th>\\r\\n       <td mat-cell *matCellDef= \\\"let element\\\">\\r\\n         {{element.inputReceived}}\\r\\n       </td>\\r\\n     </ng-container>\\r\\n\\r\\n     <!-- Task Id Filter Column -->\\r\\n    <ng-container matColumnDef=\\\"taskId-filter\\\">\\r\\n        <th mat-header-cell *matHeaderCellDef>\\r\\n          <input class=\\\"filter-input\\\" value=\\\"{{filteredValues.taskId}}\\\"\\r\\n            (keyup)=\\\"applyColumnFilter($event.target.value, 'taskId')\\\"\\r\\n            placeholder=\\\"Filter\\\">\\r\\n        </th>\\r\\n    </ng-container>\\r\\n\\r\\n    <!-- Service Filter Column -->\\r\\n    <ng-container matColumnDef=\\\"serviceName-filter\\\">\\r\\n        <th mat-header-cell *matHeaderCellDef>\\r\\n          <input  class=\\\"filter-input\\\" value=\\\"{{filteredValues.serviceName}}\\\"\\r\\n            (keyup)=\\\"applyColumnFilter($event.target.value, 'serviceName')\\\"\\r\\n            placeholder=\\\"Filter\\\">\\r\\n        </th>\\r\\n    </ng-container>\\r\\n\\r\\n    <!-- Program Filter Column -->\\r\\n    <ng-container matColumnDef=\\\"program-filter\\\">\\r\\n        <th mat-header-cell *matHeaderCellDef>\\r\\n          <input  class=\\\"filter-input\\\" value=\\\"{{filteredValues.program}}\\\"\\r\\n            (keyup)=\\\"applyColumnFilter($event.target.value, 'program')\\\"\\r\\n            placeholder=\\\"Filter\\\">\\r\\n        </th>\\r\\n    </ng-container>\\r\\n\\r\\n    <!-- Sub Program Filter Column -->\\r\\n    <ng-container matColumnDef=\\\"subProgram-filter\\\">\\r\\n        <th mat-header-cell *matHeaderCellDef>\\r\\n          <input  class=\\\"filter-input\\\" value=\\\"{{filteredValues.subProgram}}\\\"\\r\\n            (keyup)=\\\"applyColumnFilter($event.target.value, 'subProgram')\\\"\\r\\n            placeholder=\\\"Filter\\\">\\r\\n        </th>\\r\\n    </ng-container>\\r\\n\\r\\n    <!-- Task Category Filter Column -->\\r\\n    <ng-container matColumnDef=\\\"taskCategory-filter\\\">\\r\\n        <th mat-header-cell *matHeaderCellDef>\\r\\n          <input  class=\\\"filter-input\\\" value=\\\"{{filteredValues.taskCategory}}\\\"\\r\\n            (keyup)=\\\"applyColumnFilter($event.target.value, 'taskCategory')\\\"\\r\\n            placeholder=\\\"Filter\\\">\\r\\n        </th>\\r\\n    </ng-container>\\r\\n\\r\\n    <!-- Task Filter Column -->\\r\\n    <ng-container matColumnDef=\\\"taskName-filter\\\">\\r\\n        <th mat-header-cell *matHeaderCellDef>\\r\\n          <input  class=\\\"filter-input\\\" value=\\\"{{filteredValues.taskName}}\\\"\\r\\n            (keyup)=\\\"applyColumnFilter($event.target.value, 'taskName')\\\"\\r\\n            placeholder=\\\"Filter\\\">\\r\\n        </th>\\r\\n    </ng-container>\\r\\n\\r\\n    <!-- Myinput Filter Column -->\\r\\n    <ng-container matColumnDef=\\\"myInput-filter\\\">\\r\\n      <th mat-header-cell *matHeaderCellDef>\\r\\n      <input  class=\\\"filter-input\\\" value=\\\"{{filteredValues.myInput}}\\\"\\r\\n        (keyup)=\\\"applyColumnFilter($event.target.value, 'myInput')\\\"\\r\\n        placeholder=\\\"Filter\\\">\\r\\n      </th>\\r\\n    </ng-container>\\r\\n\\r\\n    <!-- Status Filter Column -->\\r\\n    <ng-container matColumnDef=\\\"statusCode-filter\\\">\\r\\n        <th mat-header-cell *matHeaderCellDef>\\r\\n          <input  class=\\\"filter-input\\\" value=\\\"{{filteredValues.statusCode}}\\\"\\r\\n            (keyup)=\\\"applyColumnFilter($event.target.value, 'statusCode')\\\"\\r\\n            placeholder=\\\"Filter\\\">\\r\\n        </th>\\r\\n    </ng-container>\\r\\n\\r\\n    <!-- Count Input Filter Column -->\\r\\n    <ng-container matColumnDef=\\\"inputCount-filter\\\">\\r\\n      <th mat-header-cell *matHeaderCellDef>\\r\\n        <input class=\\\"filter-input\\\" value=\\\"{{filteredValues.inputCount}}\\\"\\r\\n          (keyup)=\\\"applyColumnFilter($event.target.value, 'inputCount')\\\"\\r\\n          placeholder=\\\"Filter\\\">\\r\\n      </th>\\r\\n    </ng-container>\\r\\n\\r\\n    <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\r\\n    <tr mat-header-row *matHeaderRowDef=\\\"displayedFilterColumns\\\" class=\\\"example-second-header-row\\\"></tr>\\r\\n    <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\" (click)=\\\"showTask(row)\\\"></tr>\\r\\n  </table>\\r\\n<mat-paginator #paginator\\r\\n  [pageSizeOptions]=\\\"[5, 20, 50, 100]\\\" showFirstLastButtons></mat-paginator>\\r\\n</div>\\r\\n\"","\r\nimport { Component, OnInit, ViewChild, AfterViewInit } from '@angular/core';\r\nimport { HttpClient, HttpClientModule } from '@angular/common/http'\r\nimport { MatSort, MatPaginator, MatTableDataSource } from '@angular/material';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { ServiceMatrixService }  from '../service-matrix.service';\r\nimport { DataSource } from '@angular/cdk/table';\r\nimport { Observable } from 'rxjs';\r\nimport { AuthenticationService, UserService } from 'src/app/_services';\r\nimport { NgForm, FormControl } from '@angular/forms';\r\n\r\n@Component({\r\n  selector: 'app-matrix-details',\r\n  templateUrl: './matrix-details.component.html',\r\n  styleUrls: ['./matrix-details.component.css']\r\n})\r\nexport class MatrixDetailsComponent implements OnInit{\r\n  dataSource = new MatTableDataSource<Object>();\r\n  searchInput: string;\r\n  user:Object;\r\n  starColor : string = \"primary\";\r\n  displayedColumns: string[] = [];\r\n  displayedFilterColumns: string[] = [];\r\n  globalFilter = '';\r\n  selectedRegion:string;\r\n  regionList;\r\n  filteredValues = { taskId:'', serviceName:'', program:'',\r\n    subProgram:'', taskCategory: '', taskName : '', statusCode: '',\r\n    myInput:'', inputCount: ''//, topFilter: false\r\n  };\r\n\r\n  @ViewChild(MatPaginator) paginator: MatPaginator;\r\n  @ViewChild(MatSort) sort: MatSort;\r\n\r\n  constructor(private http: HttpClient, private router: Router, private serviceMatrix :ServiceMatrixService,\r\n  private userService:UserService, private route: ActivatedRoute) {\r\n\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.route.params.subscribe(params => {\r\n    this.selectedRegion = params['regionId'];\r\n      this.customInit(params);\r\n    });\r\n    this.dataSource.filterPredicate = this.customFilterPredicate();\r\n  };\r\n\r\n    customInit(params){\r\n      this.user = this.userService.user;\r\n      this.displayedColumns = [\"taskId\", \"serviceName\", \"program\",\r\n      \"subProgram\", \"taskCategory\", \"taskName\", \"myInput\",  \"statusCode\", \"inputCount\"];\r\n      this.displayedFilterColumns = [];\r\n      this.displayedColumns.forEach(e => {\r\n      this.displayedFilterColumns.push(e + '-filter');\r\n       });\r\n      this.getMatrixDetails(this.userService.user['id']);\r\n      this.getRegionDetails(this.user);\r\n      this.globalFilter = this.serviceMatrix.filterStore.globalFilter;\r\n      if(this.serviceMatrix.filterStore.columnFilter != undefined){\r\n        this.filteredValues = this.serviceMatrix.filterStore.columnFilter;\r\n      }\r\n    }\r\n\r\n    public getMatrixDetails = (userId:string ) => {\r\n        this.serviceMatrix.getData(this.selectedRegion, userId)\r\n        .subscribe(res => {\r\n          this.dataSource.data = res as Object[];\r\n          this.dataSource.data.forEach(e => {\r\n            e[\"statusCode\"] = e[\"taskStatus\"];\r\n           })\r\n           this.paginator.pageIndex = this.serviceMatrix.filterStore.pageIndex;\r\n          this.dataSource.sort = this.sort;\r\n          this.dataSource.paginator = this.paginator;\r\n          this.applyAllFilters(this.globalFilter, this.filteredValues);\r\n        });\r\n    }\r\n\r\n    public getRegionDetails  (user: Object) {\r\n      this.regionList =  user['userRegionMappingsById'];\r\n    }\r\n\r\n    applyAllFilters(gFilter, fValues){\r\n      this.applyFilter(gFilter);\r\n      this.applyColumnFilter(fValues.taskId, 'taskId');\r\n      this.applyColumnFilter(fValues.serviceName, 'serviceName');\r\n      this.applyColumnFilter(fValues.program, 'program');\r\n      this.applyColumnFilter(fValues.subProgram, 'subProgram');\r\n      this.applyColumnFilter(fValues.taskCategory, 'taskCategory');\r\n      this.applyColumnFilter(fValues.taskName, 'taskName');\r\n      this.applyColumnFilter(fValues.myInput, 'myInput');\r\n      this.applyColumnFilter(fValues.statusCode, 'statusCode');      \r\n      this.applyColumnFilter(fValues.inputCount, 'inputReceived');\r\n    }\r\n\r\n    clearAllFilters(){\r\n      this.paginator.pageIndex = 0;\r\n      this.dataSource.paginator = this.paginator;\r\n      this.globalFilter = '';\r\n      this.filteredValues = { taskId:'', serviceName:'', program:'',\r\n        subProgram:'', taskCategory: '', taskName : '', statusCode: '',\r\n        myInput:'', inputCount: ''\r\n      };\r\n      this.serviceMatrix.filterStore.pageIndex = 0;\r\n      this.serviceMatrix.filterStore.globalFilter = '';\r\n      this.serviceMatrix.filterStore.columnFilter = undefined;\r\n      this.serviceMatrix.filterStore.selectedSubProgTasks = [];\r\n\r\n      this.applyAllFilters(this.globalFilter, this.filteredValues);\r\n    }\r\n\r\n  customFilterPredicate() {\r\n    const myFilterPredicate = (data: any, filter: string): boolean => {\r\n      var globalMatch = !this.globalFilter;\r\n      if (this.globalFilter) {\r\n        let taskIdFound = data.taskId.toString().trim().toLowerCase().indexOf(this.globalFilter.toString().toLowerCase()) !== -1;\r\n        let serviceNameFound = data.serviceName.toString().trim().toLowerCase().indexOf(this.globalFilter.toString().toLowerCase()) !== -1;\r\n        let programFound = data.program.toString().trim().toLowerCase().indexOf(this.globalFilter.toString().toLowerCase()) !== -1;\r\n        let subProgramFound = data.subProgram.toString().trim().toLowerCase().indexOf(this.globalFilter.toString().toLowerCase()) !== -1;\r\n        let taskCategoryFound = data.taskCategory.toString().trim().toLowerCase().indexOf(this.globalFilter.toString().toLowerCase()) !== -1;\r\n        let taskNameFound = data.taskName.toString().trim().toLowerCase().indexOf(this.globalFilter.toString().toLowerCase()) !== -1;\r\n        let statusFound = data.taskStatus.toString().trim().toLowerCase().indexOf(this.globalFilter.toString().toLowerCase()) !== -1;\r\n        let inputFound = data.myInput.toString().trim().toLowerCase().indexOf(this.globalFilter.toString().toLowerCase()) !== -1;\r\n        let countFound = data.inputReceived.toString().trim().toLowerCase().indexOf(this.globalFilter.toString().toLowerCase()) !== -1;\r\n        globalMatch = taskIdFound || serviceNameFound || programFound || subProgramFound || taskCategoryFound || taskNameFound || statusFound || inputFound || countFound;\r\n      }\r\n\r\n      if (!globalMatch) {\r\n        return;\r\n      }\r\n\r\n      let searchString = JSON.parse(filter);\r\n      let taskIdFound = data.taskId.toString().trim().toLowerCase().indexOf(searchString.taskId.toString().toLowerCase()) !== -1;\r\n      let serviceNameFound = data.serviceName.toString().trim().toLowerCase().indexOf(searchString.serviceName.toString().toLowerCase()) !== -1;\r\n      let programFound = data.program.toString().trim().toLowerCase().indexOf(searchString.program.toString().toLowerCase()) !== -1;\r\n      let subProgramFound = data.subProgram.toString().trim().toLowerCase().indexOf(searchString.subProgram.toString().toLowerCase()) !== -1;\r\n      let taskCategoryFound = data.taskCategory.toString().trim().toLowerCase().indexOf(searchString.taskCategory.toString().toLowerCase()) !== -1;\r\n      let taskNameFound = data.taskName.toString().trim().toLowerCase().indexOf(searchString.taskName.toString().toLowerCase()) !== -1;\r\n      let statusFound = data.taskStatus.toString().trim().toLowerCase().indexOf(searchString.statusCode.toString().toLowerCase()) !== -1;\r\n      let inputFound = data.myInput.toString().trim().toLowerCase().indexOf(searchString.myInput.toString().toLowerCase()) !== -1;\r\n      let countFound = data.inputReceived.toString().trim().toLowerCase().indexOf(searchString.inputCount.toString().toLowerCase()) !== -1;\r\n      return taskIdFound && serviceNameFound && programFound && subProgramFound && taskCategoryFound && taskNameFound && statusFound && inputFound && countFound;\r\n    }\r\n    return myFilterPredicate;\r\n  }\r\n\r\n    applyColumnFilter(filterValue: string, col: string) {\r\n      this.filteredValues[col] = filterValue;\r\n      this.dataSource.filter = JSON.stringify(this.filteredValues);\r\n    }\r\n\r\n    applyFilter(filter) {\r\n    //  this.globalFilter = filterValue;\r\n      //  this.dataSource.filter = filterValue.trim().toLowerCase();\r\n\r\n      this.globalFilter = filter;\r\n      this.dataSource.filter = JSON.stringify(this.filteredValues);\r\n    }\r\n\r\n    showTask(row) {\r\n      this.storeFilterValues(this.paginator.pageIndex);\r\n      this.router.navigate([this.selectedRegion, \"task\", row.taskId ]);\r\n      var tasks = this.dataSource.data.filter(e => e['subProgram'] == row.subProgram);\r\n      this.serviceMatrix.filterStore.selectedSubProgTasks = [];\r\n      if(tasks.length > 1){\r\n        for(var i=0; i<tasks.length; i++){\r\n          var sspt = tasks[i];\r\n          if(i==0){\r\n            sspt[\"prevTaskId\"] = tasks[tasks.length-1]['taskId'];\r\n            sspt[\"nextTaskId\"] = tasks[i+1]['taskId'];\r\n          } else if (i == tasks.length-1) {\r\n            sspt[\"prevTaskId\"] = tasks[i-1]['taskId'];\r\n            sspt[\"nextTaskId\"] = tasks[0]['taskId'];\r\n          } else {\r\n            sspt[\"prevTaskId\"] = tasks[i-1]['taskId'];\r\n            sspt[\"nextTaskId\"] = tasks[i+1]['taskId'];\r\n          }\r\n          this.serviceMatrix.filterStore.selectedSubProgTasks.push(sspt);\r\n        }\r\n      }\r\n    }\r\n\r\n    chooseRegion(region: string){\r\n      this.router.navigate([\"service\", region]);\r\n    }\r\n\r\n    backToLogin(){\r\n      this.serviceMatrix.logout(this.userService.user['id']);\r\n      \r\n    this.serviceMatrix.filterStore.pageIndex = 0;\r\n    this.serviceMatrix.filterStore.globalFilter = '';\r\n    this.serviceMatrix.filterStore.columnFilter = undefined;\r\n    this.serviceMatrix.filterStore.selectedSubProgTasks = [];\r\n      this.router.navigate([\"login\"]);\r\n    }\r\n\r\n    storeFilterValues(pageIndex: number){\r\n      this.serviceMatrix.filterStore.pageIndex = pageIndex;\r\n      this.serviceMatrix.filterStore.globalFilter = this.globalFilter;\r\n      this.serviceMatrix.filterStore.columnFilter = this.filteredValues;\r\n    }\r\n}\r\n","import { Injectable, ViewChild } from '@angular/core';\r\nimport { HttpClient, HttpClientModule } from '@angular/common/http';\r\nimport { MatTableDataSource, MatPaginator, MatSort } from '@angular/material';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ServiceMatrixService {\r\n  matMtrixDataStore;\r\n  matrixJsonString;\r\n  taskInfo;\r\n  laborDataStore;\r\n  selectedRowIndex;\r\n  filterStore: Filters ;\r\n  API_URL:string =\"http://cdfw-alb-prod-775994205.us-west-1.elb.amazonaws.com:9301/\";\r\n  //API_URL:string = \"http://ec2-18-220-6-166.us-east-2.compute.amazonaws.com:8080/\";\r\n  //API_URL:string = \"http://localhost:8080/\";\r\n   @ViewChild(MatPaginator) paginator: MatPaginator;\r\n  inputDataStore = [{\r\n    id: 1,\r\n    value: \"5\",\r\n    name: \"Bob\"\r\n  },\r\n  {\r\n    id: 2,\r\n    value: \"3\",\r\n    name: \"Bob\"\r\n  },\r\n  {\r\n    id: 3,\r\n    value: \"1\",\r\n    name: \"Bob\"\r\n  },\r\n  {\r\n    id: 4,\r\n    value: \"4\",\r\n    name: \"Bob\"\r\n  },\r\n  {\r\n    id: 5,\r\n    value: \"2\",\r\n    name: \"Bob\"\r\n  },\r\n  {\r\n    id: 6,\r\n    value: \"3\",\r\n    name: \"Bob\"\r\n  }\r\n];\r\n\r\n  @ViewChild(MatSort) sort: MatSort;\r\n\r\n  constructor(private http: HttpClient) {\r\n    this.filterStore = new Filters();\r\n  }\r\n\r\n  async getServiceMatrix1 (){\r\n      var self = this;\r\n      await fetch(this.API_URL+'service')\r\n        .then(function(response) {\r\n        response.json().then(\r\n            function (data) {\r\n              self.matrixJsonString = data;\r\n              self.matMtrixDataStore = new MatTableDataSource (data);\r\n\r\n              self.matMtrixDataStore.paginator = this.paginator;\r\n              self.matMtrixDataStore.sort = this.sort;\r\n            }\r\n          );\r\n          //this.matMtrixDataStore = new MatTableDataSource (this.matrixJsonString);\r\n        });\r\n    // this.matMtrixDataStore = new MatTableDataSource (response);\r\n   }\r\n\r\n   public getData = (selectedRegion: string, userId:string ) => {\r\n     return this.http.get(this.API_URL+'service/'+selectedRegion+ '/'+ userId);\r\n    }\r\n\r\n    public selectInput = (regionId: number, taskId: string, userId:string, approvedUserId:any) => {\r\n      return this.http.get(this.API_URL+'selectInput/'+regionId+'/'+ taskId+ '/'+ userId+'/'+approvedUserId);\r\n    }\r\n\r\n    public fetchInputs = (regionId: number, taskId : string) => {\r\n      return this.http.get(this.API_URL+'fetchInputs/'+regionId+'/'+taskId);\r\n    }\r\n\r\n  async getTaskDetail(taskId: string) {\r\n     var self = this;\r\n     await fetch('../assets/data.json')\r\n       .then(function(response) {\r\n       response.json().then(\r\n           function (data) {\r\n              self.taskInfo = data.find(item => item.taskId === taskId);\r\n           }\r\n         );\r\n       });\r\n    }\r\n\r\n    getTaskDetail1 = (selectedRegion: string, taskId :string) => {\r\n      return this.http.get(this.API_URL+selectedRegion+'/task/'+ taskId );\r\n    }\r\n\r\n    getRegionDetails = () => {\r\n       return this.http.get('../assets/data.json');\r\n      }\r\n\r\n  async getTaskInfo (taskId: string){\r\n        var self = this;\r\n        await fetch('../assets/data.json')\r\n          .then(function(response) {\r\n          response.json().then(\r\n              function (data) {\r\n                 self.taskInfo = data.find(item => item.taskId === taskId);\r\n                 self.laborDataStore = new MatTableDataSource(self.taskInfo.service.category.task.laborClass);\r\n              }\r\n            );\r\n          });\r\n    }\r\n\r\n    logout(usrId : string) {\r\n      this.http.post(this.API_URL+\"logout\", {userId : usrId}).subscribe(res => {\r\n        // console.log(res);\r\n      });\r\n    }\r\n\r\n\r\n    testBackend (){\r\n          this.http.get('http://localhost:8080/greeting').toPromise()\r\n            .then(function(response) {\r\n            });\r\n    }\r\n\r\n    public saveUserInput(userId:number, regionName: string, taskId: string, inputValue: number){\r\n      return this.http.post(this.API_URL+'saveInput', {userId: userId, regionName: regionName, taskId: taskId, inputValue :inputValue });\r\n     }\r\n\r\n\r\n\r\n}\r\n\r\n\r\nexport class Filters {\r\n  pageIndex: number = 0;\r\n  globalFilter : string = '';\r\n  columnFilter : any;\r\n  selectedSubProgTasks: any[];\r\n\r\n/*  get pageIndex():number{\r\n    return this.pageIndex;\r\n  } */\r\n\r\n}\r\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { MatrixDetailsComponent } from \"./matrix-details/matrix-details.component\"\n\n\nconst routes: Routes = [\n  {\n    path:\"\",\n    component: MatrixDetailsComponent\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class ServiceRoutingModule { }\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { ServiceRoutingModule } from './service-routing.module';\r\nimport { MatrixDetailsComponent } from './matrix-details/matrix-details.component';\r\nimport { FormsModule } from '@angular/forms';\r\n\r\nimport {NgbModule} from '@ng-bootstrap/ng-bootstrap';\r\nimport { NgbTooltipModule } from '@ng-bootstrap/ng-bootstrap';\r\n\r\nimport {\r\n  MatButtonModule, MatCardModule, MatDialogModule, MatInputModule, MatTableModule,\r\n  MatToolbarModule, MatMenuModule,MatIconModule, MatProgressSpinnerModule, MatListModule,\r\n  MatExpansionModule, MatPaginatorModule, MatSortModule, MatSidenavModule\r\n} from '@angular/material';\r\nimport { TaskDetailsComponent, SaveResponseConfirmDialog } from './task-details/task-details.component';\r\nimport { ServiceMatrixService } from './service-matrix.service';\r\nimport { InputsComponent } from './inputs/inputs.component';\r\n\r\nimport {MatTooltipModule} from '@angular/material/tooltip';\r\n\r\n\r\n@NgModule({\r\n  declarations: [MatrixDetailsComponent, TaskDetailsComponent, InputsComponent, SaveResponseConfirmDialog],\r\n  entryComponents : [SaveResponseConfirmDialog],\r\n  providers : [ServiceMatrixService],\r\n  imports: [\r\n    CommonModule,\r\n    ServiceRoutingModule,\r\n    MatButtonModule, MatCardModule, MatDialogModule, MatInputModule, MatTableModule,\r\n    MatToolbarModule, MatMenuModule,MatIconModule, MatProgressSpinnerModule, MatListModule,\r\n    MatExpansionModule,  MatPaginatorModule, MatSortModule, MatSidenavModule, MatTooltipModule,\r\n    FormsModule,\r\n    NgbModule.forRoot(),\r\n    NgbTooltipModule\r\n  ]\r\n})\r\n\r\nexport class ServiceModule { }\r\n","module.exports = \"<!-- <h1 mat-dialog-title>{{data.name}}</h1> -->\\r\\n<div mat-dialog-content>\\r\\n  <p>The task has inputs from other respondents. To override, press continue. To review inputs, press Review Inputs.</p>\\r\\n</div>\\r\\n<div class=\\\"text-center\\\">\\r\\n  <button mat-raised-button (click)=\\\"closeDialog('No')\\\" class=\\\"mr-2\\\">Review Inputs</button>\\r\\n  <button mat-raised-button color=\\\"primary\\\" (click)=\\\"closeDialog('Yes')\\\" cdkFocusInitial>Continue</button>\\r\\n</div>\\r\\n\"","module.exports = \".task-container{\\r\\n  width: 100%;\\r\\n}\\r\\n\\r\\n.mat-form-field{\\r\\n  width: 100%;\\r\\n}\\r\\n\\r\\n.example-fill-remaining-space {\\r\\n  flex: 1 1 auto;\\r\\n}\\r\\n\\r\\ntextarea {\\r\\n    padding: 10px;\\r\\n    line-height: 1.5;\\r\\n    border-radius: 5px;\\r\\n    border: 1px solid #ccc;\\r\\n    width: 100%;\\r\\n}\\r\\n\\r\\nmat-toolbar  span, mat-toolbar  a  span {\\r\\n  font-size: 10pt;\\r\\n}\\r\\n\\r\\n.help-text-icon {\\r\\n  font-size: 14px;\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvc2VydmljZS90YXNrLWRldGFpbHMvdGFzay1kZXRhaWxzLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxXQUFXO0FBQ2I7O0FBRUE7RUFDRSxXQUFXO0FBQ2I7O0FBRUE7RUFDRSxjQUFjO0FBQ2hCOztBQUVBO0lBQ0ksYUFBYTtJQUNiLGdCQUFnQjtJQUNoQixrQkFBa0I7SUFDbEIsc0JBQXNCO0lBQ3RCLFdBQVc7QUFDZjs7QUFFQTtFQUNFLGVBQWU7QUFDakI7O0FBRUE7RUFDRSxlQUFlO0FBQ2pCIiwiZmlsZSI6InNyYy9hcHAvc2VydmljZS90YXNrLWRldGFpbHMvdGFzay1kZXRhaWxzLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIudGFzay1jb250YWluZXJ7XHJcbiAgd2lkdGg6IDEwMCU7XHJcbn1cclxuXHJcbi5tYXQtZm9ybS1maWVsZHtcclxuICB3aWR0aDogMTAwJTtcclxufVxyXG5cclxuLmV4YW1wbGUtZmlsbC1yZW1haW5pbmctc3BhY2Uge1xyXG4gIGZsZXg6IDEgMSBhdXRvO1xyXG59XHJcblxyXG50ZXh0YXJlYSB7XHJcbiAgICBwYWRkaW5nOiAxMHB4O1xyXG4gICAgbGluZS1oZWlnaHQ6IDEuNTtcclxuICAgIGJvcmRlci1yYWRpdXM6IDVweDtcclxuICAgIGJvcmRlcjogMXB4IHNvbGlkICNjY2M7XHJcbiAgICB3aWR0aDogMTAwJTtcclxufVxyXG5cclxubWF0LXRvb2xiYXIgIHNwYW4sIG1hdC10b29sYmFyICBhICBzcGFuIHtcclxuICBmb250LXNpemU6IDEwcHQ7XHJcbn1cclxuXHJcbi5oZWxwLXRleHQtaWNvbiB7XHJcbiAgZm9udC1zaXplOiAxNHB4O1xyXG59Il19 */\"","module.exports = \"<mat-toolbar>\\r\\n  <div class=\\\"row w-100 m-0\\\">\\r\\n  <div class=\\\"col-md-6\\\">\\r\\n  <span> <b>Task Details</b> </span>\\r\\n\\r\\n  <button mat-button color=\\\"primary\\\" matTooltip=\\\"User Info\\\" style=\\\"cursor:default;\\\">\\r\\n      <mat-icon>account_box</mat-icon>\\r\\n      {{user.userName}}\\r\\n    </button>\\r\\n    <button mat-button color=\\\"primary\\\" matTooltip=\\\"Region\\\" style=\\\"cursor:default;\\\">\\r\\n        <mat-icon>language</mat-icon>\\r\\n        {{selectedRegion}}\\r\\n      </button>\\r\\n  </div>\\r\\n  <div class=\\\"col-md-6 text-right\\\">\\r\\n    <span> <b>Actions: </b></span>\\r\\n    <button mat-button color=\\\"primary\\\" (click)=\\\"goBackToMatrix()\\\">\\r\\n      <mat-icon>arrow_back</mat-icon>\\r\\n      Back to Catalog\\r\\n    </button>\\r\\n    <a mat-button color=\\\"primary\\\" title=\\\"Provide Feedback\\\" target=\\\"_new\\\" href=\\\"https://deloitteus.sharefile.com/home/shared/fo8dafd8-6efd-428c-aa4f-2e7bf8643f16\\\">\\r\\n        <mat-icon>feedback</mat-icon>\\r\\n    </a>\\r\\n    <a mat-button color=\\\"primary\\\" title=\\\"Training Materials\\\" target=\\\"_new\\\" href=\\\"https://deloitteus.sharefile.com/home/shared/fo8dafd8-6efd-428c-aa4f-2e7bf8643f16\\\">\\r\\n        <mat-icon>file_copy</mat-icon>\\r\\n    </a>\\r\\n    <button mat-button color=\\\"primary\\\" (click)=\\\"backToLogin()\\\">\\r\\n      <mat-icon>power_settings_new</mat-icon>\\r\\n      Logout\\r\\n    </button>\\r\\n  </div>\\r\\n  </div>\\r\\n</mat-toolbar>\\r\\n\\r\\n<ngb-alert *ngIf=\\\"approved && userRole==='m_resp' && approvedMsgResp !== null\\\" type=\\\"success\\\"\\r\\n  (close)=\\\"approvedMsgResp = null\\\">{{ approvedMsgResp }}</ngb-alert>\\r\\n<ngb-alert *ngIf=\\\"approved && (userRole==='m_lead' || userRole==='admin') && approvedMsgLead !== null\\\" type=\\\"success\\\"\\r\\n  (close)=\\\"approvedMsgLead = null\\\">{{ approvedMsgLead }}</ngb-alert>\\r\\n\\r\\n\\r\\n<div class=\\\"task-container\\\" *ngIf=\\\"task != undefined\\\">\\r\\n  <mat-card class=\\\"example-card m-3\\\">\\r\\n    <mat-card-header>\\r\\n      <mat-card-title>{{task.taskName}} \\r\\n    </mat-card-title>\\r\\n      <mat-card-subtitle>{{task.serviceName}} / {{task.program}} / {{task.subProgram}} /{{task.taskCategory}}\\r\\n      </mat-card-subtitle>\\r\\n      <div class=\\\"flex-sm-fill\\\">\\r\\n    <button mat-button class=\\\"float-sm-right\\\" *ngIf=\\\"task.nextTaskId != undefined\\\" title=\\\"{{task.nextTaskId}}\\\" (click)=\\\"goToTask(task.nextTaskId)\\\" style=\\\"height:100%\\\">\\r\\n      <mat-icon class=\\\"next_task_icon\\\">navigate_next</mat-icon>\\r\\n  </button>\\r\\n  <button mat-button class=\\\"float-sm-right\\\" *ngIf=\\\"task.nextTaskId != undefined\\\" title=\\\"{{task.prevTaskId}}\\\" (click)=\\\"goToTask(task.prevTaskId)\\\" style=\\\"height:100%\\\">\\r\\n      <mat-icon class=\\\"next_task_icon\\\">navigate_before</mat-icon>\\r\\n  </button>\\r\\n</div>\\r\\n\\r\\n    </mat-card-header>\\r\\n    <mat-divider matInset></mat-divider>\\r\\n    <mat-card-content class=\\\"py-3\\\">\\r\\n      <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-md-6\\\">\\r\\n          <mat-card>\\r\\n            <mat-card-actions class=\\\"m-0 p-0 mb-3\\\">\\r\\n              <table class=\\\"text-white w-100\\\" style=\\\"background: #1f4e79; height: 80px;\\\">\\r\\n                <tr>\\r\\n                  <td colspan=\\\"3\\\">\\r\\n                      <label for=\\\"inputmul\\\" style=\\\"margin-left:10px; margin-bottom: 0px; margin-top: 5px;\\\">Input Multiplier<i class=\\\"material-icons help-text-icon\\\"\\r\\n                        matTooltip=\\\"Displays the input recorded for this task. This is the only field that requires an input from respondents in this exercise. \\\">help</i></label>\\r\\n                  </td>\\r\\n                </tr>\\r\\n                <tr>\\r\\n                  <td>\\r\\n                      <input id=\\\"inputmul\\\" type=\\\"number\\\" name=\\\"test_name\\\" min=\\\"0\\\" class=\\\"task-input-multiplier\\\"\\r\\n                      oninput=\\\"validity.valid||(value='');\\\" [(ngModel)]=\\\"multiplier\\\" [disabled]=\\\"saveRespInputDisabled\\\">\\r\\n                  </td>\\r\\n                  <td>\\r\\n                      <button mat-button class=\\\"text-dark bg-white task-input-multiplier-btn\\\" (click)=\\\"saveResponse()\\\" [disabled]=\\\"saveRespInputDisabled || multiplier == undefined || multiplier == 0\\\">\\r\\n                          <mat-icon>save</mat-icon>\\r\\n                          Save Response\\r\\n                        </button>\\r\\n                  </td>\\r\\n                  <td>\\r\\n                      <button mat-button class=\\\"text-dark bg-white task-input-multiplier-btn\\\" (click)=\\\"viewInputs()\\\" [disabled]=\\\"task['inputCount'] == 0\\\"\\r\\n                      *ngIf=\\\"(userRole==='admin' || userRole==='m_lead')\\\">\\r\\n                      <mat-icon>touch_app</mat-icon>\\r\\n                      Review Inputs ({{task['inputCount']}})\\r\\n                    </button>\\r\\n                  </td>\\r\\n                </tr>\\r\\n              </table>\\r\\n              <!-- <div class=\\\"row mx-0 text-white p-2\\\" style=\\\"background: #1f4e79; \\\">\\r\\n                <div class=\\\"col-sm-4\\\">\\r\\n                      <label for=\\\"inputmul\\\">Input Multiplier<i class=\\\"material-icons help-text-icon\\\"\\r\\n                          matTooltip=\\\"Displays the input recorded for this task. This is the only field that requires an input from respondents in this exercise. \\\">help</i></label>\\r\\n                      <input id=\\\"inputmul\\\" type=\\\"number\\\" name=\\\"test_name\\\" min=\\\"0\\\"\\r\\n                        oninput=\\\"validity.valid||(value='');\\\" [(ngModel)]=\\\"multiplier\\\" [disabled]=\\\"saveRespInputDisabled\\\">\\r\\n\\r\\n                </div>\\r\\n                <div class=\\\"col-sm-4 pt-4\\\">\\r\\n                      <button mat-raised-button class=\\\"text-dark\\\" (click)=\\\"saveResponse()\\\" [disabled]=\\\"saveRespInputDisabled || multiplier == undefined || multiplier == 0\\\">\\r\\n                      <mat-icon>save</mat-icon>\\r\\n                      Save Response\\r\\n                    </button>\\r\\n\\r\\n                  </div>\\r\\n                  <div class=\\\"col-sm-4 pt-4\\\">\\r\\n                      <button mat-raised-button class=\\\"text-dark\\\" (click)=\\\"viewInputs()\\\" [disabled]=\\\"task['inputCount'] == 0\\\"\\r\\n                        *ngIf=\\\"(userRole==='admin' || userRole==='m_lead')\\\">\\r\\n                        <mat-icon>touch_app</mat-icon>\\r\\n                        Review Inputs ({{task['inputCount']}})\\r\\n                      </button>\\r\\n\\r\\n                    </div>\\r\\n              </div> -->\\r\\n            </mat-card-actions>\\r\\n            <mat-divider matInset></mat-divider>\\r\\n            <mat-card-content>\\r\\n              <div class=\\\"row pt-3\\\">\\r\\n                <div class=\\\"col-sm-6\\\">\\r\\n                  <mat-form-field appearance=\\\"outline\\\">\\r\\n                    <mat-label>Task Description</mat-label>\\r\\n                    <textarea matInput id=\\\"taskdesc\\\" name=\\\"taskdesc\\\" rows=\\\"5\\\" cols=\\\"30\\\" disabled class=\\\"border-0 font-color-black\\\"> {{task.taskDesc}} </textarea>\\r\\n                  </mat-form-field>\\r\\n                </div>\\r\\n                <div class=\\\"col-sm-6\\\">                  \\r\\n                    <mat-form-field appearance=\\\"outline\\\">\\r\\n                  <mat-label>Input Multiplier Description</mat-label>\\r\\n                  <textarea matInput id=\\\"multiDesc\\\" name=\\\"multiDesc\\\" rows=\\\"5\\\" cols=\\\"30\\\" disabled class=\\\"border-0 font-color-black\\\"> {{task.multDesc}} </textarea>\\r\\n                </mat-form-field>\\r\\n                </div>\\r\\n              </div>\\r\\n              <div class=\\\"row pt-3\\\">\\r\\n                <div class=\\\"col-sm-6\\\">\\r\\n                    <mat-form-field appearance=\\\"outline\\\">\\r\\n                  <mat-label>Desired Performance</mat-label>\\r\\n                  <textarea matInput id=\\\"taskdesc2\\\" name=\\\"taskdesc\\\" rows=\\\"5\\\" cols=\\\"30\\\" disabled class=\\\"border-0 font-color-black\\\"> {{task.desiredPerf}} </textarea>\\r\\n                </mat-form-field>\\r\\n                </div>\\r\\n                <div class=\\\"col-sm-6\\\">\\r\\n                    <mat-form-field appearance=\\\"outline\\\">\\r\\n                  <mat-label>Additional Budget Factor(s)</mat-label>\\r\\n                  <textarea matInput  id=\\\"multiDesc2\\\" name=\\\"multiDesc\\\" rows=\\\"5\\\" cols=\\\"30\\\" disabled class=\\\"border-0 font-color-black\\\"> {{task.addtnlBudgetFator}} </textarea>\\r\\n                </mat-form-field>\\r\\n                </div>\\r\\n              </div>\\r\\n            </mat-card-content>\\r\\n          </mat-card>\\r\\n        </div>\\r\\n        <div class=\\\"col-md-6\\\">\\r\\n          <mat-card>\\r\\n            <mat-card-actions class=\\\"m-0 p-0 mb-3\\\">\\r\\n              <div class=\\\"row mx-0\\\" style=\\\"max-height:80px;\\\">\\r\\n                  <div class=\\\"col-sm-3\\\">\\r\\n                <mat-form-field>\\r\\n                  <label for=\\\"frequency\\\">Frequency <i class=\\\"material-icons help-text-icon\\\"\\r\\n                      matTooltip=\\\"Number of times per year that the task needs to be accomplished (predefined).\\\">help</i></label>\\r\\n                  <input id=\\\"frequency\\\" matInput value=\\\"{{task.frequency}}\\\" readonly>\\r\\n                </mat-form-field></div>\\r\\n                <div class=\\\"col-sm-6\\\">\\r\\n                <mat-form-field>\\r\\n                  <label for=\\\"totallaborhours\\\">Total time of Labor Hours <i class=\\\"material-icons help-text-icon\\\"\\r\\n                      matTooltip=\\\"Sum of time per labor classification (predefined).\\\">help</i></label>\\r\\n                  <input id=\\\"totallaborhours\\\" matInput value=\\\"{{task.totalLaborHours}}\\\" readonly>\\r\\n                </mat-form-field></div>\\r\\n                <div class=\\\"col-sm-3\\\">\\r\\n\\r\\n                <mat-form-field>\\r\\n                  <label for=\\\"totalhours\\\">Total Hours <i class=\\\"material-icons help-text-icon\\\"\\r\\n                      matTooltip=\\\"Product of multiplier (input), times the total time of labor hours, times the frequency (automatically calculated).\\\">help</i></label>\\r\\n                  <input id=\\\"totalhours\\\" matInput value=\\\"{{task.totalLaborHours * task.frequency * multiplier}}\\\"\\r\\n                    readonly>\\r\\n                </mat-form-field></div>\\r\\n              </div>\\r\\n            </mat-card-actions>\\r\\n            <mat-divider matInset></mat-divider>\\r\\n            <mat-card-content>\\r\\n              <div class=\\\"row pt-3\\\">\\r\\n                <div class=\\\"col-sm-8\\\">\\r\\n                  <label for=\\\"laborTable\\\">Labor Classification<i class=\\\"material-icons help-text-icon\\\"\\r\\n                      matTooltip=\\\"Displays the time that each labor classification would spend on the task in question, in the future state / at mission level (predefined). \\\">help</i></label>\\r\\n                  <table id=\\\"laborTable\\\" mat-table [dataSource]=\\\"dataSource\\\" matSort class=\\\"mat-elevation-z1 w-100\\\">\\r\\n                    <ng-container matColumnDef=\\\"title\\\">\\r\\n                      <th mat-header-cell *matHeaderCellDef> Title </th>\\r\\n                      <td mat-cell *matCellDef=\\\"let element\\\"> {{element.title}} </td>\\r\\n                    </ng-container>\\r\\n                    <ng-container matColumnDef=\\\"role\\\">\\r\\n                      <th mat-header-cell *matHeaderCellDef> Code </th>\\r\\n                      <td mat-cell *matCellDef=\\\"let element\\\"> {{element.role}} </td>\\r\\n                    </ng-container>\\r\\n                    <ng-container matColumnDef=\\\"time\\\">\\r\\n                      <th mat-header-cell *matHeaderCellDef> Time (hours) </th>\\r\\n                      <td mat-cell *matCellDef=\\\"let element\\\" class=\\\"text-center\\\"> {{element.time}} </td>\\r\\n                    </ng-container>\\r\\n                    <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\r\\n                    <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></tr>\\r\\n                  </table>\\r\\n                  <!--  <mat-paginator\\r\\n          [pageSizeOptions]=\\\"[3, 5, 7]\\\" showFirstLastButtons></mat-paginator> -->\\r\\n                </div>\\r\\n                <div class=\\\"col-sm-4\\\">\\r\\n                  <label for=\\\"justcat\\\">Justification Category</label>\\r\\n                  <table id=\\\"justcat\\\" mat-table [dataSource]=\\\"dataSourceJustification\\\" matSort\\r\\n                    class=\\\"mat-elevation-z1 w-100\\\">\\r\\n                    <ng-container matColumnDef=\\\"categoryName\\\">\\r\\n                      <th mat-header-cell *matHeaderCellDef> Name </th>\\r\\n                      <td mat-cell *matCellDef=\\\"let element\\\"> {{element.categoryName}} </td>\\r\\n                    </ng-container>\\r\\n                    <tr mat-header-row *matHeaderRowDef=\\\"displayedColumnsJustification\\\"></tr>\\r\\n                    <tr mat-row *matRowDef=\\\"let row; columns: displayedColumnsJustification;\\\"></tr>\\r\\n                  </table>\\r\\n                </div>\\r\\n              </div>\\r\\n            </mat-card-content>\\r\\n          </mat-card>\\r\\n        </div>\\r\\n      </div>\\r\\n    </mat-card-content>\\r\\n  </mat-card>\\r\\n</div>\\r\\n\"","import { Component, OnInit, Input, Inject } from '@angular/core';\r\nimport { ActivatedRoute, ParamMap, Router } from '@angular/router';\r\nimport { ServiceMatrixService } from '../service-matrix.service';\r\nimport { MatDialog, MatDialogConfig, MatTableDataSource, MatDialogRef, MAT_DIALOG_DATA } from '@angular/material';\r\nimport { InputsComponent } from '../inputs/inputs.component';\r\n\r\nimport { MatSnackBarComponent } from '../mat-snack-bar/mat-snack-bar.component';\r\nimport { UserService } from 'src/app/_services';\r\n\r\n\r\n\r\n@Component({\r\n  selector: 'app-task-details',\r\n  templateUrl: './task-details.component.html',\r\n  styleUrls: ['./task-details.component.css']\r\n})\r\nexport class TaskDetailsComponent implements OnInit {\r\n  inpuTaskId : string;\r\n  user: Object;\r\n  userRole: string;\r\n  task : Object;\r\n  dataSource = new MatTableDataSource<Object>();\r\n  dataSourceJustification = new MatTableDataSource<Object>();\r\n  displayedColumns: string[] = [\"title\", \"role\", \"time\"];\r\n  displayedColumnsJustification: string[] = [\"categoryName\"];\r\n  selectedRegion:string;\r\n  selectedRegionId:string;\r\n  selectedTask:string;\r\n  multiplier: number= 0;\r\n  saveRespInputDisabled : boolean = false;\r\n  approved: boolean = false;\r\n  errorMessage: string = null;\r\n  successMessage: string = null;\r\n  approvedMsgResp: string = null;\r\n  approvedMsgLead: string = null;\r\n  subProgramTasks: any[] = [];\r\n\r\n  constructor(private route: ActivatedRoute, private serviceMatrix : ServiceMatrixService,\r\n    private router: Router, private dialog: MatDialog,\r\n    private userService:UserService, private snackBar: MatSnackBarComponent\r\n  ) {\r\n\r\n     }\r\n\r\n  ngOnInit() {\r\n    this.route.params.subscribe(params => {\r\n      this.customInit(params['regionId'], params['taskId']);\r\n    });\r\n  }\r\n\r\n  ngOnChanges(){\r\n\r\n  }\r\n\r\n  customInit(regionId:string,taskId: string){\r\n    this.user = this.userService.user;\r\n    this.getTaskInfo1(regionId, taskId);\r\n    this.userRole = this.userService.userRole;\r\n    this.selectedRegion = regionId;\r\n    this.inpuTaskId = taskId;\r\n\r\n    if (this.serviceMatrix.filterStore.selectedSubProgTasks != undefined) {\r\n      this.subProgramTasks = this.serviceMatrix.filterStore.selectedSubProgTasks;\r\n    }\r\n  }\r\n\r\n\r\n  public getTaskInfo1 = (selectedRegion, taskId) => {\r\n        let _self = this;\r\n          this.serviceMatrix.getTaskDetail1(selectedRegion, taskId).subscribe(\r\n        data => {\r\n          _self.task = data;\r\n          _self.dataSource.data = data['laborClassesByTaskId'];\r\n          _self.dataSourceJustification.data = data['jrsdctnCtgriesByTaskId'];\r\n          let inputs = data['missionUserInputsByTaskId'];\r\n          _self.serviceMatrix.inputDataStore = inputs;\r\n          _self.approved = false;\r\n          _self.multiplier = 0;\r\n          _self.saveRespInputDisabled = false;\r\n           if('Validated' === _self.task['taskStatus']) {\r\n             _self.approved = true;\r\n             if(_self.userService.userRole === 'm_resp'){\r\n               _self.saveRespInputDisabled = true;\r\n               _self.approvedMsgResp = \"The multiplier input for this task has been validated. You may submit additional suggestions to your designated Region lead by reaching out directly.\";\r\n             } else {\r\n               _self.approvedMsgLead = \"The multiplier input for this task has been validated.\";\r\n             }\r\n             let approvedInput =  inputs.filter(function(input) {\r\n               return input['regionByRegionId']['regionName'] == selectedRegion && input['sttsId'] == \"A\";\r\n              });\r\n\r\n              if (approvedInput.length == 1) {\r\n                _self.multiplier = approvedInput[0].inputValue;\r\n              }\r\n           } else  {\r\n             let myInput = this.filterInputsByUserAndRegion(inputs, _self.user['id'], selectedRegion);\r\n              if (myInput.length == 1) {\r\n                _self.multiplier = myInput[0].inputValue;\r\n              }\r\n           }\r\n\r\n           if(this.subProgramTasks.length > 1){\r\n             var fltr = this.subProgramTasks.filter(e => e['taskId'] == _self.task['taskId']);\r\n             if(fltr.length > 0){\r\n              _self.task[\"nextTaskId\"] = fltr[0].nextTaskId;\r\n              _self.task[\"prevTaskId\"] = fltr[0].prevTaskId;\r\n            }\r\n           }\r\n\r\n        },\r\n        err => {\r\n          this.snackBar.openSnackBar( \"Error fetching task details. Please try again later\", 'Close', \"red-snackbar\");\r\n        },\r\n        () => {\r\n\r\n        }\r\n      );\r\n  }\r\n\r\n  goToTask(taskId){\r\n    this.router.navigate([this.selectedRegion, \"task\", taskId ]);\r\n  }\r\n\r\n  filterInputsByUserAndRegion(inputs:any, userId:number, regionName:string){\r\n    let myInputs = inputs.filter(function(input) {\r\n      return input.id == userId && input['regionByRegionId']['regionName'] == regionName;\r\n     });\r\n     return myInputs;\r\n  }\r\n\r\n\r\n  saveResponse(){\r\n    let status = 'N';\r\n    if('admin' === this.user['userRoleByRoleId']['roleName'] || 'm_lead' === this.user['userRoleByRoleId']['roleName']) {\r\n        status = 'A';\r\n        if (this.task['missionUserInputsByTaskId'] != undefined && this.task['missionUserInputsByTaskId'].length > 0)  {\r\n          const dialogRef = this.dialog.open(SaveResponseConfirmDialog, {\r\n            width: '500px',\r\n            data: {confirm: 'No'}\r\n          });\r\n\r\n          dialogRef.afterClosed().subscribe(result => {\r\n            if (result.confirm == 'Yes'){\r\n              this.saveUserInput(status);\r\n            } else {\r\n              this.viewInputs();\r\n            }\r\n          });\r\n        } else {\r\n          this.saveUserInput(status);\r\n        }\r\n     } else if ('m_resp' === this.user['userRoleByRoleId']['roleName']) {\r\n       status = 'P';\r\n       this.saveUserInput(status);\r\n     }\r\n  }\r\n\r\n  saveUserInput(stats){\r\n    this.serviceMatrix.saveUserInput(this.user['id'], this.selectedRegion, this.inpuTaskId, this.multiplier).subscribe(res => {\r\n        this.customInit(this.selectedRegion , this.inpuTaskId);\r\n        this.snackBar.openSnackBar( \"Input saved successfully\", 'Close', \"green-snackbar\");\r\n      },\r\n      err => {\r\n        this.snackBar.openSnackBar( \"Error saving input value\", 'Close', \"red-snackbar\");\r\n      }\r\n    );\r\n  }\r\n\r\n  goBackToMatrix(){\r\n    this.router.navigate([\"service\", this.selectedRegion]);\r\n  }\r\n\r\n  viewInputs(){\r\n    const dialogConfig = new MatDialogConfig();\r\n    dialogConfig.width = '500px';\r\n    dialogConfig.autoFocus = true;\r\n    dialogConfig.data = {\r\n        regionName: this.selectedRegion,\r\n        userId: this.user['id'],\r\n        taskId : this.task['taskId']\r\n    };\r\n    const inputDialogRef = this.dialog.open(InputsComponent, dialogConfig);\r\n\r\n    inputDialogRef.afterClosed().subscribe(data => {\r\n      if(data != undefined) {\r\n        this.customInit(data.regionName , data.taskId);\r\n      }\r\n    });\r\n  }\r\n\r\n  provideYourInputs(){\r\n    this.router.navigate(['task',this.inpuTaskId]);\r\n  }\r\n\r\n  backToRegion(){\r\n    this.router.navigate([\"region\"]);\r\n  }\r\n\r\n  backToLogin(){\r\n    this.serviceMatrix.logout(this.userService.user['id']);\r\n    this.serviceMatrix.filterStore.pageIndex = 0;\r\n    this.serviceMatrix.filterStore.globalFilter = '';\r\n    this.serviceMatrix.filterStore.columnFilter = undefined;\r\n    this.serviceMatrix.filterStore.selectedSubProgTasks = [];\r\n    this.router.navigate([\"login\"]);\r\n  }\r\n\r\n/*  openSnackBar(message: string, action: string) {\r\n  let config = new MatSnackBarConfig();\r\n   config.verticalPosition = 'bottom';\r\n   config.horizontalPosition = 'right';\r\n   config.duration = 2000;\r\n    this.snackBar.open(message, action, config);\r\n  } */\r\n\r\n}\r\n\r\n@Component({\r\n  selector: 'save-input-confirm-dialog',\r\n  templateUrl: 'save-input-confirm-dialog.html',\r\n})\r\nexport class SaveResponseConfirmDialog {\r\n\r\n  constructor(\r\n    public dialogRef: MatDialogRef<SaveResponseConfirmDialog>,\r\n    @Inject(MAT_DIALOG_DATA) public data: any) {}\r\n\r\n  closeDialog(confirm): void{\r\n    this.dialogRef.close({'confirm': confirm});\r\n  }\r\n\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3VzZXIvdXNlci1yZWdpc3RyYXRpb24vdXNlci1yZWdpc3RyYXRpb24uY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<p>\\n  user-registration works!\\n</p>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-user-registration',\n  templateUrl: './user-registration.component.html',\n  styleUrls: ['./user-registration.component.css']\n})\nexport class UserRegistrationComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { UserRegistrationComponent } from \"./user-registration/user-registration.component\"\n\nconst routes: Routes = [\n  {\n    path:\"\",\n    component: UserRegistrationComponent\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class UserRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { UserRoutingModule } from './user-routing.module';\nimport { UserRegistrationComponent } from './user-registration/user-registration.component';\n\n@NgModule({\n  declarations: [UserRegistrationComponent],\n  imports: [\n    CommonModule,\n    UserRoutingModule\n  ]\n})\nexport class UserModule { }\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}