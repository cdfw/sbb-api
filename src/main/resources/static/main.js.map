{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/_guards/auth.guard.ts","webpack:///./src/app/_guards/index.ts","webpack:///./src/app/_services/alert.service.ts","webpack:///./src/app/_services/authentication.service.ts","webpack:///./src/app/_services/error-interceptor.ts","webpack:///./src/app/_services/http.interceptor.ts","webpack:///./src/app/_services/index.ts","webpack:///./src/app/_services/user.service.ts","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/current-state/labor-class-inputs/approve-cs-input-dialog.html","webpack:///./src/app/current-state/labor-class-inputs/delete-cs-input-dialog.html","webpack:///./src/app/current-state/labor-class-inputs/edit-cs-input-dialog.html","webpack:///./src/app/current-state/labor-class-inputs/labor-class-inputs.component.css","webpack:///./src/app/current-state/labor-class-inputs/labor-class-inputs.component.html","webpack:///./src/app/current-state/labor-class-inputs/labor-class-inputs.component.ts","webpack:///./src/app/current-state/labor-class-tasks/add-cs-input-dialog.css","webpack:///./src/app/current-state/labor-class-tasks/add-cs-input-dialog.html","webpack:///./src/app/current-state/labor-class-tasks/cs-input-taskexist-dialog.html","webpack:///./src/app/current-state/labor-class-tasks/labor-class-tasks.component.css","webpack:///./src/app/current-state/labor-class-tasks/labor-class-tasks.component.html","webpack:///./src/app/current-state/labor-class-tasks/labor-class-tasks.component.ts","webpack:///./src/app/current-state/labor-class/labor-class.component.css","webpack:///./src/app/current-state/labor-class/labor-class.component.html","webpack:///./src/app/current-state/labor-class/labor-class.component.ts","webpack:///./src/app/current-state/labor-hour-details/labor-hour-details.component.css","webpack:///./src/app/current-state/labor-hour-details/labor-hour-details.component.html","webpack:///./src/app/current-state/labor-hour-details/labor-hour-details.component.ts","webpack:///./src/app/login/login-form/data-type-selection-dialog.html","webpack:///./src/app/login/login-form/login-form.component.css","webpack:///./src/app/login/login-form/login-form.component.html","webpack:///./src/app/login/login-form/login-form.component.ts","webpack:///./src/app/login/login-form/reset-password-dialog.html","webpack:///./src/app/login/login-routing.module.ts","webpack:///./src/app/login/login.module.ts","webpack:///./src/app/service/feedback/feedback.component.css","webpack:///./src/app/service/feedback/feedback.component.html","webpack:///./src/app/service/feedback/feedback.component.ts","webpack:///./src/app/service/inputs/inputs.component.css","webpack:///./src/app/service/inputs/inputs.component.html","webpack:///./src/app/service/inputs/inputs.component.ts","webpack:///./src/app/service/mat-snack-bar/mat-snack-bar.component.css","webpack:///./src/app/service/mat-snack-bar/mat-snack-bar.component.html","webpack:///./src/app/service/mat-snack-bar/mat-snack-bar.component.ts","webpack:///./src/app/service/matrix-details/matrix-details.component.css","webpack:///./src/app/service/matrix-details/matrix-details.component.html","webpack:///./src/app/service/matrix-details/matrix-details.component.ts","webpack:///./src/app/service/service-matrix.service.ts","webpack:///./src/app/service/service-routing.module.ts","webpack:///./src/app/service/service.module.ts","webpack:///./src/app/service/task-details/save-input-confirm-dialog.html","webpack:///./src/app/service/task-details/task-details.component.css","webpack:///./src/app/service/task-details/task-details.component.html","webpack:///./src/app/service/task-details/task-details.component.ts","webpack:///./src/app/user/user-registration/user-registration.component.css","webpack:///./src/app/user/user-registration/user-registration.component.html","webpack:///./src/app/user/user-registration/user-registration.component.ts","webpack:///./src/app/user/user-routing.module.ts","webpack:///./src/app/user/user.module.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":";;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,4E;;;;;;;;;;;;;;;;;;ACZ2C;AACwD;AAInG;IAEI,mBAAoB,MAAc;QAAd,WAAM,GAAN,MAAM,CAAQ;IAAI,CAAC;IAEvC,+BAAW,GAAX,UAAY,KAA6B,EAAE,KAA0B;QACjE,IAAI,YAAY,CAAC,OAAO,CAAC,aAAa,CAAC,EAAE;YACrC,2BAA2B;YAC3B,OAAO,IAAI,CAAC;SACf;QAED,8DAA8D;QAC9D,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC;QACjC,4CAA4C;QAC5C,OAAO,KAAK,CAAC;IACjB,CAAC;IAdQ,SAAS;QAFrB,gEAAU,CAAC,EAAC,UAAU,EAAE,MAAM,EAAC,CAAC;+EAID,sDAAM;OAFzB,SAAS,CAerB;IAAD,gBAAC;CAAA;AAfqB;;;;;;;;;;;;;ACLtB;AAAA;AAAA;AAAA;AAA6B;;;;;;;;;;;;;;;;;;;;ACAc;AACe;AACf;AAG3C;IAII,sBAAoB,MAAc;QAAlC,iBAaC;QAbmB,WAAM,GAAN,MAAM,CAAQ;QAH1B,YAAO,GAAG,IAAI,4CAAO,EAAO,CAAC;QAC7B,8BAAyB,GAAG,KAAK,CAAC;QAGtC,sCAAsC;QACtC,MAAM,CAAC,MAAM,CAAC,SAAS,CAAC,eAAK;YACzB,IAAI,KAAK,YAAY,+DAAe,EAAE;gBAClC,IAAI,KAAI,CAAC,yBAAyB,EAAE;oBAChC,yCAAyC;oBACzC,KAAI,CAAC,yBAAyB,GAAG,KAAK,CAAC;iBAC1C;qBAAM;oBACH,cAAc;oBACd,KAAI,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC;iBACvB;aACJ;QACL,CAAC,CAAC,CAAC;IACP,CAAC;IAED,8BAAO,GAAP,UAAQ,OAAe,EAAE,yBAAiC;QAAjC,6EAAiC;QACtD,IAAI,CAAC,yBAAyB,GAAG,yBAAyB,CAAC;QAC3D,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,EAAE,IAAI,EAAE,SAAS,EAAE,IAAI,EAAE,OAAO,EAAE,CAAC,CAAC;IAC1D,CAAC;IAED,4BAAK,GAAL,UAAM,OAAe,EAAE,yBAAiC;QAAjC,6EAAiC;QACpD,IAAI,CAAC,yBAAyB,GAAG,yBAAyB,CAAC;QAC3D,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,EAAE,IAAI,EAAE,OAAO,EAAE,IAAI,EAAE,OAAO,EAAE,CAAC,CAAC;IACxD,CAAC;IAED,iCAAU,GAAV;QACI,OAAO,IAAI,CAAC,OAAO,CAAC,YAAY,EAAE,CAAC;IACvC,CAAC;IA/BQ,YAAY;QADxB,gEAAU,EAAE;+EAKmB,sDAAM;OAJzB,YAAY,CAgCxB;IAAD,mBAAC;CAAA;AAhCwB;;;;;;;;;;;;;;;;;;;;ACLkB;AACO;AAGsC;AAIxF;IAOG,gDAAgD;IAEjD,+BAAoB,IAAgB,EAAU,QAA8B;QAAxD,SAAI,GAAJ,IAAI,CAAY;QAAU,aAAQ,GAAR,QAAQ,CAAsB;QAN5E,oFAAoF;QACpF,6CAA6C;QAC5C,uFAAuF;QACvF,YAAO,GAAW,4BAA4B,CAAC;IAGgC,CAAC;IAEjF,qCAAK,GAAL,UAAM,QAAgB,EAAE,QAAgB;QACtC,IAAI,IAAI,GAAG,IAAI,CAAC;QAChB,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAa,IAAI,CAAC,OAAO,GAAG,kBAAkB,EAAE,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,CAAC;YAC9G,SAAS,EAAE;aACV,IAAI,CAAC,UAAU,QAAQ;YACtB,IAAI,QAAQ,EAAE;gBACZ,YAAY,CAAC,OAAO,CAAC,aAAa,EAAE,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,CAAC,CAAC;gBAC9D,OAAO,IAAI,CAAC;aACb;YACD,OAAO,KAAK,CAAC;QACf,CAAC,EAAE,UAAU,KAAK;YAChB,OAAO,KAAK,CAAC;QACf,CAAC,CAAC,CAAC;IAEP,CAAC;IAED,6CAAa,GAAb,UAAc,QAAgB,EAAE,QAAgB,EAAE,WAAmB;QACnE,IAAI,IAAI,GAAG,IAAI,CAAC;QAChB,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAa,IAAI,CAAC,OAAO,GAAG,eAAe,EAAE,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,WAAW,EAAE,WAAW,EAAE,CAAC,CAAC;IAC1I,CAAC;IAED,sCAAM,GAAN;QACE,YAAY,CAAC,UAAU,CAAC,aAAa,CAAC,CAAC;QACvC,YAAY,CAAC,UAAU,CAAC,iBAAiB,CAAC,CAAC;QAC3C,cAAc,CAAC,UAAU,CAAC,aAAa,CAAC,CAAC;IAC3C,CAAC;IApCU,qBAAqB;QADjC,gEAAU,EAAE;+EAUe,+DAAU,EAAoB,mGAAoB;OATjE,qBAAqB,CAsCjC;IAAD,4BAAC;CAAA;AAtCiC;;;;;;;;;;;;;;;;;;;;;ACFY;AACF;AAC4C;AAC7C;AAG3C;IAEA,8BAAqB,QAA8B;QAA9B,aAAQ,GAAR,QAAQ,CAAsB;IAEnD,CAAC;IAEC,wCAAS,GAAT,UAAU,OAAyB,EAAE,IAAiB;QAAtD,iBAmBC;QAlBC,OAAO,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC;aACf,IAAI,CACH,iEAAU,CAAE,UAAC,KAAwB;YAClC,IAAI,MAAM,GAAG,EAAE,CAAC;YAChB,oBAAoB;YACpB,IAAI,KAAK,CAAC,KAAK,YAAY,UAAU,EAAE;gBACrC,MAAM,GAAG,YAAU,KAAK,CAAC,KAAK,CAAC,OAAS,CAAC;aAC1C;iBACI,EAAG,oBAAoB;gBAC1B,MAAM,GAAG,iBAAe,KAAK,CAAC,MAAM,oBAAe,KAAK,CAAC,OAAS,CAAC;aACpE;YACD,0CAA0C;YAC5C,KAAI,CAAC,QAAQ,CAAC,YAAY,CAAC,qEAAqE,EAAC,OAAO,EAAC,cAAc,CAAC,CAAC;YACvH,4DAA4D;YAC5D,uBAAuB;YACvB,OAAO,uDAAU,CAAC,MAAM,CAAC,CAAC;QAC5B,CAAC,CAAC,CACJ;IACd,CAAC;IAzBU,oBAAoB;QADhC,gEAAU,EAAE;+EAGkB,mGAAoB;OAFtC,oBAAoB,CA0BhC;IAAD,2BAAC;CAAA;AA1BgC;;;;;;;;;;;;;;;;;;;;ACZQ;AAGO;AACD;AAG/C;IAEE,yBAAoB,OAA0B;QAA1B,YAAO,GAAP,OAAO,CAAmB;QAD9C,UAAK,GAAG,CAAC,CAAC;IACwC,CAAC;IACnD,mCAAS,GAAT,UAAU,GAAqB,EAAE,IAAiB;QAAlD,iBAuBC;QAtBC,IAAI,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC,OAAO,CAAC,aAAa,CAAC,CAAC,CAAC;QAC3D,GAAG,GAAG,GAAG,CAAC,KAAK,CAAC;YACZ,UAAU,EAAE;gBACR,aAAa,EAAE,SAAS,GAAE,CAAC,IAAI,KAAK,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,CAAC;aAClE;SACJ,CAAC,CAAC;QAEJ,UAAU,CAAC,cAAM,YAAI,CAAC,OAAO,CAAC,IAAI,EAAE,EAAnB,CAAmB,CAAC,CAAC;QACtC,yDAAyD;QACxD,IAAI,CAAC,KAAK,EAAE,CAAC;QACb,sDAAsD;QACtD,OAAO,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC;aACd,IAAI,CAAG,0DAAG,CACH,eAAK,IAAI,cAAO,CAAC,GAAG,CAAC,KAAK,CAAC,EAAlB,CAAkB,EAC3B,eAAK,IAAI,cAAO,CAAC,GAAG,CAAE,KAAK,CAAE,EAApB,CAAoB,CAChC,EAAE,+DAAQ,CAAC;YACR,sDAAsD;YACtD,KAAI,CAAC,KAAK,EAAE,CAAC;YACb,IAAK,KAAI,CAAC,KAAK,IAAI,CAAC;gBAAG,KAAI,CAAC,OAAO,CAAC,IAAI,EAAG;QAC/C,CAAC,CAAC,CACL,CAAC;QACJ,6BAA6B;IACrC,CAAC;IA1BU,eAAe;QAD3B,gEAAU,EAAE;+EAGkB,6DAAiB;OAFnC,eAAe,CA2B3B;IAAD,sBAAC;CAAA;AA3B2B;;;;;;;;;;;;;ACP5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAgC;AACS;AACV;;;;;;;;;;;;;;;;;;;ACFY;AACO;AAKlD;IACI,qBAAoB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;IAAI,CAAC;IAEzC,sBAAI,6BAAI;aAAR;YACE,OAAO,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC,OAAO,CAAC,aAAa,CAAC,CAAC,CAAC;QACzD,CAAC;;;OAAA;IAED,sBAAI,+BAAM;aAAV;YACE,OAAO,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC,OAAO,CAAC,aAAa,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC;QAC/D,CAAC;;;OAAA;IAED,6CAAuB,GAAvB,UAAwB,cAAqB;QAC3C,IAAG,YAAY,CAAC,OAAO,CAAC,aAAa,CAAC,IAAI,IAAI,IAAI,YAAY,CAAC,OAAO,CAAC,aAAa,CAAC,IAAI,SAAS,EAAC;YACjG,IAAI,iBAAiB,GAAG,IAAI,CAAC,IAAI,CAAC,wBAAwB,CAAC,CAAC;YAC5D,KAAsB,UAAiB,EAAjB,uCAAiB,EAAjB,+BAAiB,EAAjB,IAAiB,EAAE;gBAArC,IAAI,UAAU;gBAChB,IAAG,cAAc,KAAK,UAAU,CAAC,kBAAkB,CAAC,CAAC,YAAY,CAAC,EAAC;oBACjE,OAAO,UAAU,CAAC,kBAAkB,CAAC,CAAC;iBACvC;aACF;SACF;QACD,OAAO,IAAI,CAAC;IACd,CAAC;IAED,sBAAI,iCAAQ;aAAZ;YACE,OAAO,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC,OAAO,CAAC,aAAa,CAAC,CAAC,CAAC,kBAAkB,CAAC,CAAC,UAAU,CAAC,CAAC;QACzF,CAAC;;;OAAA;IAED,6BAAO,GAAP;QACI,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAS,QAAQ,CAAC,CAAC;IAC3C,CAAC;IAED,6BAAO,GAAP,UAAQ,EAAU;QACd,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,SAAS,GAAG,EAAE,CAAC,CAAC;IACzC,CAAC;IAED,8BAAQ,GAAR,UAAS,IAAU;QACf,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,iBAAiB,EAAE,IAAI,CAAC,CAAC;IACnD,CAAC;IAED,4BAAM,GAAN,UAAO,IAAU;QACb,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,SAAS,GAAG,IAAI,CAAC,EAAE,EAAE,IAAI,CAAC,CAAC;IACpD,CAAC;IAED,4BAAM,GAAN,UAAO,EAAU;QACb,OAAO,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,SAAS,GAAG,EAAE,CAAC,CAAC;IAC5C,CAAC;IA7CQ,WAAW;QADvB,gEAAU,EAAE;+EAEiB,+DAAU;OAD3B,WAAW,CA8CvB;IAAD,kBAAC;CAAA;AA9CuB;;;;;;;;;;;;;;;;;;;;;;;;;;ACNiB;AACc;AACyC;AACN;AACb;AACQ;AAC/C;AACkD;AACoB;AAG5G,IAAM,MAAM,GAAW;IACrB,EAAE,IAAI,EAAE,MAAM,EAAE,SAAS,EAAE,6GAAyB,EAAE,WAAW,EAAE,CAAC,iDAAS,CAAC,EAAE;IAChF,EAAE,IAAI,EAAE,+BAA+B,EAAE,SAAS,EAAG,uGAAsB,EAAE,WAAW,EAAE,CAAC,iDAAS,CAAC,EAAC;IACtG,EAAE,IAAI,EAAE,oCAAoC,EAAE,SAAS,EAAG,iGAAoB,EAAE,WAAW,EAAE,CAAC,iDAAS,CAAC,EAAC;IACzG,EAAE,IAAI,EAAE,wBAAwB,EAAE,SAAS,EAAG,oGAAmB,EAAE,WAAW,EAAE,CAAC,iDAAS,CAAC,EAAC;IAC5F,EAAE,IAAI,EAAE,wCAAwC,EAAE,SAAS,EAAG,wHAAyB,EAAE,WAAW,EAAE,CAAC,iDAAS,CAAC,EAAC;IAClH,EAAE,IAAI,EAAE,OAAO,EAAE,SAAS,EAAG,yFAAkB,EAAC;IAChD,EAAE,IAAI,EAAE,EAAE,EAAE,SAAS,EAAG,yFAAkB,EAAC;IAC3C,6BAA6B;IAC3B,EAAE,IAAI,EAAE,IAAI,EAAE,UAAU,EAAE,EAAE,EAAE;CACjC,CAAC;AAMF;IAAA;IAAgC,CAAC;IAApB,gBAAgB;QAJ5B,8DAAQ,CAAC;YACR,OAAO,EAAE,CAAC,4DAAY,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;YACvC,OAAO,EAAE,CAAC,4DAAY,CAAC;SACxB,CAAC;OACW,gBAAgB,CAAI;IAAD,uBAAC;CAAA;AAAJ;;;;;;;;;;;;AC3B7B,mCAAmC,mBAAmB,gCAAgC,+BAA+B,8BAA8B,4BAA4B,KAAK,yBAAyB,uBAAuB,0BAA0B,KAAK,+BAA+B,uIAAuI,yBAAyB,KAAK,uBAAuB,iBAAiB,uBAAuB,OAAO,oBAAoB,uBAAuB,eAAe,iBAAiB,mBAAmB,yBAAyB,8BAA8B,uBAAuB,wBAAwB,gCAAgC,oBAAoB,qBAAqB,oCAAoC,yBAAyB,MAAM,mDAAmD,+uD;;;;;;;;;;;ACAh5B,mFAAmF,2BAA2B,cAAc,gUAAgU,OAAO,GAAG,eAAe,0dAA0d,OAAO,GAAG,eAAe,yDAAyD,mBAAmB,8wC;;;;;;;;;;;;;;;;;;;ACA1+B;AAEA;AACkB;AAO5D;IAIE,sBAAoB,WAAuB;QAAvB,gBAAW,GAAX,WAAW,CAAY;QAH3C,UAAK,GAAG,sDAAsD,CAAC;QAC/D,eAAU,GAAY,qEAAW,CAAC,UAAU,CAAC;IAEC,CAAC;IAE/C,qCAAc,GAAd;QACI,oCAAoC;IACxC,CAAC;IAED,kCAAW,GAAX;QACE,IAAG,IAAI,CAAC,WAAW,CAAC,IAAI,IAAI,IAAI,EAAC;YAC/B,IAAG,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,sBAAsB,CAAC,CAAC,UAAU,CAAC,IAAI,SAAS,EAAC;gBACxE,OAAO,kBAAkB,CAAC;aAC3B;iBAAM,IAAG,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,sBAAsB,CAAC,CAAC,UAAU,CAAC,IAAI,SAAS,EAAC;gBAC/E,OAAO,kBAAkB;aAC1B;iBAAM,IAAG,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,sBAAsB,CAAC,CAAC,UAAU,CAAC,IAAI,MAAM,EAAC;gBAC5E,OAAO,cAAc,CAAC,OAAO,CAAC,aAAa,CAAC,CAAC;aAC9C;SACF;QACD,OAAO,EAAE,CAAC;IACZ,CAAC;IArBU,YAAY;QALxB,+DAAS,CAAC;YACT,QAAQ,EAAE,UAAU;YACpB,yFAAmC;;SAEpC,CAAC;+EAKgC,qDAAW;OAJhC,YAAY,CAuBxB;IAAD,mBAAC;CAAA;AAvBwB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACViC;AACjB;AAEe;AACT;AAEC;AACS;AACN;AAE4B;AAKpD;AAEuC;AACL;AACd;AAES;AACY;AACM;AACC;AACT;AACxB;AACQ;AACN;AACM;AAEhC;AACmD;AACkB;AACxB;AACyC;AAC9B;AACc;AACoB;AAC8D;AACvB;AAqEnJ;IAAA;IAAyB,CAAC;IAAb,SAAS;QAnErB,8DAAQ,CAAC;YACR,YAAY,EAAE;gBACZ,2DAAY;gBACZ,oGAAoB;gBACpB,4FAAoB;gBACpB,+FAAuB;gBACvB,8GAAgB;gBAChB,iHAAiB;gBACjB,mHAAmB;gBACnB,oHAAoB;gBACpB,oHAAsB;gBACtB,qGAAmB;gBACnB,yHAAyB;gBACzB,yHAAyB;gBACzB,sHAAwB;aACzB;YACD,OAAO,EAAE;gBACP,uEAAa;gBACb,2DAAW;gBACX,mEAAmB;gBACnB,oEAAgB;gBAChB,sEAAgB;gBAChB,UAAU;gBAEV,4FAAuB;gBACvB,gFAAkB;gBAClB,kEAAgB;gBAChB,iEAAe;gBACf,+DAAa;gBACb,gEAAc;gBACd,iEAAe;gBACf,gEAAc;gBACd,+DAAa;gBACb,+DAAa;gBACb,0EAAwB;gBACxB,kEAAgB;gBAChB,2EAAgB;gBAChB,+DAAa;gBACb,iEAAe;gBACf,uEAAqB;gBACrB,sEAAgB;gBAChB,4DAAU;gBACV,qEAAa;gBACb,+DAAW;gBACX,mEAAiB;gBACjB,6DAAgB;gBAChB,oEAAkB;gBAClB,+DAAa;gBACb,oEAAkB;gBAClB,gEAAe;gBACf,0DAAW;gBACX,gEAAc;aACf;YACD,SAAS,EAAE,CAAC;oBACV,OAAO,EAAE,uEAAiB;oBAC1B,QAAQ,EAAE,iFAAoB;oBAC9B,KAAK,EAAE,IAAI;iBACZ;gBACD;oBACE,OAAO,EAAE,uEAAiB;oBAC1B,QAAQ,EAAE,2EAAe;oBACzB,KAAK,EAAE,IAAI;iBACZ;gBACC,uFAAqB,EAAE,sDAAW,EAAE,oGAAoB,CAAC;YAC3D,SAAS,EAAE,CAAC,2DAAY,CAAC;YACzB,eAAe,EAAE,CAAC,iFAAe,EAAE,4FAAoB,EAAE,uFAAiB,EAAE,+FAAuB,EAAE,8GAAgB,EAAE,iHAAiB,EAAE,mHAAmB,EAAE,oHAAoB,EAAE,oHAAsB,CAAC;SAC7M,CAAC;OACW,SAAS,CAAI;IAAD,gBAAC;CAAA;AAAJ;;;;;;;;;;;;AC7GtB,2KAA2K,sBAAsB,0BAA0B,kBAAkB,8BAA8B,sBAAsB,oQ;;;;;;;;;;;ACAjS,yKAAyK,sBAAsB,0BAA0B,kBAAkB,8BAA8B,sBAAsB,oQ;;;;;;;;;;;ACA/R,0LAA0L,sBAAsB,kIAAkI,kBAAkB,spBAAspB,kBAAkB,kBAAkB,KAAK,0CAA0C,GAAG,kBAAkB,MAAM,sBAAsB,qCAAqC,KAAK,6CAA6C,KAAK,yCAAyC,KAAK,4CAA4C,WAAW,8CAA8C,4IAA4I,cAAc,wBAAwB,2BAA2B,qBAAqB,+EAA+E,wGAAwG,0RAA0R,iLAAiL,0JAA0J,4HAA4H,wEAAwE,4FAA4F,gCAAgC,KAAK,gBAAgB,mIAAmI,KAAK,yDAAyD,6IAA6I,KAAK,0EAA0E,qPAAqP,wBAAwB,KAAK,0CAA0C,uNAAuN,wBAAwB,KAAK,6CAA6C,4MAA4M,wBAAwB,KAAK,iDAAiD,6NAA6N,wBAAwB,KAAK,mDAAmD,+D;;;;;;;;;;;ACAjwI,wBAAwB,wBAAwB,uBAAuB,wBAAwB,yBAAyB,KAAK,sBAAsB,kCAAkC,KAAK,+BAA+B,aAAa,EAAE,uBAAuB,0BAA0B,qDAAqD,+zB;;;;;;;;;;;ACA9U,iJAAiJ,8OAA8O,+EAA+E,qBAAqB,KAAK,yBAAyB,iHAAiH,0VAA0V,cAAc,oDAAoD,cAAc,yEAAyE,sDAAsD,8CAA8C,oDAAoD,qDAAqD,6CAA6C,+CAA+C,sLAAsL,qNAAqN,sCAAsC,gBAAgB,mBAAmB,iDAAiD,2IAA2I,qEAAqE,+EAA+E,cAAc,KAAK,oBAAoB,0CAA0C,kFAAkF,gCAAgC,+EAA+E,oFAAoF,gCAAgC,+EAA+E,kFAAkF,8BAA8B,8EAA8E,2BAA2B,iBAAiB,2CAA2C,KAAK,eAAe,0CAA0C,o+B;;;;;;;;;;;;;;;;;;;;;;;;;;ACAn4F;AACvC;AAC8B;AAClD;AACiD;AACgB;AAQ7F;IAmBE,mCAAoB,WAAwB,EAAU,aAAmC,EAAS,MAAiB,EAAU,QAA8B;QAAvI,gBAAW,GAAX,WAAW,CAAa;QAAU,kBAAa,GAAb,aAAa,CAAsB;QAAS,WAAM,GAAN,MAAM,CAAW;QAAU,aAAQ,GAAR,QAAQ,CAAsB;QAfjJ,iBAAY,GAAG,IAAI,0DAAY,EAAE,CAAC;QAClC,mBAAc,GAAG,IAAI,0DAAY,EAAE,CAAC;QACpC,YAAO,GAAG,IAAI,0DAAY,EAAE,CAAC;QAUvC,oBAAe,GAAY,KAAK,CAAC;QACjC,eAAU,GAAY,KAAK,CAAC;IAEmI,CAAC;IAEhK,4CAAQ,GAAR;QACE,IAAI,CAAC,UAAU,EAAE,CAAC;QAClB,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC;QAClC,IAAG,QAAQ,KAAK,IAAI,CAAC,IAAI,CAAC,oBAAoB,CAAC,CAAC,UAAU,CAAC,EAAE;YAC3D,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;SACxB;IACH,CAAC;IAED,sBAAI,oDAAa;aAAjB;YACC,8BAA8B;YAC9B,OAAO,IAAI,CAAC,cAAc,CAAC;QAC7B,CAAC;aAGD,UAAkB,aAAkB;YADpC,iBAGC;YADC,IAAI,CAAC,cAAc,GAAG,aAAa,CAAC,MAAM,CAAC,WAAC,IAAI,QAAC,CAAC,YAAY,CAAC,IAAI,KAAI,CAAC,UAAU,EAAlC,CAAkC,CAAC,CAAC;QACtF,CAAC;;;OALA;IAOA,8CAAU,GAAV;QAAA,iBAmBC;QAlBC,IAAI,KAAK,GAAG,IAAI,CAAC;QACjB,IAAI,CAAC,aAAa,CAAC,gCAAgC,CAAC,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,UAAU,CAAC,CAAC,SAAS,CAAC,aAAG;YAC/F,KAAK,CAAC,MAAM,GAAG,mCAAC,CAAC,GAAG,CAAC;iBAClB,OAAO,CAAC,WAAC,IAAI,QAAC,CAAC,QAAQ,CAAC,EAAX,CAAW,CAAC;iBACzB,GAAG,CAAC,UAAC,KAAK,EAAE,GAAG,IAAK,QAAC,EAAE,MAAM,EAAE,GAAG,EAAE,KAAK,EAAE,KAAK,EAAE,CAAC,EAA/B,CAA+B,CAAC;iBACpD,KAAK,EAAE,CAAC;YAEX,IAAI,EAAE,GAAG,4CAAO,CAAC,GAAS,EAAE,UAAU,CAAC;gBACnC,OAAO,CAAC,CAAC,YAAY,CAAC,CAAC;YAC3B,CAAC,CAAC,CAAC;YACH,IAAI,IAAI,GAAG,GAAS,CAAC;YACrB,IAAI,YAAY,GAAG,IAAI,CAAC,MAAM,CAAC,WAAC,IAAI,QAAC,CAAC,QAAQ,CAAC,IAAI,GAAG,EAAlB,CAAkB,CAAC,CAAC;YACxD,IAAI,EAAE,GAAG,4CAAO,CAAC,YAAY,EAAE,UAAU,CAAC;gBACtC,OAAO,CAAC,CAAC,YAAY,CAAC,CAAC;YAC3B,CAAC,CAAC,CAAC;YACH,KAAI,CAAC,YAAY,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;YAC3B,KAAI,CAAC,cAAc,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;QAC/B,CAAC,CAAC,CAAC;IACL,CAAC;IAED,6CAAS,GAAT,UAAU,IAAI;QAAd,iBAUC;QATC,IAAM,SAAS,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,iBAAiB,EAAE;YACpD,IAAI,EAAE,EAAE,IAAI,EAAE,IAAI,EAAE,SAAS,EAAE,IAAI,CAAC,SAAS,EAAE,YAAY,EAAE,IAAI,CAAC,WAAW,EAAE;SAChF,CAAC,CAAC;QAEH,SAAS,CAAC,WAAW,EAAE,CAAC,SAAS,CAAC,gBAAM;YACtC,IAAI,MAAM,EAAE;gBACV,KAAI,CAAC,UAAU,EAAE,CAAC;aACnB;QACH,CAAC,CAAC,CAAC;IACL,CAAC;IAED,+CAAW,GAAX,UAAY,IAAI;QAAhB,iBAUC;QATC,IAAM,SAAS,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,mBAAmB,EAAE;YACtD,IAAI,EAAE,EAAE,IAAI,EAAE,IAAI,EAAE;SACrB,CAAC,CAAC;QAEH,SAAS,CAAC,WAAW,EAAE,CAAC,SAAS,CAAC,gBAAM;YACtC,IAAI,MAAM,EAAE;gBACV,KAAI,CAAC,UAAU,EAAE,CAAC;aACnB;QACH,CAAC,CAAC,CAAC;IACL,CAAC;IAED,kDAAc,GAAd,UAAe,IAAI;QAAnB,iBAmBC;QAlBC,IAAI,CAAC,aAAa,CAAC,cAAc,CAAC,IAAI,EAAE,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC,SAAS,CAAC,aAAG;YAC5E,IAAI,GAAG,EAAE;gBACP,KAAI,CAAC,QAAQ,CAAC,YAAY,CAAC,iBAAiB,EAAE,OAAO,EAAE,gBAAgB,CAAC,CAAC;gBACzE,KAAI,CAAC,UAAU,EAAE,CAAC;gBAClB,4BAA4B;aAC7B;iBAAM;gBACL,KAAI,CAAC,QAAQ,CAAC,YAAY,CAAC,uBAAuB,EAAE,OAAO,EAAE,cAAc,CAAC,CAAC;aAC9E;QACH,CAAC,CAAC,CAAC;QACL;;;;;;;;eAQO;IACP,CAAC;IAED,mDAAe,GAAf;QAAA,iBAUC;QATC,IAAI,CAAC,aAAa,CAAC,gBAAgB,CAAC,IAAI,CAAC,QAAQ,EAAG,IAAI,CAAC,UAAU,EAAE,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC,SAAS,CAAC,aAAG;YACzG,IAAI,GAAG,EAAE;gBACP,KAAI,CAAC,QAAQ,CAAC,YAAY,CAAC,kBAAkB,EAAE,OAAO,EAAE,gBAAgB,CAAC,CAAC;gBAC1E,KAAI,CAAC,UAAU,EAAE,CAAC;gBAClB,4BAA4B;aAC7B;iBAAM;gBACL,KAAI,CAAC,QAAQ,CAAC,YAAY,CAAC,uBAAuB,EAAE,OAAO,EAAE,cAAc,CAAC,CAAC;aAC9E;QACH,CAAC,CAAC,CAAC;IACL,CAAC;IAEC,6CAAS,GAAT;QAAA,iBAeC;QAdC,IAAI,CAAC,eAAe,GAAG,KAAK,CAAC;QAC7B,IAAG,IAAI,CAAC,SAAS,IAAI,SAAS,IAAI,IAAI,CAAC,SAAS,CAAC,MAAM,IAAI,CAAC,EAAE;YAC5D,IAAI,CAAC,QAAQ,CAAC,YAAY,CAAE,4BAA4B,EAAE,OAAO,EAAE,cAAc,CAAC,CAAC;SACpF;aAAM;YACL,IAAI,oBAAoB,GAAG,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,WAAC,IAAI,QAAC,CAAC,UAAU,EAAZ,CAAY,CAAC,CAAC;YACjE,IAAI,eAAe,GAAY,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,WAAC,IAAI,QAAC,CAAC,MAAM,EAAR,CAAQ,CAAC,CAAC;YAC9D,IAAI,CAAC,aAAa,CAAC,SAAS,CAAC,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,WAAW,CAAC,MAAM,EAAE,IAAI,CAAC,UAAU,EAAE,oBAAoB,EACvG,eAAe,CAAC,CAAC,SAAS,CAAC,aAAG;gBAC/B,KAAI,CAAC,QAAQ,CAAC,YAAY,CAAE,2BAA2B,EAAE,OAAO,EAAE,gBAAgB,CAAC,CAAC;gBACpF,KAAI,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC;YACtB,CAAC,EAAE,aAAG;gBACJ,KAAI,CAAC,QAAQ,CAAC,YAAY,CAAE,qBAAqB,EAAE,OAAO,EAAE,cAAc,CAAC,CAAC;YAC9E,CAAC,CAAC,CAAC;SACJ;IACH,CAAC;IAlIkB;QAApB,2DAAK,CAAC,YAAY,CAAC;;iEAAoB;IACrB;QAAlB,2DAAK,CAAC,UAAU,CAAC;;+DAAkB;IAC1B;QAAT,4DAAM,EAAE;;mEAAmC;IAClC;QAAT,4DAAM,EAAE;;qEAAqC;IACpC;QAAT,4DAAM,EAAE;;8DAA8B;IAGhB;QAAtB,2DAAK,CAAC,cAAc,CAAC;;kEAAqB;IACnB;QAAvB,2DAAK,CAAC,eAAe,CAAC;;oEAAuB;IAC1B;QAAnB,2DAAK,CAAC,WAAW,CAAC;;gEAAmB;IAwBvC;QADC,2DAAK,CAAC,eAAe,CAAC;;;kEAGtB;IArCW,yBAAyB;QALrC,+DAAS,CAAC;YACT,QAAQ,EAAE,wBAAwB;YAClC,wJAAkD;;SAEnD,CAAC;+EAoBiC,4DAAW,EAAyB,2FAAoB,EAAiB,2DAAS,EAAoB,0GAAoB;OAnBhJ,yBAAyB,CAsIrC;IAAD,gCAAC;CAAA;AAtIqC;AA4ItC;IAIE,2BACS,SAA0C,EACjB,IAAS,EAAU,aAAmC,EAAU,QAA8B,EACtH,WAAwB;QAFzB,cAAS,GAAT,SAAS,CAAiC;QACjB,SAAI,GAAJ,IAAI,CAAK;QAAU,kBAAa,GAAb,aAAa,CAAsB;QAAU,aAAQ,GAAR,QAAQ,CAAsB;QACtH,gBAAW,GAAX,WAAW,CAAa;QALlC,qBAAgB,GAAW,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC;QAMjD,SAAS,CAAC,YAAY,GAAG,IAAI,CAAC;IAChC,CAAC;IAEH,qCAAS,GAAT;QACE,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,gBAAgB,CAAC;QAClD,IAAI,CAAC,SAAS,CAAC,KAAK,EAAE,CAAC;IACzB,CAAC;IAED,oCAAQ,GAAR;QAAA,iBAcC;QAbC,IAAI,IAAI,GAAG,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC;QACjC,IAAI,QAAQ,GAAU,KAAK,CAAC;QAC5B,IAAG,QAAQ,KAAK,IAAI,CAAC,oBAAoB,CAAC,CAAC,UAAU,CAAC,EAAE;YACtD,QAAQ,GAAG,IAAI,CAAC;SACjB;QACD,IAAI,CAAC,aAAa,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,WAAW,CAAC,MAAM,EAAE,QAAQ,CAAC,CAAC,SAAS,CAAC,aAAG;YAC7F,IAAI,GAAG,EAAE;gBACP,KAAI,CAAC,QAAQ,CAAC,YAAY,CAAC,0BAA0B,EAAE,OAAO,EAAE,gBAAgB,CAAC,CAAC;gBAClF,KAAI,CAAC,SAAS,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;aAC3B;iBAAM;gBACL,KAAI,CAAC,QAAQ,CAAC,YAAY,CAAC,0BAA0B,EAAE,OAAO,EAAE,cAAc,CAAC,CAAC;aACjF;QACH,CAAC,CAAC,CAAC;IACL,CAAC;IAED,sCAAU,GAAV;QAAA,iBASC;QARC,IAAI,CAAC,aAAa,CAAC,wBAAwB,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC,SAAS,CAAC,aAAG;YAChG,IAAI,GAAG,EAAE;gBACP,KAAI,CAAC,QAAQ,CAAC,YAAY,CAAC,6BAA6B,EAAE,OAAO,EAAE,gBAAgB,CAAC,CAAC;gBACrF,KAAI,CAAC,SAAS,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;aAC3B;iBAAM;gBACL,KAAI,CAAC,QAAQ,CAAC,YAAY,CAAC,uBAAuB,EAAE,OAAO,EAAE,cAAc,CAAC,CAAC;aAC9E;QACH,CAAC,CAAC,CAAC;IACL,CAAC;IAzCU,iBAAiB;QAJ7B,+DAAS,CAAC;YACT,QAAQ,EAAE,sBAAsB;YAChC,wIAAwC;SACzC,CAAC;QAOG,6GAAM,CAAC,iEAAe,CAAC;+EADN,8DAAY,UACoC,2FAAoB,EAAoB,0GAAoB;YACzG,4DAAW;OAPvB,iBAAiB,CA2C7B;IAAD,wBAAC;CAAA;AA3C6B;AAiD9B;IAEE,6BACS,SAA4C,EACnB,IAAS,EAAU,aAAmC,EAAU,QAA8B;QADvH,cAAS,GAAT,SAAS,CAAmC;QACnB,SAAI,GAAJ,IAAI,CAAK;QAAU,kBAAa,GAAb,aAAa,CAAsB;QAAU,aAAQ,GAAR,QAAQ,CAAsB;IAAI,CAAC;IAErI,uCAAS,GAAT;QACE,IAAI,CAAC,SAAS,CAAC,KAAK,EAAE,CAAC;IACzB,CAAC;IAED,uCAAS,GAAT;QAAA,iBASC;QARC,IAAI,CAAC,aAAa,CAAC,aAAa,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,SAAS,CAAC,aAAG;YAC5D,IAAI,GAAG,EAAE;gBACP,KAAI,CAAC,QAAQ,CAAC,YAAY,CAAC,4BAA4B,EAAE,OAAO,EAAE,gBAAgB,CAAC,CAAC;gBACpF,KAAI,CAAC,SAAS,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;aAC3B;iBAAM;gBACL,KAAI,CAAC,QAAQ,CAAC,YAAY,CAAC,4BAA4B,EAAE,OAAO,EAAE,cAAc,CAAC,CAAC;aACnF;QACH,CAAC,CAAC,CAAC;IACL,CAAC;IAnBU,mBAAmB;QAJ/B,+DAAS,CAAC;YACT,QAAQ,EAAE,wBAAwB;YAClC,4IAA0C;SAC3C,CAAC;QAKG,6GAAM,CAAC,iEAAe,CAAC;+EADN,8DAAY,UACoC,2FAAoB,EAAoB,0GAAoB;OAJrH,mBAAmB,CAoB/B;IAAD,0BAAC;CAAA;AApB+B;AA2BhC;IAEE,8BACS,SAA4C,EACnB,IAAS,EACjC,aAAmC,EACnC,QAA8B,EAC9B,WAAwB;QAJzB,cAAS,GAAT,SAAS,CAAmC;QACnB,SAAI,GAAJ,IAAI,CAAK;QACjC,kBAAa,GAAb,aAAa,CAAsB;QACnC,aAAQ,GAAR,QAAQ,CAAsB;QAC9B,gBAAW,GAAX,WAAW,CAAa;IAAI,CAAC;IAEvC,wCAAS,GAAT;QACE,IAAI,CAAC,SAAS,CAAC,KAAK,EAAE,CAAC;IACzB,CAAC;IAED,wCAAS,GAAT;QAAA,iBASC;QARC,IAAI,CAAC,aAAa,CAAC,cAAc,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC,SAAS,CAAC,aAAG;YACtF,IAAI,GAAG,EAAE;gBACP,KAAI,CAAC,QAAQ,CAAC,YAAY,CAAC,6BAA6B,EAAE,OAAO,EAAE,gBAAgB,CAAC,CAAC;gBACrF,KAAI,CAAC,SAAS,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;aAC3B;iBAAM;gBACL,KAAI,CAAC,QAAQ,CAAC,YAAY,CAAC,uBAAuB,EAAE,OAAO,EAAE,cAAc,CAAC,CAAC;aAC9E;QACH,CAAC,CAAC,CAAC;IACL,CAAC;IAtBU,oBAAoB;QAJhC,+DAAS,CAAC;YACT,QAAQ,EAAE,yBAAyB;YACnC,8IAA2C;SAC5C,CAAC;QAKG,6GAAM,CAAC,iEAAe,CAAC;+EADN,8DAAY,UAEP,2FAAoB;YACzB,0GAAoB;YACjB,4DAAW;OAPvB,oBAAoB,CAuBhC;IAAD,2BAAC;CAAA;AAvBgC;;;;;;;;;;;;ACrOjC,yBAAyB,kCAAkC,4BAA4B,KAAK,+CAA+C,ub;;;;;;;;;;;ACA3I,sGAAsG,kBAAkB,kBAAkB,KAAK,eAAe,GAAG,aAAa,MAAM,YAAY,4DAA4D,cAAc,kBAAkB,YAAY,UAAU,sBAAsB,4GAA4G,sBAAsB,qPAAqP,sBAAsB,8NAA8N,aAAa,sBAAsB,iBAAiB,kBAAkB,GAAG,cAAc,GAAG,iBAAiB,GAAG,mBAAmB,gIAAgI,aAAa,sEAAsE,kBAAkB,kBAAkB,KAAK,oBAAoB,GAAG,kBAAkB,MAAM,iBAAiB,qCAAqC,KAAK,uBAAuB,KAAK,mBAAmB,KAAK,sBAAsB,WAAW,wBAAwB,2IAA2I,cAAc,wBAAwB,+EAA+E,wGAAwG,iQAAiQ,+KAA+K,0KAA0K,4IAA4I,oFAAoF,4FAA4F,gCAAgC,KAAK,WAAW,mIAAmI,KAAK,qCAAqC,6IAA6I,KAAK,iDAAiD,qPAAqP,wBAAwB,KAAK,eAAe,uNAAuN,wBAAwB,KAAK,kBAAkB,4MAA4M,wBAAwB,KAAK,sBAAsB,6NAA6N,wBAAwB,KAAK,wBAAwB,+D;;;;;;;;;;;ACA7tI,sQ;;;;;;;;;;;ACAA,yHAAyH,kCAAkC,KAAK,yBAAyB,mBAAmB,+BAA+B,MAAM,yBAAyB,uBAAuB,kBAAkB,MAAM,wBAAwB,6BAA6B,KAAK,uCAAuC,uIAAuI,KAAK,iDAAiD,sBAAsB,KAAK,0BAA0B,uBAAuB,mBAAmB,sBAAsB,KAAK,2BAA2B,sBAAsB,KAAK,sBAAsB,iBAAiB,uBAAuB,KAAK,8BAA8B,0BAA0B,mBAAmB,sBAAsB,KAAK,yBAAyB,sBAAsB,KAAK,iCAAiC,yCAAyC,kCAAkC,KAAK,mDAAmD,uuE;;;;;;;;;;;ACAxoC,g/CAAg/C,gBAAgB,yQAAyQ,qBAAqB,qQAAqQ,iBAAiB,4QAA4Q,oBAAoB,gRAAgR,sBAAsB,mQAAmQ,kBAAkB,yOAAyO,uBAAuB,kVAAkV,4BAA4B,mVAAmV,wBAAwB,sVAAsV,2BAA2B,6VAA6V,6BAA6B,kVAAkV,yBAAyB,+WAA+W,2BAA2B,iL;;;;;;;;;;;;;;;;;;;;;;;;;ACAtuK;AAClD;AAC8B;AAC0C;AAC3B;AACjE;AAO5B;IA+BE,kCAAoB,WAAwB,EAAU,aAAmC,EAAS,MAAiB,EAAU,QAA8B;QAAvI,gBAAW,GAAX,WAAW,CAAa;QAAU,kBAAa,GAAb,aAAa,CAAsB;QAAS,WAAM,GAAN,MAAM,CAAW;QAAU,aAAQ,GAAR,QAAQ,CAAsB;QAvBjJ,uBAAkB,GAAG,IAAI,0DAAY,EAAE,CAAC;QACxC,0BAAqB,GAAG,IAAI,0DAAY,EAAE,CAAC;QAKrD,eAAU,GAAQ,EAAE,CAAC;QAIrB,eAAU,GAAG,IAAI,oEAAkB,EAAU,CAAC;QAE9C,qBAAgB,GAAa,CAAC,QAAQ,EAAE,aAAa,EAAE,SAAS,EAAE,YAAY,EAAE,cAAc,EAAE,UAAU,EAAE,UAAU,CAAC,CAAC;QACxH,2BAAsB,GAAa,EAAE,CAAC;QACtC,iBAAY,GAAG,EAAE,CAAC;QAClB,mBAAc,GAAG;YACf,MAAM,EAAE,EAAE,EAAE,WAAW,EAAE,EAAE,EAAE,OAAO,EAAE,EAAE;YACxC,UAAU,EAAE,EAAE,EAAE,YAAY,EAAE,EAAE,EAAE,QAAQ,EAAE,EAAE;SAC/C,CAAC;IAK6J,CAAC;IAEhK,2CAAQ,GAAR;QAAA,iBAmBC;QAlBC,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC;QAClC,+BAA+B;QAC/B,0EAA0E;QAC1E,IAAI,CAAC,gBAAgB,CAAC,OAAO,CAAC,WAAC;YAC7B,KAAI,CAAC,sBAAsB,CAAC,IAAI,CAAC,CAAC,GAAG,SAAS,CAAC,CAAC;QAClD,CAAC,CAAC,CAAC;QACH,IAAI,CAAC,UAAU,CAAC,IAAI,GAAG,IAAI,CAAC,WAAuB,CAAC;QACpD,IAAI,CAAC,UAAU,CAAC,eAAe,GAAG,IAAI,CAAC,qBAAqB,EAAE,CAAC;QAE/D,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,KAAK,CAAC,cAAc,CAAC,OAAO,CAAC,aAAa,CAAC,CAAC,CAAC;QACjE,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,OAAO,IAAI,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC;QACxD,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;QAC9C,IAAG,IAAI,CAAC,QAAQ,IAAI,SAAS,EAAE;YAC7B,IAAI,CAAC,SAAS,CAAC,SAAS,GAAG,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC;YACnD,IAAI,CAAC,SAAS,CAAC,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC;YACjD,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,QAAQ,CAAC,YAAY,EAAE,IAAI,CAAC,QAAQ,CAAC,cAAc,CAAC,CAAC;SAChF;QACD,IAAI,CAAC,UAAU,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC;IAC7C,CAAC;IAED,6CAAU,GAAV;QACE,IAAI,CAAC,QAAQ,GAAG,EAAE,CAAC;QACnB,IAAI,CAAC,QAAQ,CAAC,cAAc,CAAC,GAAG,IAAI,CAAC,YAAY,CAAC;QAClD,IAAI,CAAC,QAAQ,CAAC,gBAAgB,CAAC,GAAG,IAAI,CAAC,cAAc,CAAC;QACtD,IAAI,CAAC,QAAQ,CAAC,WAAW,CAAC,GAAG,IAAI,CAAC,SAAS,CAAC,SAAS,CAAC;QACtD,IAAI,CAAC,QAAQ,CAAC,UAAU,CAAC,GAAG,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC;QACpD,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,UAAU,CAAC,GAAG,IAAI,CAAC,QAAQ,CAAC;QAC9C,cAAc,CAAC,OAAO,CAAC,aAAa,EAAE,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC;IACtE,CAAC;IAED,6CAAU,GAAV,UAAW,CAAC;QACV,IAAI,CAAC,UAAU,EAAE,CAAC;IACpB,CAAC;IAED,uDAAoB,GAApB;QAAA,iBAIC;QAHC,IAAI,CAAC,aAAa,CAAC,gCAAgC,CAAC,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,UAAU,CAAC,CAAC,SAAS,CAAC,aAAG;YAC/F,KAAI,CAAC,UAAU,GAAG,GAAS,CAAC;QAC9B,CAAC,CAAC,CAAC;IACL,CAAC;IAED,8CAAW,GAAX,UAAY,MAAM;QAChB,IAAI,KAAK,GAAG,gDAAW,CAAC,IAAI,CAAC,UAAU,EAAE,UAAS,GAAG,IAAG,OAAO,GAAG,CAAC,QAAQ,CAAC,IAAI,MAAM,GAAC,CAAC,CAAC;QACzF,OAAO,KAAK,CAAC;IACf,CAAC;IAED,kDAAe,GAAf,UAAgB,OAAO,EAAE,OAAO;QAC9B,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,CAAC;QAC1B,IAAI,CAAC,iBAAiB,CAAC,OAAO,CAAC,MAAM,EAAE,QAAQ,CAAC,CAAC;QACjD,IAAI,CAAC,iBAAiB,CAAC,OAAO,CAAC,WAAW,EAAE,aAAa,CAAC,CAAC;QAC3D,IAAI,CAAC,iBAAiB,CAAC,OAAO,CAAC,OAAO,EAAE,SAAS,CAAC,CAAC;QACnD,IAAI,CAAC,iBAAiB,CAAC,OAAO,CAAC,UAAU,EAAE,YAAY,CAAC,CAAC;QACzD,IAAI,CAAC,iBAAiB,CAAC,OAAO,CAAC,YAAY,EAAE,cAAc,CAAC,CAAC;QAC7D,IAAI,CAAC,iBAAiB,CAAC,OAAO,CAAC,QAAQ,EAAE,UAAU,CAAC,CAAC;IACvD,CAAC;IAED,kDAAe,GAAf;QACE,IAAI,CAAC,SAAS,CAAC,SAAS,GAAG,CAAC,CAAC;QAC7B,IAAI,CAAC,SAAS,CAAC,QAAQ,GAAG,EAAE,CAAC;QAC7B,IAAI,CAAC,UAAU,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC;QAC3C,IAAI,CAAC,YAAY,GAAG,EAAE,CAAC;QACvB,IAAI,CAAC,cAAc,GAAG;YACpB,MAAM,EAAE,EAAE,EAAE,WAAW,EAAE,EAAE,EAAE,OAAO,EAAE,EAAE;YACxC,UAAU,EAAE,EAAE,EAAE,YAAY,EAAE,EAAE,EAAE,QAAQ,EAAE,EAAE;SAC/C,CAAC;QACF,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,YAAY,EAAE,IAAI,CAAC,cAAc,CAAC,CAAC;QAC7D,IAAI,CAAC,UAAU,EAAE,CAAC;IACpB,CAAC;IAED,wDAAqB,GAArB;QAAA,iBA2BC;QA1BC,IAAM,iBAAiB,GAAG,UAAC,IAAS,EAAE,MAAc;YAClD,IAAI,WAAW,GAAG,CAAC,KAAI,CAAC,YAAY,CAAC;YACrC,IAAI,KAAI,CAAC,YAAY,EAAE;gBACrB,IAAI,aAAW,GAAG,IAAI,CAAC,MAAM,CAAC,QAAQ,EAAE,CAAC,IAAI,EAAE,CAAC,WAAW,EAAE,CAAC,OAAO,CAAC,KAAI,CAAC,YAAY,CAAC,QAAQ,EAAE,CAAC,WAAW,EAAE,CAAC,KAAK,CAAC,CAAC,CAAC;gBACzH,IAAI,kBAAgB,GAAG,IAAI,CAAC,WAAW,CAAC,QAAQ,EAAE,CAAC,IAAI,EAAE,CAAC,WAAW,EAAE,CAAC,OAAO,CAAC,KAAI,CAAC,YAAY,CAAC,QAAQ,EAAE,CAAC,WAAW,EAAE,CAAC,KAAK,CAAC,CAAC,CAAC;gBACnI,IAAI,cAAY,GAAG,IAAI,CAAC,OAAO,CAAC,QAAQ,EAAE,CAAC,IAAI,EAAE,CAAC,WAAW,EAAE,CAAC,OAAO,CAAC,KAAI,CAAC,YAAY,CAAC,QAAQ,EAAE,CAAC,WAAW,EAAE,CAAC,KAAK,CAAC,CAAC,CAAC;gBAC3H,IAAI,iBAAe,GAAG,IAAI,CAAC,UAAU,CAAC,QAAQ,EAAE,CAAC,IAAI,EAAE,CAAC,WAAW,EAAE,CAAC,OAAO,CAAC,KAAI,CAAC,YAAY,CAAC,QAAQ,EAAE,CAAC,WAAW,EAAE,CAAC,KAAK,CAAC,CAAC,CAAC;gBACjI,IAAI,mBAAiB,GAAG,IAAI,CAAC,YAAY,CAAC,QAAQ,EAAE,CAAC,IAAI,EAAE,CAAC,WAAW,EAAE,CAAC,OAAO,CAAC,KAAI,CAAC,YAAY,CAAC,QAAQ,EAAE,CAAC,WAAW,EAAE,CAAC,KAAK,CAAC,CAAC,CAAC;gBACrI,IAAI,eAAa,GAAG,IAAI,CAAC,QAAQ,CAAC,QAAQ,EAAE,CAAC,IAAI,EAAE,CAAC,WAAW,EAAE,CAAC,OAAO,CAAC,KAAI,CAAC,YAAY,CAAC,QAAQ,EAAE,CAAC,WAAW,EAAE,CAAC,KAAK,CAAC,CAAC,CAAC;gBAC7H,WAAW,GAAG,aAAW,IAAI,kBAAgB,IAAI,cAAY,IAAI,iBAAe,IAAI,mBAAiB,IAAI,eAAa,CAAC;aACxH;YAED,IAAI,CAAC,WAAW,EAAE;gBAChB,OAAO;aACR;YAED,IAAI,YAAY,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC;YACtC,IAAI,WAAW,GAAG,IAAI,CAAC,MAAM,CAAC,QAAQ,EAAE,CAAC,IAAI,EAAE,CAAC,WAAW,EAAE,CAAC,OAAO,CAAC,YAAY,CAAC,MAAM,CAAC,QAAQ,EAAE,CAAC,WAAW,EAAE,CAAC,KAAK,CAAC,CAAC,CAAC;YAC3H,IAAI,gBAAgB,GAAG,IAAI,CAAC,WAAW,CAAC,QAAQ,EAAE,CAAC,IAAI,EAAE,CAAC,WAAW,EAAE,CAAC,OAAO,CAAC,YAAY,CAAC,WAAW,CAAC,QAAQ,EAAE,CAAC,WAAW,EAAE,CAAC,KAAK,CAAC,CAAC,CAAC;YAC1I,IAAI,YAAY,GAAG,IAAI,CAAC,OAAO,CAAC,QAAQ,EAAE,CAAC,IAAI,EAAE,CAAC,WAAW,EAAE,CAAC,OAAO,CAAC,YAAY,CAAC,OAAO,CAAC,QAAQ,EAAE,CAAC,WAAW,EAAE,CAAC,KAAK,CAAC,CAAC,CAAC;YAC9H,IAAI,eAAe,GAAG,IAAI,CAAC,UAAU,CAAC,QAAQ,EAAE,CAAC,IAAI,EAAE,CAAC,WAAW,EAAE,CAAC,OAAO,CAAC,YAAY,CAAC,UAAU,CAAC,QAAQ,EAAE,CAAC,WAAW,EAAE,CAAC,KAAK,CAAC,CAAC,CAAC;YACvI,IAAI,iBAAiB,GAAG,IAAI,CAAC,YAAY,CAAC,QAAQ,EAAE,CAAC,IAAI,EAAE,CAAC,WAAW,EAAE,CAAC,OAAO,CAAC,YAAY,CAAC,YAAY,CAAC,QAAQ,EAAE,CAAC,WAAW,EAAE,CAAC,KAAK,CAAC,CAAC,CAAC;YAC7I,IAAI,aAAa,GAAG,IAAI,CAAC,QAAQ,CAAC,QAAQ,EAAE,CAAC,IAAI,EAAE,CAAC,WAAW,EAAE,CAAC,OAAO,CAAC,YAAY,CAAC,QAAQ,CAAC,QAAQ,EAAE,CAAC,WAAW,EAAE,CAAC,KAAK,CAAC,CAAC,CAAC;YACjI,OAAO,WAAW,IAAI,gBAAgB,IAAI,YAAY,IAAI,eAAe,IAAI,iBAAiB,IAAI,aAAa,CAAC;QAClH,CAAC;QACD,OAAO,iBAAiB,CAAC;IAC3B,CAAC;IAED,oDAAiB,GAAjB,UAAkB,WAAmB,EAAE,GAAW;QAChD,IAAI,CAAC,cAAc,CAAC,GAAG,CAAC,GAAG,WAAW,CAAC;QACvC,IAAI,CAAC,UAAU,CAAC,MAAM,GAAG,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC;QAC7D,IAAI,CAAC,UAAU,EAAE,CAAC;IACpB,CAAC;IAED,8CAAW,GAAX,UAAY,MAAM;QAChB,IAAI,CAAC,YAAY,GAAG,MAAM,CAAC;QAC3B,IAAI,CAAC,UAAU,CAAC,MAAM,GAAG,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC;QAC7D,IAAI,CAAC,UAAU,EAAE,CAAC;IACpB,CAAC;IAED,2CAAQ,GAAR,UAAS,IAAI;QAAb,iBA0CC;QAxCC,IAAI,KAAK,GAAG,IAAI,CAAC,UAAU,CAAC,YAAY,CAAC;QACzC,IAAI,aAAa,GAAG,EAAE,CAAC;QACvB,IAAG,KAAK,CAAC,MAAM,GAAG,CAAC,EAAC;YAClB,KAAI,IAAI,CAAC,GAAC,CAAC,EAAE,CAAC,GAAC,KAAK,CAAC,MAAM,EAAE,CAAC,EAAE,EAAC;gBAC/B,IAAI,IAAI,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC;gBACpB,IAAG,CAAC,IAAE,CAAC,EAAC;oBACN,IAAI,CAAC,UAAU,CAAC,GAAG,KAAK,CAAC,KAAK,CAAC,MAAM,GAAC,CAAC,CAAC,CAAC;oBACzC,IAAI,CAAC,UAAU,CAAC,GAAG,KAAK,CAAC,CAAC,GAAC,CAAC,CAAC,CAAC;iBAC/B;qBAAM,IAAI,CAAC,IAAI,KAAK,CAAC,MAAM,GAAC,CAAC,EAAE;oBAC9B,IAAI,CAAC,UAAU,CAAC,GAAG,KAAK,CAAC,CAAC,GAAC,CAAC,CAAC,CAAC;oBAC9B,IAAI,CAAC,UAAU,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC;iBAC7B;qBAAM;oBACL,IAAI,CAAC,UAAU,CAAC,GAAG,KAAK,CAAC,CAAC,GAAC,CAAC,CAAC,CAAC;oBAC9B,IAAI,CAAC,UAAU,CAAC,GAAG,KAAK,CAAC,CAAC,GAAC,CAAC,CAAC,CAAC;iBAC/B;gBACD,IAAI,CAAC,OAAO,CAAC,GAAE,CAAC,GAAC,CAAC,CAAC;gBACnB,aAAa,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;aAC1B;SACF;QAED,yHAAyH;QACzH,8CAA8C;QAC9C,oDAAoD;QACpD,aAAa;QACT,IAAM,SAAS,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,gBAAgB,EAAE;YACnD,IAAI,EAAE,EAAE,UAAU,EAAE,IAAI,CAAC,UAAU,EAAE,IAAI,EAAE,IAAI,EAAE,KAAK,EAAE,CAAC,EAAE,QAAQ,EAAE,EAAE;gBACrE,MAAM,EAAE,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,gBAAgB,EAAE,IAAI,CAAC,QAAQ;gBACxD,SAAS,EAAE,IAAI,CAAC,SAAS,EAAE,YAAY,EAAE,IAAI,CAAC,YAAY;gBAC1D,cAAc,EAAE,IAAI,CAAC,cAAc,EAAG,aAAa,EAAE,aAAa,EAAE;SACvE,CAAC,CAAC;QAEH,SAAS,CAAC,WAAW,EAAE,CAAC,SAAS,CAAC,aAAG;YACnC,IAAI,GAAG,IAAI,SAAS,IAAI,GAAG,CAAC,KAAK,EAAE;gBACjC,+BAA+B;gBAC/B,KAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;gBACxC,KAAI,CAAC,qBAAqB,CAAC,IAAI,CAAC,GAAG,CAAC,cAAc,CAAC,CAAC;aACrD;QACH,CAAC,CAAC,CAAC;QACP,MAAM;QACN,KAAK;IACP,CAAC;IAvLoB;QAApB,2DAAK,CAAC,YAAY,CAAC;;gEAAoB;IACrB;QAAlB,2DAAK,CAAC,UAAU,CAAC;;8DAAkB;IACb;QAAtB,2DAAK,CAAC,cAAc,CAAC;;kEAAsB;IACnB;QAAxB,2DAAK,CAAC,gBAAgB,CAAC;;oEAAwB;IAC5B;QAAnB,2DAAK,CAAC,WAAW,CAAC;;+DAAmB;IAE5B;QAAT,4DAAM,EAAE;;wEAAyC;IACxC;QAAT,4DAAM,EAAE;;2EAA4C;IAI/B;QAArB,2DAAK,CAAC,aAAa,CAAC;;iEAAkB;IAed;QAAxB,+DAAS,CAAC,8DAAY,CAAC;wEAAY,8DAAY;+DAAC;IAC7B;QAAnB,+DAAS,CAAC,yDAAO,CAAC;wEAAO,yDAAO;0DAAC;IA7BvB,wBAAwB;QALpC,+DAAS,CAAC;YACT,QAAQ,EAAE,uBAAuB;YACjC,qJAAiD;;SAElD,CAAC;+EAgCiC,4DAAW,EAAyB,2FAAoB,EAAiB,2DAAS,EAAoB,0GAAoB;OA/BhJ,wBAAwB,CA2LpC;IAAD,+BAAC;CAAA;AA3LoC;AAiMrC;IAEE,gCACS,SAA+C,EACtB,IAAS;QADlC,cAAS,GAAT,SAAS,CAAsC;QACtB,SAAI,GAAJ,IAAI,CAAK;IAAG,CAAC;IAE/C,0CAAS,GAAT;QACE,IAAI,CAAC,SAAS,CAAC,KAAK,EAAE,CAAC;IACzB,CAAC;IARU,sBAAsB;QAJlC,+DAAS,CAAC;YACT,QAAQ,EAAE,4BAA4B;YACtC,iJAA6C;SAC9C,CAAC;QAKG,6GAAM,CAAC,iEAAe,CAAC;+EADN,8DAAY;OAHrB,sBAAsB,CAUlC;IAAD,6BAAC;CAAA;AAVkC;AAiBnC;IAmBE,0BACS,SAAyC,EAChB,IAAS,EAAU,aAAmC,EAAU,QAA8B,EACtH,WAAwB;QAFzB,cAAS,GAAT,SAAS,CAAgC;QAChB,SAAI,GAAJ,IAAI,CAAK;QAAU,kBAAa,GAAb,aAAa,CAAsB;QAAU,aAAQ,GAAR,QAAQ,CAAsB;QACtH,gBAAW,GAAX,WAAW,CAAa;QAlBlC,UAAK,GAAW,CAAC,CAAC;QAClB,aAAQ,GAAW,EAAE,CAAC;QAkBlB,SAAS,CAAC,YAAY,GAAG,IAAI,CAAC;IAChC,CAAC;IAEH,mCAAQ,GAAR;QACE,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC;QAClC,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC,IAAI,CAAC,gBAAgB,CAAC;QACnD,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QAC1C,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC;QACvC,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC;QACrC,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC;QAC3C,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,IAAI,CAAC,cAAc,CAAC;QAC/C,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC;QAC5C,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,IAAI,CAAC,aAAa,CAAC;QAC7C,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC;IACrC,CAAC;IAED,oCAAS,GAAT;QACE,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,EAAC,OAAO,EAAC,IAAI,CAAC,YAAY,EAAE,gBAAgB,EAAE,IAAI,CAAC,cAAc,EAAC,CAAC,CAAC;IAC3F,CAAC;IAED,mCAAQ,GAAR,UAAS,MAAM;QAAf,iBAmBC;QAlBC,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,WAAC,IAAI,QAAC,CAAC,MAAM,IAAI,MAAM,EAAlB,CAAkB,CAAC,CAAC;QAC7D,IAAI,CAAC,KAAK,GAAG,CAAC,CAAC;QACf,IAAI,CAAC,QAAQ,GAAG,EAAE,CAAC;QACnB,IAAI,CAAC,WAAW,GAAG,EAAE,CAAC;QACtB,IAAI,CAAC,YAAY,GAAG,KAAK,CAAC;QAC1B,IAAI,CAAC,gBAAgB,GAAG,CAAC,CAAC;QAC1B,IAAI,CAAC,aAAa,CAAC,UAAU,CAAC,IAAI,CAAC,gBAAgB,EAAE,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,UAAU,EAAE,MAAM,CAAC,CAAC,SAAS,CAAC,aAAG;YACtG,IAAG,GAAG,IAAI,IAAI,IAAI,GAAG,CAAC,YAAY,CAAC,GAAG,CAAC,EAAC;gBACtC,KAAI,CAAC,KAAK,GAAG,GAAG,CAAC,YAAY,CAAC,CAAC;gBAC/B,KAAI,CAAC,QAAQ,GAAG,GAAG,CAAC,UAAU,CAAC,CAAC;gBAChC,KAAI,CAAC,gBAAgB,GAAG,GAAG,CAAC,YAAY,CAAC,CAAC;gBAC1C,KAAI,CAAC,YAAY,GAAG,IAAI,CAAC;gBACzB,IAAG,GAAG,CAAC,QAAQ,CAAC,IAAI,GAAG,EAAC;oBACtB,KAAI,CAAC,WAAW,GAAG,iCAAiC,CAAC;iBACtD;gBACD,KAAI,CAAC,aAAa,GAAG,GAAG,CAAC,QAAQ,CAAC,CAAC;aACpC;QACH,CAAC,CAAC,CAAC;IACL,CAAC;IAED,mCAAQ,GAAR;QAAA,iBAyBC;QAxBC,IAAI,OAAO,GAAG,IAAI,MAAM,CAAC;QACzB,OAAO,CAAC,UAAU,CAAC,GAAG,IAAI,CAAC,gBAAgB,CAAC;QAC5C,OAAO,CAAC,QAAQ,CAAC,GAAG,IAAI,CAAC,aAAa,CAAC;QACvC,OAAO,CAAC,YAAY,CAAC,GAAG,IAAI,CAAC,UAAU,CAAC;QACxC,OAAO,CAAC,QAAQ,CAAC,GAAG,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC;QACrC,OAAO,CAAC,YAAY,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC;QACnC,OAAO,CAAC,UAAU,CAAC,GAAG,IAAI,CAAC,QAAQ,CAAC;QAEpC,IAAI,QAAQ,GAAU,KAAK,CAAC;QAC5B,IAAG,QAAQ,KAAK,IAAI,CAAC,IAAI,CAAC,oBAAoB,CAAC,CAAC,UAAU,CAAC,EAAE;YAC3D,QAAQ,GAAG,IAAI,CAAC;SACjB;QACD,IAAI,CAAC,aAAa,CAAC,WAAW,CAAC,OAAO,EAAE,IAAI,CAAC,MAAM,EAAE,QAAQ,CAAC,CAAC,SAAS,CAAC,aAAG;YAC1E,IAAI,GAAG,EAAE;gBACP,KAAI,CAAC,YAAY,GAAG,KAAI,CAAC,YAAY,GAAG,CAAC,KAAI,CAAC,KAAK,GAAC,KAAI,CAAC,gBAAgB,CAAC,CAAC;gBAC3E,IAAG,QAAQ,EAAE;oBACX,KAAI,CAAC,cAAc,GAAG,KAAI,CAAC,cAAc,GAAG,CAAC,KAAI,CAAC,KAAK,GAAG,KAAI,CAAC,gBAAgB,CAAC,CAAC;iBAClF;gBACD,KAAI,CAAC,gBAAgB,GAAG,KAAI,CAAC,KAAK,CAAC;gBACnC,KAAI,CAAC,QAAQ,CAAC,YAAY,CAAC,0BAA0B,EAAE,OAAO,EAAE,gBAAgB,CAAC,CAAC;aACnF;iBAAM;gBACL,KAAI,CAAC,QAAQ,CAAC,YAAY,CAAC,0BAA0B,EAAE,OAAO,EAAE,cAAc,CAAC,CAAC;aACjF;QACH,CAAC,CAAC,CAAC;IACL,CAAC;IAED,gCAAK,GAAL;QAAA,iBAkBC;QAjBC,IAAI,QAAQ,GAAU,KAAK,CAAC;QAC5B,IAAG,QAAQ,KAAK,IAAI,CAAC,IAAI,CAAC,oBAAoB,CAAC,CAAC,UAAU,CAAC,EAAE;YAC3D,QAAQ,GAAG,IAAI,CAAC;SACjB;QACD,IAAI,CAAC,aAAa,CAAC,WAAW,CAAC,IAAI,CAAC,gBAAgB,EAAE,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,UAAU,EAAE,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,QAAQ,EAAE,QAAQ,CAAC,CAAC,SAAS,CAAC,aAAG;YACtJ,IAAI,GAAG,EAAE;gBACP,KAAI,CAAC,YAAY,GAAG,KAAI,CAAC,YAAY,GAAG,KAAI,CAAC,KAAK,CAAC;gBACnD,IAAG,QAAQ,EAAC;oBACR,KAAI,CAAC,cAAc,GAAG,KAAI,CAAC,cAAc,GAAG,KAAI,CAAC,KAAK,CAAC;iBAC1D;gBACD,KAAI,CAAC,gBAAgB,GAAG,KAAI,CAAC,KAAK,CAAC;gBACnC,KAAI,CAAC,QAAQ,CAAC,YAAY,CAAC,0BAA0B,EAAE,OAAO,EAAE,gBAAgB,CAAC,CAAC;gBAClF,iEAAiE;aAClE;iBAAM;gBACL,KAAI,CAAC,QAAQ,CAAC,YAAY,CAAC,0BAA0B,EAAE,OAAO,EAAE,cAAc,CAAC,CAAC;aACjF;QACH,CAAC,CAAC,CAAC;IACL,CAAC;IA7GU,gBAAgB;QAL5B,+DAAS,CAAC;YACT,QAAQ,EAAE,qBAAqB;YAC/B,qIAAuC;;SAExC,CAAC;QAsBG,6GAAM,CAAC,iEAAe,CAAC;+EADN,8DAAY,UACoC,2FAAoB,EAAoB,0GAAoB;YACzG,4DAAW;OAtBvB,gBAAgB,CAgH5B;IAAD,uBAAC;CAAA;AAhH4B;;;;;;;;;;;;AC9N7B,yHAAyH,kCAAkC,KAAK,8BAA8B,iBAAiB,KAAK,yBAAyB,yBAAyB,KAAK,yBAAyB,mBAAmB,+BAA+B,MAAM,yBAAyB,uBAAuB,kBAAkB,MAAM,wBAAwB,6BAA6B,KAAK,uCAAuC,uIAAuI,KAAK,iDAAiD,sBAAsB,KAAK,0BAA0B,uBAAuB,mBAAmB,sBAAsB,KAAK,2BAA2B,sBAAsB,KAAK,sBAAsB,iBAAiB,uBAAuB,KAAK,8BAA8B,0BAA0B,mBAAmB,sBAAsB,KAAK,yBAAyB,sBAAsB,KAAK,+BAA+B,gBAAgB,KAAK,iEAAiE,0BAA0B,KAAK,kEAAkE,0BAA0B,KAAK,iCAAiC,6BAA6B,KAAK,iCAAiC,uBAAuB,oBAAoB,gCAAgC,KAAK,gCAAgC,8BAA8B,KAAK,kCAAkC,sBAAsB,8BAA8B,mBAAmB,2BAA2B,oBAAoB,oBAAoB,KAAK,iCAAiC,wBAAwB,sBAAsB,0BAA0B,KAAK,sCAAsC,oBAAoB,KAAK,kDAAkD,mBAAmB,KAAK,sBAAsB,sBAAsB,qBAAqB,KAAK,0BAA0B,8BAA8B,KAAK,kDAAkD,mBAAmB,KAAK,uCAAuC,8BAA8B,KAAK,mDAAmD,u0I;;;;;;;;;;;ACA7yE,4SAA4S,iEAAiE,eAAe,mIAAmI,8DAA8D,+CAA+C,qeAAqe,kCAAkC,2lCAA2lC,0mBAA0mB,iBAAiB,wBAAwB,4QAA4Q,oBAAoB,qRAAqR,wBAAwB,gSAAgS,eAAe,mTAAmT,sBAAsB,gaAAga,wBAAwB,8SAA8S,wBAAwB,4bAA4b,iCAAiC,guFAAguF,2BAA2B,qJAAqJ,8M;;;;;;;;;;;;;;;;;;;;;;;;ACAplQ;AACJ;AACqB;AAC5B;AAC4B;AACG;AACjC;AAK6C;AAe7F;IAkCE,6BAAoB,IAAgB,EAAU,MAAc,EAAU,aAAmC,EAC/F,WAAwB,EAAU,KAAqB,EAAU,QAA8B;QADrF,SAAI,GAAJ,IAAI,CAAY;QAAU,WAAM,GAAN,MAAM,CAAQ;QAAU,kBAAa,GAAb,aAAa,CAAsB;QAC/F,gBAAW,GAAX,WAAW,CAAa;QAAU,UAAK,GAAL,KAAK,CAAgB;QAAU,aAAQ,GAAR,QAAQ,CAAsB;QAjCzG,eAAU,GAAG,IAAI,oEAAkB,EAAU,CAAC;QAE9C,SAAI,GAAQ,IAAI,CAAC;QACjB,qBAAgB,GAAa,EAAE,CAAC;QAmBhC,cAAS,GAAW,CAAC,CAAC;QAEtB,aAAQ,GAAW,EAAE,CAAC;QACtB,kBAAa,GAAW,CAAC,CAAC;QAE1B,YAAO,GAAa,CAAC,KAAK,EAAE,KAAK,EAAE,OAAO,CAAC,CAAC;IAMiE,CAAC;IAE9G,sCAAQ,GAAR;QAAA,iBAWC;QAVC,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,SAAS,CAAC,gBAAM;YAChC,KAAI,CAAC,gBAAgB,GAAG,MAAM,CAAC,UAAU,CAAC,CAAC;YAC3C,KAAI,CAAC,UAAU,CAAC,KAAI,CAAC,gBAAgB,CAAC,CAAC;YACvC,KAAI,CAAC,eAAe,EAAE,CAAC;QACzB,CAAC,CAAC,CAAC;QACH,qDAAqD;QACrD,WAAW;QACX,qBAAqB;QACrB,wCAAwC;QACxC,OAAO;IACT,CAAC;IAED,6CAAe,GAAf;QAAA,iBAeC;QAdC,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC,OAAO,CAAC,iBAAiB,CAAC,CAAC,CAAC;QACvE,IAAI,IAAI,CAAC,WAAW,IAAI,IAAI,IAAI,IAAI,CAAC,WAAW,CAAC,MAAM,IAAI,CAAC,EAAE;YAC5D,OAAO,CAAC,IAAI,CAAC,sBAAsB,CAAC,CAAC;YACrC,IAAI,CAAC,aAAa,CAAC,eAAe,EAAE;iBACjC,SAAS,CAAC,aAAG;gBACZ,KAAI,CAAC,WAAW,GAAG,GAAS,CAAC;gBAC7B,0EAA0E;gBAC1E,YAAY,CAAC,OAAO,CAAC,iBAAiB,EAAE,IAAI,CAAC,SAAS,CAAC,GAAS,CAAC,CAAC,CAAC;YACrE,CAAC,CAAC,CAAC;YACL,OAAO,CAAC,IAAI,CAAC,qBAAqB,CAAC,CAAC;SACrC;QACD,SAAS;QACT,4EAA4E;QAC5E,IAAI;IACN,CAAC;IAED,mCAAmC;IACnC,6CAA6C;IAC7C,kFAAkF;IAClF,IAAI;IAEJ,qBAAqB;IACrB,mFAAmF;IACnF,+BAA+B;IAC/B,qBAAqB;IACrB,sBAAsB;IACtB,wBAAwB;IACxB,uCAAuC;IACvC,qEAAqE;IACrE,QAAQ;IACR,IAAI;IAEJ,qBAAqB;IACrB,2EAA2E;IAC3E,kCAAkC;IAClC,qBAAqB;IACrB,sBAAsB;IACtB,wBAAwB;IACxB,6CAA6C;IAC7C,qEAAqE;IACrE,QAAQ;IACR,IAAI;IAEJ,wBAAwB;IACxB,iFAAiF;IACjF,qCAAqC;IACrC,qBAAqB;IACrB,sBAAsB;IACtB,wBAAwB;IACxB,kDAAkD;IAClD,qEAAqE;IACrE,QAAQ;IACR,IAAI;IAEJ,2BAA2B;IAC3B,qFAAqF;IACrF,qBAAqB;IACrB,sBAAsB;IACtB,sFAAsF;IACtF,IAAI;IAEJ,2BAA2B;IAC3B,kDAAkD;IAClD,IAAI;IAEJ,qCAAO,GAAP;QAAA,iBAQC;QAPC,IAAI,GAAG,GAAG,IAAI,CAAC,eAAe,CAAC,YAAY,CAAC,CAAC;QAC7C,IAAI,CAAC,aAAa,CAAC,WAAW,CAAC,IAAI,CAAC,gBAAgB,EAAE,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,GAAG,EAAE,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,SAAS,EAAE,IAAI,CAAC,QAAQ,EAAE,KAAK,CAAC;aAC3H,SAAS,CAAC,aAAG;YACZ,KAAI,CAAC,QAAQ,CAAC,YAAY,CAAC,0BAA0B,EAAE,OAAO,EAAE,gBAAgB,CAAC,CAAC;YAClF,KAAI,CAAC,eAAe,CAAC,cAAc,CAAC,GAAG,KAAI,CAAC,eAAe,CAAC,cAAc,CAAC,GAAG,KAAI,CAAC,SAAS,CAAC;YAC7F,mGAAmG;QACrG,CAAC,CAAC,CAAC;IACP,CAAC;IAED,gDAAkB,GAAlB,UAAmB,OAAO,EAAE,KAAK;QAC/B,OAAO,CAAC,cAAc,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;QAC5C,OAAO,CAAC,gBAAgB,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,OAAO,CAAC,GAAG,OAAO,CAAC,cAAc,CAAC,CAAC,CAAC;IACrF,CAAC;IAED,mDAAqB,GAArB,UAAsB,OAAO,EAAE,KAAK;QAClC,OAAO,CAAC,gBAAgB,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;QAC9C,OAAO,CAAC,yBAAyB,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,OAAO,CAAC,GAAG,OAAO,CAAC,gBAAgB,CAAC,CAAC,CAAC;IAChG,CAAC;IAED,8CAAgB,GAAhB;QACE,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC;IACzC,CAAC;IAED,uDAAyB,GAAzB,UAA0B,OAAO,EAAE,KAAK;QACtC,OAAO,CAAC,cAAc,CAAC,GAAG,OAAO,CAAC,cAAc,CAAC,GAAG,KAAK,CAAC;QAC1D,OAAO,CAAC,gBAAgB,CAAC,GAAG,OAAO,CAAC,OAAO,CAAC,GAAG,OAAO,CAAC,cAAc,CAAC,CAAC;IACzE,CAAC;IAED,8CAAgB,GAAhB;QACE,IAAI,CAAC,WAAW,GAAG,EAAE,CAAC;QACtB,IAAI,CAAC,OAAO,GAAG,EAAE,CAAC;QAClB,IAAI,CAAC,UAAU,GAAG,EAAE,CAAC;QACrB,IAAI,CAAC,YAAY,GAAG,EAAE,CAAC;QACvB,IAAI,CAAC,MAAM,GAAG,EAAE,CAAC;QACjB,IAAI,CAAC,SAAS,GAAG,CAAC,CAAC;QACnB,IAAI,CAAC,aAAa,GAAG,EAAE,CAAC;QACxB,IAAI,CAAC,QAAQ,GAAG,EAAE,CAAC;IACrB,CAAC;IAED,wCAAU,GAAV,UAAW,QAAQ;QAAnB,iBAgCC;QA/BC,OAAO,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC;QAC7B,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC;QAClC,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,IAAI,CAAC,wBAAwB,CAAC,CAAC,IAAI,CACxD,CAAC,UAAS,CAAC,EAAE,CAAC;YACd,IAAG,CAAC,CAAC,gBAAgB,CAAC,UAAU,GAAG,CAAC,CAAC,gBAAgB,CAAC,UAAU,EAAE;gBAAE,OAAO,CAAC,CAAC,CAAC;aAAE;YAChF,IAAG,CAAC,CAAC,gBAAgB,CAAC,UAAU,GAAG,CAAC,CAAC,gBAAgB,CAAC,UAAU,EAAE;gBAAE,OAAO,CAAC,CAAC;aAAE;YAC/E,OAAO,CAAC,CAAC;QACX,CAAC,CAAC,CAAC,CAAC;QAEJ,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,WAAC,IAAI,QAAC,CAAC,UAAU,CAAC,IAAI,QAAQ,EAAzB,CAAyB,CAAC,CAAC;QAC9E,IAAI,IAAI,CAAC,IAAI,IAAI,IAAI,EAAE;YACrB,kBAAkB;YAClB,IAAI,CAAC,aAAa,CAAC,oBAAoB,CAAC,IAAI,CAAC,gBAAgB,EAAE,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,SAAS,CAAC,aAAG;gBAC3F,2BAA2B;gBAC3B,KAAI,CAAC,aAAa,GAAG,GAAe,CAAC;gBACrC,8BAA8B;gBAC9B,wBAAwB;gBACxB,qDAAqD;gBACrD,iDAAiD;gBACjD,QAAQ;gBACR,wCAAwC;gBACxC,MAAM;gBAEN,KAAI,CAAC,aAAa,CAAC,OAAO,CAAC,iBAAO;oBAChC,OAAO,CAAC,cAAc,GAAG,OAAO,CAAC,KAAK,GAAG,OAAO,CAAC,YAAY,CAAC;oBAC9D,OAAO,CAAC,uBAAuB,GAAG,OAAO,CAAC,KAAK,GAAG,OAAO,CAAC,cAAc,CAAC;gBAC3E,CAAC,CAAC,CAAC;gBACH,KAAI,CAAC,aAAa,CAAC,KAAI,CAAC,gBAAgB,EAAE,KAAI,CAAC,aAAa,CAAC,CAAC;YAChE,CAAC,CAAC,CAAC;SACJ;QACD,OAAO,CAAC,IAAI,CAAC,qBAAqB,CAAC,CAAC;IACtC,CAAC;IAED,0CAAY,GAAZ,UAAa,QAAgB;QAC3B,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,cAAc,EAAE,QAAQ,CAAC,CAAC,CAAC;IACnD,CAAC;IAED,2CAAa,GAAb,UAAc,QAAQ,EAAE,qBAAqB;QAC3C,IAAI,CAAC,UAAU,CAAC,IAAI,GAAG,EAAE,CAAC;QAC1B,IAAG,QAAQ,KAAK,IAAI,CAAC,IAAI,CAAC,oBAAoB,CAAC,CAAC,UAAU,CAAC,EAAE;YAC3D,IAAI,CAAC,gBAAgB,GAAG,CAAC,WAAW,EAAE,gBAAgB,EAAE,YAAY,EAAE,gBAAgB,EAAE,OAAO,EAAE,YAAY,EAAE,gBAAgB,EAAE,gBAAgB,EAAE,yBAAyB,CAAC,CAAC;SAC/K;aAAM;YACL,IAAI,CAAC,gBAAgB,GAAG,CAAC,WAAW,EAAE,YAAY,EAAE,gBAAgB,EAAE,OAAO,EAAE,YAAY,EAAE,gBAAgB,EAAE,gBAAgB,EAAE,yBAAyB,CAAC,CAAC;SAC7J;QACD,IAAI,CAAC,UAAU,CAAC,IAAI,GAAG,qBAAiC,CAAC;QACzD,IAAI,CAAC,UAAU,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;QACjC,IAAI,CAAC,SAAS,CAAC,QAAQ,GAAG,EAAE,CAAC;QAC7B,IAAI,CAAC,UAAU,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC;IAC7C,CAAC;IAED,yCAAW,GAAX;QACE,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC;IAClC,CAAC;IAED,wCAAU,GAAV,UAAW,GAAG;QACZ,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,cAAc,EAAE,IAAI,CAAC,gBAAgB,EAAE,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC;IACpF,CAAC;IAED,uCAAS,GAAT,UAAU,OAAO;QACf,IAAI,CAAC,gBAAgB,EAAE,CAAC;QACxB,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,eAAe,KAAK,OAAO,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,OAAO,CAAC;IAC3E,CAAC;IAlNwB;QAAxB,+DAAS,CAAC,8DAAY,CAAC;wEAAY,8DAAY;0DAAC;IAC7B;QAAnB,+DAAS,CAAC,yDAAO,CAAC;wEAAO,yDAAO;qDAAC;IATvB,mBAAmB;QAZ/B,+DAAS,CAAC;YACT,QAAQ,EAAE,iBAAiB;YAC3B,mIAA2C;YAE3C,UAAU,EAAE;gBACV,mEAAO,CAAC,cAAc,EAAE;oBACtB,iEAAK,CAAC,WAAW,EAAE,iEAAK,CAAC,EAAE,MAAM,EAAE,KAAK,EAAE,SAAS,EAAE,GAAG,EAAE,UAAU,EAAE,QAAQ,EAAE,CAAC,CAAC;oBAClF,iEAAK,CAAC,UAAU,EAAE,iEAAK,CAAC,EAAE,MAAM,EAAE,GAAG,EAAE,CAAC,CAAC;oBACzC,sEAAU,CAAC,wBAAwB,EAAE,mEAAO,CAAC,sCAAsC,CAAC,CAAC;iBACtF,CAAC;aACH;;SACF,CAAC;+EAmC0B,+DAAU,EAAkB,sDAAM,EAAyB,2FAAoB;YAClF,4DAAW,EAAiB,8DAAc,EAAoB,0GAAoB;OAnC9F,mBAAmB,CA2N/B;IAAD,0BAAC;CAAA;AA3N+B;;;;;;;;;;;;AC1BhC,yHAAyH,kCAAkC,KAAK,8BAA8B,iBAAiB,KAAK,yBAAyB,mBAAmB,+BAA+B,MAAM,yBAAyB,uBAAuB,kBAAkB,MAAM,wBAAwB,6BAA6B,KAAK,uCAAuC,uIAAuI,KAAK,iDAAiD,sBAAsB,KAAK,0BAA0B,uBAAuB,mBAAmB,sBAAsB,KAAK,2BAA2B,sBAAsB,KAAK,sBAAsB,iBAAiB,uBAAuB,KAAK,8BAA8B,0BAA0B,mBAAmB,sBAAsB,KAAK,yBAAyB,sBAAsB,KAAK,2BAA2B,wBAAwB,uBAAuB,uBAAuB,KAAK,mDAAmD,m1E;;;;;;;;;;;ACAjrC,8SAA8S,iEAAiE,eAAe,mIAAmI,8DAA8D,+CAA+C,woCAAwoC,wBAAwB,ymBAAymB,gBAAgB,iFAAiF,kBAAkB,uVAAuV,oBAAoB,iUAAiU,eAAe,sJAAsJ,uBAAuB,m9CAAm9C,gBAAgB,yQAAyQ,qBAAqB,qQAAqQ,iBAAiB,4QAA4Q,oBAAoB,gRAAgR,sBAAsB,mQAAmQ,kBAAkB,kWAAkW,wNAAwN,2BAA2B,8K;;;;;;;;;;;;;;;;;;;;;ACA5tN;AACiB;AACA;AAC9B;AACS;AASzD;IAqBE,mCAAqB,aAAmC,EAAU,WAAuB,EACjF,MAAc,EAAU,KAAqB;QADhC,kBAAa,GAAb,aAAa,CAAsB;QAAU,gBAAW,GAAX,WAAW,CAAY;QACjF,WAAM,GAAN,MAAM,CAAQ;QAAU,UAAK,GAAL,KAAK,CAAgB;QAhBrD,kBAAa,GAAa,IAAI,KAAK,EAAE,CAAC;QAEtC,eAAU,GAAG,IAAI,oEAAkB,EAAU,CAAC;QAI9C,qBAAgB,GAAG,CAAC,QAAQ,EAAE,aAAa,EAAE,SAAS;YACtD,YAAY,EAAE,cAAc,EAAE,UAAU,EAAE,YAAY,CAAC,CAAC;QAEvD,gBAAW,GAAQ,EAAE,CAAC;QACtB,SAAI,GAAQ,EAAE,CAAC;IAMyC,CAAC;IAE1D,4CAAQ,GAAR;QAAA,iBAMC;QALC,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,SAAS,CAAC,gBAAM;YAChC,KAAI,CAAC,gBAAgB,GAAG,MAAM,CAAC,UAAU,CAAC,CAAC;YAC3C,KAAI,CAAC,sBAAsB,GAAG,MAAM,CAAC,gBAAgB,CAAC,CAAC;YACvD,KAAI,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC;QAC1B,CAAC,CAAC,CAAC;IACL,CAAC;IAGD,0CAAM,GAAN,UAAO,GAAO;QACZ,IAAI,CAAC,WAAW,GAAO,IAAI,CAAC,WAAW,QAAC,CAAC;QACzC,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,EAAC,MAAM,EAAE,GAAG,CAAC,MAAM,EAAE,QAAQ,EAAE,GAAG,CAAC,QAAQ,EAAE,UAAU,EAAC,KAAK,EAAC,CAAC,CAAC;IACxF,CAAC;IAED,8CAAU,GAAV,UAAW,MAAM;QAAjB,iBAuBC;QAtBC,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC;QAClC,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QACjC,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,WAAC,IAAI,QAAC,CAAC,UAAU,CAAC,IAAI,MAAM,CAAC,UAAU,CAAC,EAAnC,CAAmC,CAAC,CAAC;QACxF,IAAG,YAAY,CAAC,OAAO,CAAC,iBAAiB,CAAC,IAAI,IAAI,IAAI,YAAY,CAAC,OAAO,CAAC,iBAAiB,CAAC,IAAI,SAAS,EAAC;YACzG,IAAI,CAAC,aAAa,CAAC,eAAe,EAAE;iBACnC,SAAS,CAAC,aAAG;gBACZ,KAAI,CAAC,WAAW,GAAG,GAAe,CAAC;gBACnC,KAAI,CAAC,aAAa,CAAC,GAAe,CAAC,CAAC;gBACpC,YAAY,CAAC,OAAO,CAAC,iBAAiB,EAAE,IAAI,CAAC,SAAS,CAAC,GAAe,CAAC,CAAC,CAAC;YAC3E,CAAC,CAAC,CAAC;SACJ;aAAM;YACL,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC,OAAO,CAAC,iBAAiB,CAAC,CAAa,CAAC,CAAC;SACrF;QAED,IAAI,CAAC,cAAc,GAAG;YACtB,EAAC,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,kBAAkB,EAAC;YACzC,EAAC,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,kBAAkB,EAAC;YACzC,EAAC,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,kBAAkB,EAAC;YACzC,EAAC,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,kBAAkB,EAAC;YACzC,EAAC,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,kBAAkB,EAAC;YACzC,EAAC,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,kBAAkB,EAAC;SAC1C,CAAC;IACF,CAAC;IAED,oDAAgB,GAAhB,UAAiB,IAAY;QAC3B,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,wBAAwB,CAAC,CAAC;IACnD,CAAC;IAED,iDAAa,GAAb,UAAc,GAAY;QACxB,IAAI,CAAC,UAAU,CAAC,IAAI,GAAG,GAAG,CAAC;QAC3B,IAAI,CAAC,UAAU,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;QACjC,IAAI,CAAC,UAAU,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC;IAC7C,CAAC;IAED,+CAAW,GAAX;QACE,IAAI,CAAC,aAAa,CAAC,MAAM,CAAC,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;QACvD,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC;IAClC,CAAC;IAED,qDAAiB,GAAjB;QACE,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,cAAc,EAAE,IAAI,CAAC,gBAAgB,CAAC,CAAC,CAAC;IAChE,CAAC;IAED,+CAAW,GAAX,UAAY,GAAO;QACjB,IAAI,CAAC,YAAY,GAAG,GAAG,CAAC;QACxB,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;QAC7B,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;IACnB,CAAC;IAED,iDAAa,GAAb,UAAc,WAAgB;QAC5B,KAAK,CAAC,aAAa,GAAG,WAAW,CAAC,MAAM,CAAC,CAAC;IAC5C,CAAC;IAEH,iDAAa,GAAb,UAAc,WAAgB;QAC1B,KAAK,CAAC,aAAa,CAAC,CAAC;IACzB,CAAC;IAED,mDAAe,GAAf,UAAgB,WAAgB,EAAE,KAAa;QAC3C,KAAK,CAAC,eAAe,CAAC,CAAC;IAC3B,CAAC;IAzF0B;QAAxB,+DAAS,CAAC,8DAAY,CAAC;wEAAY,8DAAY;gEAAC;IAC7B;QAAnB,+DAAS,CAAC,yDAAO,CAAC;wEAAO,yDAAO;2DAAC;IAVvB,yBAAyB;QALrC,+DAAS,CAAC;YACT,QAAQ,EAAE,wBAAwB;YAClC,wJAAkD;;SAEnD,CAAC;+EAsBoC,2FAAoB,EAAsB,4DAAW;YACzE,sDAAM,EAAiB,8DAAc;OAtB1C,yBAAyB,CAoGrC;IAAD,gCAAC;CAAA;AApGqC;;;;;;;;;;;;ACbtC,8CAA8C,WAAW,yY;;;;;;;;;;;ACAzD,8BAA8B,uBAAuB,wBAAwB,mBAAmB,mBAAmB,KAAK,sBAAsB,yBAAyB,KAAK,sBAAsB,iBAAiB,mBAAmB,KAAK,sCAAsC,kBAAkB,KAAK,mDAAmD,uyB;;;;;;;;;;;ACA3V,m5CAAm5C,8BAA8B,QAAQ,8e;;;;;;;;;;;;;;;;;;;;;;;;;ACA/3C;AACjB;AACsC;AAC8B;AAC7D;AAC6C;AACoB;AAQjH;IAQE,4BAAoB,MAAc,EAAU,qBAA4C,EAC9E,WAAwB,EAAU,WAAwB,EAAU,MAAiB,EACrF,QAA8B;QAFpB,WAAM,GAAN,MAAM,CAAQ;QAAU,0BAAqB,GAArB,qBAAqB,CAAuB;QAC9E,gBAAW,GAAX,WAAW,CAAa;QAAU,gBAAW,GAAX,WAAW,CAAa;QAAU,WAAM,GAAN,MAAM,CAAW;QACrF,aAAQ,GAAR,QAAQ,CAAsB;QARxC,SAAI,GAAY,KAAK,CAAC;QAItB,WAAM,GAAW,IAAI,CAAC;IAIsB,CAAC;IAE7C,qCAAQ,GAAR;QACE,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC;YACtC,QAAQ,EAAE,IAAI,0DAAW,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;YAClD,QAAQ,EAAE,IAAI,0DAAW,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;SACnD,CAAC,CAAC;QACH,qBAAqB;QACrB,IAAI,CAAC,qBAAqB,CAAC,MAAM,EAAE,CAAC;IACtC,CAAC;IAGD,sBAAI,iCAAC;QADL,oDAAoD;aACpD,cAAU,OAAO,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,CAAC,CAAC;;;OAAA;IAE3C,kCAAK,GAAL;QACE,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC;IACpC,CAAC;IAED,qCAAQ,GAAR;QAAA,iBAmCC;QAlCC,IAAI,IAAI,CAAC,SAAS,CAAC,KAAK,EAAE;YACxB,IAAI,IAAI,GAAG,IAAI,CAAC;YAChB,IAAI,CAAC,qBAAqB,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,QAAQ,CAAC,KAAK,EAAE,IAAI,CAAC,CAAC,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,IAAI,CACjF,mBAAS;gBACP,IAAI,SAAS,EAAE;oBACb,IAAI,aAAa,GAAG,IAAI,CAAC,WAAW,CAAC,IAAI,IAAI,SAAS,CAAC,CAAC,CAAC,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,wBAAwB,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC;oBAChH,IAAI,aAAa,IAAI,IAAI,IAAI,aAAa,CAAC,MAAM,GAAG,CAAC,EAAE;wBACrD,aAAa,GAAG,aAAa,CAAC,IAAI,CAChC,CAAC,UAAS,CAAC,EAAE,CAAC;4BACd,IAAG,CAAC,CAAC,gBAAgB,CAAC,UAAU,GAAG,CAAC,CAAC,gBAAgB,CAAC,UAAU,EAAE;gCAAE,OAAO,CAAC,CAAC,CAAC;6BAAE;4BAChF,IAAG,CAAC,CAAC,gBAAgB,CAAC,UAAU,GAAG,CAAC,CAAC,gBAAgB,CAAC,UAAU,EAAE;gCAAE,OAAO,CAAC,CAAC;6BAAE;4BAC/E,OAAO,CAAC,CAAC;wBACX,CAAC,CAAC,CAAC,CAAC;wBACJ,IAAI,UAAU,GAAG,aAAa,CAAC,CAAC,CAAC,CAAC,kBAAkB,CAAC,CAAC;wBACtD,IAAG,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,sBAAsB,CAAC,CAAC,UAAU,CAAC,IAAI,SAAS,EAAE;4BACvE,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,SAAS,EAAE,UAAU,CAAC,YAAY,CAAC,EAAE,UAAU,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC;yBACvF;6BAAM,IAAI,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,sBAAsB,CAAC,CAAC,UAAU,CAAC,IAAI,SAAS,EAAE;4BAChF,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,cAAc,EAAE,UAAU,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC;yBACjE;6BAAM,IAAI,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,sBAAsB,CAAC,CAAC,UAAU,CAAC,IAAI,MAAM,EAAC;4BAC3E,KAAI,CAAC,cAAc,CAAC,UAAU,CAAC,CAAC;yBACnC;qBACF;yBAAM;wBACL,8HAA8H;wBAC9H,IAAI,CAAC,MAAM,GAAG,2CAA2C,CAAC;wBAC1D,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC;qBACjC;iBACF;qBAAM;oBACL,+EAA+E;oBAC/E,IAAI,CAAC,MAAM,GAAG,qBAAqB,CAAC;oBACpC,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC;iBACjC;YACH,CAAC,CACF,CAAC;SACH;IACH,CAAC;IAED,0CAAa,GAAb;QACE,IAAM,SAAS,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,oBAAoB,EAAE;YACvD,KAAK,EAAE,OAAO;YACd,IAAI,EAAE,EAAE,OAAO,EAAE,IAAI,EAAE;SACxB,CAAC,CAAC;QAEH,SAAS,CAAC,WAAW,EAAE,CAAC,SAAS,CAAC,gBAAM;QACxC,CAAC,CAAC,CAAC;IACL,CAAC;IAGD,2CAAc,GAAd,UAAe,UAAc;QAA7B,iBAkBC;QAjBC,MAAM,GAAG,GAAG,CAAC;QAEX,IAAM,SAAS,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,uBAAuB,EAAE;YAC1D,KAAK,EAAE,OAAO;YACd,IAAI,EAAE,EAAC,OAAO,EAAE,IAAI,EAAC;SACtB,CAAC,CAAC;QAEH,SAAS,CAAC,WAAW,EAAE,CAAC,SAAS,CAAC,gBAAM;YACtC,IAAI,MAAM,CAAC,OAAO,IAAI,SAAS,EAAC;gBAC9B,cAAc,CAAC,OAAO,CAAC,aAAa,EAAE,kBAAkB,CAAC,CAAC;gBAC1D,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,SAAS,EAAE,UAAU,CAAC,YAAY,CAAC,EAAE,UAAU,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC;aACrF;iBAAM;gBACL,cAAc,CAAC,OAAO,CAAC,aAAa,EAAE,kBAAkB,CAAC,CAAC;gBAC1D,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,cAAc,EAAE,UAAU,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC;aAChE;QACH,CAAC,CAAC,CAAC;IAEP,CAAC;IA9FU,kBAAkB;QAL9B,+DAAS,CAAC;YACT,QAAQ,EAAE,gBAAgB;YAC1B,wHAA0C;;SAE3C,CAAC;+EAS4B,sDAAM,EAAiC,sFAAqB;YACjE,0DAAW,EAAuB,4DAAW,EAAkB,2DAAS;YAC3E,0GAAoB;OAV7B,kBAAkB,CA+F9B;IAAD,yBAAC;CAAA;AA/F8B;AAsG/B;IAKE,8BACS,SAA6C,EAAU,qBAA4C,EAAU,QAA8B,EAClH,IAAS;QADlC,cAAS,GAAT,SAAS,CAAoC;QAAU,0BAAqB,GAArB,qBAAqB,CAAuB;QAAU,aAAQ,GAAR,QAAQ,CAAsB;QAClH,SAAI,GAAJ,IAAI,CAAK;IAAI,CAAC;IAEhD,uCAAQ,GAAR;QACE,IAAI,CAAC,SAAS,GAAG,IAAI,wDAAS,CAAC;YAC7B,QAAQ,EAAE,IAAI,0DAAW,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;YAClD,QAAQ,EAAE,IAAI,0DAAW,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;YAClD,WAAW,EAAE,IAAI,0DAAW,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;YACrD,eAAe,EAAE,IAAI,0DAAW,CAAC,EAAE,EAAE,yDAAU,CAAC,QAAQ,CAAC;SAC1D,CAAC,CAAC;IACL,CAAC;IAED,6CAAc,GAAd;QACE,IAAI,IAAI,GAAG,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,WAAW,CAAC,KAAK,CAAC;QACrD,IAAI,WAAW,GAAG,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,eAAe,CAAC,KAAK,CAAC;QAChE,IAAI,IAAI,KAAK,WAAW,EAAE;YACxB,OAAO,IAAI,CAAC;SACb;aAAM;YACL,OAAO,KAAK,CAAC;SACd;IACH,CAAC;IAED,4CAAa,GAAb;QAAA,iBAeC;QAdC,IAAI,IAAI,CAAC,cAAc,EAAE,IAAI,KAAK,EAAE;YAClC,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,iBAAiB,CAAC,CAAC,SAAS,CAAC,EAAE,WAAW,EAAE,IAAI,EAAE,CAAC,CAAC;SAC7E;aAAM;YACL,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,iBAAiB,CAAC,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC;YAC3D,IAAI,CAAC,qBAAqB,CAAC,aAAa,CAAC,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,UAAU,CAAC,CAAC,KAAK,EAAE,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,UAAU,CAAC,CAAC,KAAK,EAAE,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,aAAa,CAAC,CAAC,KAAK,CAAC;iBACzK,SAAS,CAAC,aAAG;gBACZ,IAAI,GAAG,IAAI,IAAI,EAAE;oBACf,KAAI,CAAC,QAAQ,CAAC,YAAY,CAAC,6BAA6B,EAAE,OAAO,EAAE,gBAAgB,CAAC,CAAC;oBACrF,KAAI,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC;iBACzB;qBAAM;oBACL,KAAI,CAAC,QAAQ,GAAG,0BAA0B;iBAC3C;YACH,CAAC,CAAC;SACL;IACH,CAAC;IAED,0CAAW,GAAX,UAAY,OAAO;QACjB,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,EAAE,SAAS,EAAE,OAAO,EAAE,CAAC,CAAC;IAC/C,CAAC;IA/CU,oBAAoB;QAJhC,+DAAS,CAAC;YACT,QAAQ,EAAE,uBAAuB;YACjC,0HAAyC;SAC1C,CAAC;QAQG,6GAAM,CAAC,iEAAe,CAAC;+EADN,8DAAY,EAAuD,sFAAqB,EAAoB,0GAAoB;OANzI,oBAAoB,CAgDhC;IAAD,2BAAC;CAAA;AAhDgC;AAsDjC;IAEE,iCACS,SAAgD,EACvB,IAAS;QADlC,cAAS,GAAT,SAAS,CAAuC;QACvB,SAAI,GAAJ,IAAI,CAAK;IAAG,CAAC;IAE/C,6CAAW,GAAX,UAAY,OAAO;QACjB,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,EAAC,SAAS,EAAE,OAAO,EAAC,CAAC,CAAC;IAC7C,CAAC;IARU,uBAAuB;QAJnC,+DAAS,CAAC;YACT,QAAQ,EAAE,4BAA4B;YACtC,oIAA8C;SAC/C,CAAC;QAKG,6GAAM,CAAC,iEAAe,CAAC;+EADN,8DAAY;OAHrB,uBAAuB,CAUnC;IAAD,8BAAC;CAAA;AAVmC;;;;;;;;;;;;AC1KpC,+GAA+G,6DAA6D,UAAU,uuEAAuuE,0d;;;;;;;;;;;;;;;;;;ACAp3E;AACc;AAEvD,IAAM,MAAM,GAAW,EAAE,CAAC;AAM1B;IAAA;IAAkC,CAAC;IAAtB,kBAAkB;QAJ9B,8DAAQ,CAAC;YACR,OAAO,EAAE,CAAC,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;YACxC,OAAO,EAAE,CAAC,4DAAY,CAAC;SACxB,CAAC;OACW,kBAAkB,CAAI;IAAD,yBAAC;CAAA;AAAJ;;;;;;;;;;;;;;;;;;;;;;;;ACTU;AACM;AAEa;AACW;AACN;AAMtC;AAEmD;AAqB9E;IAAA;IAA2B,CAAC;IAAf,WAAW;QAnBvB,8DAAQ,CAAC;YACR,YAAY,EAAE,CAAC,mFAAkB,CAAC;YAClC,OAAO,EAAE;gBACP,4DAAY;gBACZ,wEAAkB;gBAClB,iEAAe;gBACf,+DAAa;gBACb,iEAAe;gBACd,gEAAc;gBACd,gEAAc;gBACd,kEAAgB;gBAChB,+DAAa;gBACb,+DAAa;gBACb,0EAAwB;gBACxB,4FAAuB;gBACvB,0DAAW;gBACX,kEAAmB;aACrB;SACF,CAAC;OACW,WAAW,CAAI;IAAD,kBAAC;CAAA;AAAJ;;;;;;;;;;;;AClCxB,+DAA+D,2J;;;;;;;;;;;ACA/D,ykBAAykB,2BAA2B,sSAAsS,kBAAkB,yLAAyL,gCAAgC,6Q;;;;;;;;;;;;;;;;;;;;;;ACA3jC;AACO;AACqB;AACtC;AACgC;AACvC;AAQzC;IASI,2BAAoB,aAAmC,EAC5C,SAA0C,EACzC,WAAwB,EACA,IAAS,EACjC,MAAc,EAAU,QAA8B;QAJ9C,kBAAa,GAAb,aAAa,CAAsB;QAC5C,cAAS,GAAT,SAAS,CAAiC;QACzC,gBAAW,GAAX,WAAW,CAAa;QACA,SAAI,GAAJ,IAAI,CAAK;QACjC,WAAM,GAAN,MAAM,CAAQ;QAAU,aAAQ,GAAR,QAAQ,CAAsB;QAVlE,cAAS,GAAG,IAAI,oEAAkB,EAAU,CAAC;QAC7C,0BAAqB,GAAa,CAAE,MAAM,EAAE,UAAU,CAAC,CAAC;QAExD,iBAAY,GAAW,IAAI,CAAC;QAC5B,mBAAc,GAAW,IAAI,CAAC;IAO3B,CAAC;IAEJ,oCAAQ,GAAR;QACI,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC;QAClC,IAAI,CAAC,oBAAoB,GAAG,IAAI,CAAC,WAAW,CAAC,uBAAuB,CAAC,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;QAC3F,IAAI,CAAC,cAAc,EAAE,CAAC;IAC1B,CAAC;IAED,0CAAc,GAAd;QAAA,iBAUC;QATG,IAAI,KAAK,GAAG,IAAI,CAAC;QACjB,IAAI,CAAC,aAAa,CAAC,WAAW,CAAC,IAAI,CAAC,oBAAoB,CAAC,QAAQ,EAAE,IAAI,CAAC,IAAI,CAAC,MAAM,CAAE,CAAC,SAAS,CAC/F,cAAI;YACA,IAAI,EAAE,GAAG,IAAgB,CAAC;YAC1B,KAAK,CAAC,SAAS,CAAC,IAAI,GAAG,EAAE,CAAC,MAAM,CAAC,WAAC,IAAI,QAAC,CAAC,UAAU,CAAC,IAAI,IAAI,IAAI,CAAC,CAAC,UAAU,CAAC,IAAI,EAAE,EAA5C,CAA4C,CAAC,CAAC;QACxF,CAAC,EACD,aAAG;YACC,KAAI,CAAC,YAAY,GAAG,uDAAuD;QAC/E,CAAC,CAAC,CAAC;IACP,CAAC;IAED,mCAAO,GAAP;QACI,IAAI,CAAC,SAAS,CAAC,KAAK,EAAE,CAAC;IAC3B,CAAC;IApCQ,iBAAiB;QAL7B,+DAAS,CAAC;YACP,QAAQ,EAAE,cAAc;YACxB,oHAAwC;;SAE3C,CAAC;QAaO,6GAAM,CAAC,iEAAe,CAAC;+EAHO,4EAAoB;YACjC,8DAAY;YACT,4DAAW,UAEhB,sDAAM,EAAoB,2FAAoB;OAbzD,iBAAiB,CAqC7B;IAAD,wBAAC;CAAA;AArC6B;;;;;;;;;;;;ACb9B,6BAA6B,uBAAuB,KAAK,uBAAuB,6BAA6B,KAAK,+CAA+C,+a;;;;;;;;;;;ACAjK,ikBAAikB,2BAA2B,gPAAgP,oBAAoB,4OAA4O,mCAAmC,2TAA2T,mCAAmC,6OAA6O,kBAAkB,8NAA8N,iCAAiC,2JAA2J,gCAAgC,2BAA2B,wCAAwC,i2B;;;;;;;;;;;;;;;;;;;;;;ACAnmE;AACrC;AACqB;AACtC;AACP;AACuC;AAOhF;IAqBE,yBAAoB,aAAoC;IAC5C,oDAAoD;IAC5C,WAAuB;IACjC,6CAA6C;IACvC,MAAc,EAAU,QAA8B;QAJlD,kBAAa,GAAb,aAAa,CAAuB;QAEpC,gBAAW,GAAX,WAAW,CAAY;QAE3B,WAAM,GAAN,MAAM,CAAQ;QAAU,aAAQ,GAAR,QAAQ,CAAsB;QAvBtE,qBAAgB,GAAW,CAAC,CAAC,CAAC;QAI9B,WAAM,GAAG,IAAI,oEAAkB,EAAU,CAAC;QAC1C,0BAAqB,GAAa,CAAG,MAAM,EAAE,QAAQ,EAAE,cAAc,EAAE,UAAU,EAAE,OAAO,EAAE,YAAY,CAAC,CAAC;QAG1G,iBAAY,GAAW,IAAI,CAAC;QAC5B,mBAAc,GAAW,IAAI,CAAC;QAQpB,aAAQ,GAAG,IAAI,0DAAY,EAAE,CAAC;IAShC,CAAC;IAET,kCAAQ,GAAR;QACE,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC;QAClC,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC;QAC1C,IAAI,CAAC,oBAAoB,GAAG,IAAI,CAAC,WAAW,CAAC,uBAAuB,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;QACtF,IAAI,CAAC,WAAW,EAAE,CAAC;IACrB,CAAC;IAED,qCAAW,GAAX;QACE,IAAI,CAAC,oBAAoB,GAAG,IAAI,CAAC,WAAW,CAAC,uBAAuB,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;QACtF,IAAI,CAAC,WAAW,EAAE,CAAC;IACrB,CAAC;IAED,qCAAW,GAAX;QAAA,iBASC;QARC,IAAI,KAAK,GAAG,IAAI,CAAC;QACjB,IAAI,CAAC,aAAa,CAAC,WAAW,CAAC,IAAI,CAAC,oBAAoB,CAAC,QAAQ,EAAE,IAAI,CAAC,MAAM,CAAE,CAAC,SAAS,CAC1F,cAAI;YACF,KAAK,CAAC,MAAM,CAAC,IAAI,GAAG,IAAgB,CAAC;QACvC,CAAC,EACD,aAAG;YACD,KAAI,CAAC,YAAY,GAAG,uDAAuD;QAC7E,CAAC,CAAC,CAAC;IACL,CAAC;IAED,yCAAe,GAAf;QAAA,iBAeC;QAdC,IAAI,CAAC,aAAa,CAAC,gBAAgB,GAAG,IAAI,CAAC,gBAAgB,CAAC;QAC5D,IAAI,KAAK,GAAG,IAAI,CAAC;QACjB,IAAI,CAAC,aAAa,CAAC,WAAW,CAAC,IAAI,CAAC,oBAAoB,CAAC,QAAQ,EAAE,IAAI,CAAC,MAAM,EAAC,IAAI,CAAC,WAAW,CAAC,EAAE,EAAE,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC,SAAS,CACtI,cAAI;YACF,KAAK,CAAC,aAAa,GAAG,MAAM,CAAC,IAAI,CAAC,CAAC;YACnC,KAAI,CAAC,QAAQ,CAAC,YAAY,CAAE,4BAA4B,EAAE,OAAO,EAAE,gBAAgB,CAAC,CAAC;YACrF,KAAI,CAAC,WAAW,EAAE,CAAC;YACnB,KAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;YAC/B,mCAAmC;QACrC,CAAC,EACD,aAAG;YACC,KAAI,CAAC,QAAQ,CAAC,YAAY,CAAE,6BAA6B,EAAE,OAAO,EAAE,cAAc,CAAC,CAAC;YACpF,KAAI,CAAC,OAAO,EAAE,CAAC;QACnB,CAAC,CAAC,CAAC;IACL,CAAC;IAED,0CAAgB,GAAhB;QACE,IAAI,CAAC,OAAO,EAAE,CAAC;IACjB,CAAC;IAED,mCAAS,GAAT,UAAU,GAAG;QACX,IAAI,MAAM,GAAG,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC;QACjC,IAAI,CAAC,gBAAgB,GAAG,GAAG,CAAC,EAAE,CAAC;QAC/B,IAAI,CAAC,WAAW,GAAG,GAAG,CAAC;IACzB,CAAC;IAED,iCAAO,GAAP;QACE,0BAA0B;IAC5B,CAAC;IApEoB;QAApB,2DAAK,CAAC,YAAY,CAAC;;uDAAoB;IACvB;QAAhB,2DAAK,CAAC,QAAQ,CAAC;;mDAAgB;IACX;QAApB,2DAAK,CAAC,YAAY,CAAC;;uDAAoB;IACd;QAAzB,2DAAK,CAAC,iBAAiB,CAAC;;4DAA0B;IAEzC;QAAT,4DAAM,EAAE;;qDAA+B;IAnB7B,eAAe;QAL3B,+DAAS,CAAC;YACT,QAAQ,EAAE,YAAY;YACtB,8GAAsC;;SAEvC,CAAC;+EAsBoC,4EAAoB;YAExB,4DAAW;YAEnB,sDAAM,EAAoB,2FAAoB;OAzB3D,eAAe,CA4F3B;IAAD,sBAAC;CAAA;AA5F2B;;;;;;;;;;;;ACZ5B,+DAA+D,2K;;;;;;;;;;;ACA/D,4D;;;;;;;;;;;;;;;;;;ACAkD;AACJ;AAO9C;IAEE,8BAAoB,QAAqB;QAArB,aAAQ,GAAR,QAAQ,CAAa;IAAI,CAAC;IAE9C,uCAAQ,GAAR;IACA,CAAC;IAED,0GAA0G;IAC5G,2CAAY,GAAZ,UAAa,OAAe,EAAE,MAAc,EAAE,SAAiB;QAC3D,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,OAAO,EAAE,MAAM,EAAE;YACnC,QAAQ,EAAE,IAAI;YACd,gBAAgB,EAAE,QAAQ;YAC1B,kBAAkB,EAAE,OAAO;YAC3B,UAAU,EAAE,CAAC,SAAS,CAAC;SACvB,CAAC,CAAC;IACP,CAAC;IAfY,oBAAoB;QALhC,+DAAS,CAAC;YACT,QAAQ,EAAE,mBAAmB;YAC7B,mIAA6C;;SAE9C,CAAC;+EAG8B,6DAAW;OAF9B,oBAAoB,CAiBhC;IAAD,2BAAC;CAAA;AAjBgC;;;;;;;;;;;;ACRjC,yHAAyH,kCAAkC,KAAK,8BAA8B,iBAAiB,KAAK,yBAAyB,mBAAmB,+BAA+B,MAAM,yBAAyB,uBAAuB,kBAAkB,MAAM,wBAAwB,6BAA6B,KAAK,uCAAuC,uIAAuI,KAAK,iDAAiD,sBAAsB,KAAK,0BAA0B,uBAAuB,mBAAmB,sBAAsB,KAAK,2BAA2B,sBAAsB,KAAK,sBAAsB,iBAAiB,uBAAuB,KAAK,8BAA8B,0BAA0B,mBAAmB,sBAAsB,KAAK,yBAAyB,sBAAsB,KAAK,iCAAiC,yCAAyC,kCAAkC,KAAK,mDAAmD,2yE;;;;;;;;;;;ACA5rC,sTAAsT,qEAAqE,eAAe,uIAAuI,sEAAsE,gBAAgB,ojBAAojB,kCAAkC,y1BAAy1B,MAAM,yHAAyH,eAAe,OAAO,MAAM,8FAA8F,gBAAgB,OAAO,MAAM,wcAAwc,kCAAkC,o9CAAo9C,gBAAgB,0QAA0Q,qBAAqB,sQAAsQ,iBAAiB,gRAAgR,oBAAoB,2RAA2R,sBAAsB,oRAAoR,kBAAkB,iiBAAiiB,iBAAiB,itCAAitC,oBAAoB,8QAA8Q,2ZAA2Z,uBAAuB,qPAAqP,yCAAyC,iQAAiQ,uBAAuB,kfAAkf,mBAAmB,oTAAoT,0BAA0B,8OAA8O,uBAAuB,0WAA0W,4BAA4B,2WAA2W,wBAAwB,8WAA8W,2BAA2B,qXAAqX,6BAA6B,0WAA0W,yBAAyB,kWAAkW,wBAAwB,+VAA+V,2BAA2B,4WAA4W,2BAA2B,kXAAkX,iCAAiC,oXAAoX,8BAA8B,8TAA8T,2BAA2B,6XAA6X,2BAA2B,8M;;;;;;;;;;;;;;;;;;;;;;ACC5vc;AACT;AACW;AACrB;AACS;AAGK;AAQvE;IAoBE,gCAAoB,IAAgB,EAAU,MAAc,EAAU,aAAmC,EACjG,WAAuB,EAAU,KAAqB;QAD9D,iBAGC;QAHmB,SAAI,GAAJ,IAAI,CAAY;QAAU,WAAM,GAAN,MAAM,CAAQ;QAAU,kBAAa,GAAb,aAAa,CAAsB;QACjG,gBAAW,GAAX,WAAW,CAAY;QAAU,UAAK,GAAL,KAAK,CAAgB;QApB9D,eAAU,GAAG,IAAI,oEAAkB,EAAU,CAAC;QAG9C,cAAS,GAAY,SAAS,CAAC;QAC/B,qBAAgB,GAAa,EAAE,CAAC;QAChC,2BAAsB,GAAa,EAAE,CAAC;QACtC,iBAAY,GAAG,EAAE,CAAC;QAIlB,mBAAc,GAAG,EAAE,MAAM,EAAC,EAAE,EAAE,WAAW,EAAC,EAAE,EAAE,OAAO,EAAC,EAAE;YACtD,UAAU,EAAC,EAAE,EAAE,YAAY,EAAE,EAAE,EAAE,QAAQ,EAAG,EAAE,EAAE,UAAU,EAAE,EAAE;YAC9D,OAAO,EAAC,EAAE,EAAE,UAAU,EAAE,EAAE,EAAE,gBAAgB,EAAE,EAAE,EAAE,aAAa,EAAE,EAAE;YACnE,SAAS,EAAE,EAAE,qBAAoB;SAClC,CAAC;QAmCO,qBAAgB,GAAG,UAAC,MAAa;YACpC,KAAI,CAAC,aAAa,CAAC,OAAO,CAAC,KAAI,CAAC,gBAAgB,EAAE,MAAM,CAAC;iBACxD,SAAS,CAAC,aAAG;gBACZ,KAAI,CAAC,YAAY,GAAG,KAAI,CAAC,aAAa,CAAC,WAAW,CAAC,YAAY,CAAC;gBAChE,IAAG,KAAI,CAAC,aAAa,CAAC,WAAW,CAAC,YAAY,IAAI,SAAS,EAAC;oBAC1D,KAAI,CAAC,cAAc,GAAG,KAAI,CAAC,aAAa,CAAC,WAAW,CAAC,YAAY,CAAC;iBACnE;gBACD,KAAI,CAAC,UAAU,CAAC,IAAI,GAAG,GAAe,CAAC;gBACvC,KAAI,CAAC,UAAU,CAAC,IAAI,CAAC,OAAO,CAAC,WAAC;oBAC5B,CAAC,CAAC,YAAY,CAAC,GAAG,CAAC,CAAC,YAAY,CAAC,CAAC;gBACpC,CAAC,CAAC,CAAC;gBACH,KAAI,CAAC,eAAe,CAAC,KAAI,CAAC,YAAY,EAAE,KAAI,CAAC,cAAc,CAAC,CAAC;gBAC7D,KAAI,CAAC,SAAS,CAAC,SAAS,GAAG,KAAI,CAAC,aAAa,CAAC,WAAW,CAAC,SAAS,CAAC;gBACpE,KAAI,CAAC,SAAS,CAAC,QAAQ,GAAG,KAAI,CAAC,aAAa,CAAC,WAAW,CAAC,QAAQ,CAAC;gBAClE,KAAI,CAAC,UAAU,CAAC,SAAS,GAAG,KAAI,CAAC,SAAS,CAAC;gBAC3C,KAAI,CAAC,UAAU,CAAC,IAAI,GAAG,KAAI,CAAC,IAAI,CAAC;YACnC,CAAC,CAAC,CAAC;QACP,CAAC;IA5CH,CAAC;IAED,yCAAQ,GAAR;QAAA,iBAOC;QANC,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,SAAS,CAAC,gBAAM;YAChC,KAAI,CAAC,gBAAgB,GAAG,MAAM,CAAC,UAAU,CAAC,CAAC;YAC3C,KAAI,CAAC,cAAc,GAAG,MAAM,CAAC,YAAY,CAAC;YAC1C,KAAI,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC;QAC1B,CAAC,CAAC,CAAC;QACH,IAAI,CAAC,UAAU,CAAC,eAAe,GAAG,IAAI,CAAC,qBAAqB,EAAE,CAAC;IACjE,CAAC;IAAA,CAAC;IAEA,2CAAU,GAAV,UAAW,MAAM;QAAjB,iBAcC;QAbC,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC;QAClC,IAAI,CAAC,gBAAgB,GAAG,CAAC,UAAU,EAAE,QAAQ,EAAE,aAAa,EAAE,SAAS;YACvE,YAAY,EAAE,cAAc,EAAE,UAAU,EAAE,SAAS,EAAG,YAAY,EAAE,YAAY,EAAE,eAAe,EAAE,WAAW,EAAE,kBAAkB,CAAC,CAAC;QACpI,IAAI,CAAC,sBAAsB,GAAG,EAAE,CAAC;QACjC,IAAI,CAAC,gBAAgB,CAAC,OAAO,CAAC,WAAC;YAC7B,KAAI,CAAC,sBAAsB,CAAC,IAAI,CAAC,CAAC,GAAG,SAAS,CAAC,CAAC;QAClD,CAAC,CAAC,CAAC;QACH,uHAAuH;QACvH,oDAAoD;QACpD,iEAAiE;QACjE,IAAI;QACJ,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;QACnD,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IACnC,CAAC;IAqBM,iDAAgB,GAAvB,UAA0B,IAAY;QACpC,IAAI,CAAC,UAAU,GAAI,IAAI,CAAC,wBAAwB,CAAC,CAAC,IAAI,CACpD,CAAC,UAAS,CAAC,EAAE,CAAC;YACd,IAAG,CAAC,CAAC,gBAAgB,CAAC,UAAU,GAAG,CAAC,CAAC,gBAAgB,CAAC,UAAU,EAAE;gBAAE,OAAO,CAAC,CAAC,CAAC;aAAE;YAChF,IAAG,CAAC,CAAC,gBAAgB,CAAC,UAAU,GAAG,CAAC,CAAC,gBAAgB,CAAC,UAAU,EAAE;gBAAE,OAAO,CAAC,CAAC;aAAE;YAC/E,OAAO,CAAC,CAAC;QACX,CAAC,CAAC,CAAC,CAAC;QAAC,CAAC;IACR,CAAC;IAED,mDAAkB,GAAlB;QACE,IAAI,MAAM,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC;QAC7C,IAAI,CAAC,eAAe,CAAC,MAAM,CAAC,YAAY,EAAE,MAAM,CAAC,YAAY,CAAC,CAAC;QAC/D,IAAI,CAAC,SAAS,CAAC,SAAS,GAAG,MAAM,CAAC,SAAS,CAAC;QAC5C,IAAI,CAAC,SAAS,CAAC,QAAQ,GAAG,MAAM,CAAC,QAAQ,CAAC;QAC1C,IAAI,CAAC,UAAU,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC;IAC7C,CAAC;IAED,gDAAe,GAAf,UAAgB,OAAO,EAAE,OAAO;QAC9B,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,CAAC;QAC1B,IAAI,CAAC,iBAAiB,CAAC,OAAO,CAAC,MAAM,EAAE,QAAQ,CAAC,CAAC;QACjD,IAAI,CAAC,iBAAiB,CAAC,OAAO,CAAC,WAAW,EAAE,aAAa,CAAC,CAAC;QAC3D,IAAI,CAAC,iBAAiB,CAAC,OAAO,CAAC,OAAO,EAAE,SAAS,CAAC,CAAC;QACnD,IAAI,CAAC,iBAAiB,CAAC,OAAO,CAAC,UAAU,EAAE,YAAY,CAAC,CAAC;QACzD,IAAI,CAAC,iBAAiB,CAAC,OAAO,CAAC,YAAY,EAAE,cAAc,CAAC,CAAC;QAC7D,IAAI,CAAC,iBAAiB,CAAC,OAAO,CAAC,QAAQ,EAAE,UAAU,CAAC,CAAC;QACrD,IAAI,CAAC,iBAAiB,CAAC,OAAO,CAAC,OAAO,EAAE,SAAS,CAAC,CAAC;QACnD,IAAI,CAAC,iBAAiB,CAAC,OAAO,CAAC,UAAU,EAAE,YAAY,CAAC,CAAC;QACzD,IAAI,CAAC,iBAAiB,CAAC,OAAO,CAAC,UAAU,EAAE,eAAe,CAAC,CAAC;QAC5D,IAAI,CAAC,iBAAiB,CAAC,OAAO,CAAC,gBAAgB,EAAE,kBAAkB,CAAC,CAAC;QACrE,IAAI,CAAC,iBAAiB,CAAC,OAAO,CAAC,aAAa,EAAE,eAAe,CAAC,CAAC;QAC/D,IAAI,CAAC,iBAAiB,CAAC,OAAO,CAAC,SAAS,EAAE,WAAW,CAAC,CAAC;IACzD,CAAC;IAED,gDAAe,GAAf;QACE,IAAI,CAAC,SAAS,CAAC,SAAS,GAAG,CAAC,CAAC;QAC7B,IAAI,CAAC,SAAS,CAAC,QAAQ,GAAG,EAAE,CAAC;QAC7B,IAAI,CAAC,UAAU,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC;QAC3C,IAAI,CAAC,YAAY,GAAG,EAAE,CAAC;QACvB,IAAI,CAAC,cAAc,GAAG,EAAE,MAAM,EAAC,EAAE,EAAE,WAAW,EAAC,EAAE,EAAE,OAAO,EAAC,EAAE;YAC3D,UAAU,EAAC,EAAE,EAAE,YAAY,EAAE,EAAE,EAAE,QAAQ,EAAG,EAAE,EAAE,UAAU,EAAE,EAAE;YAC9D,OAAO,EAAC,EAAE,EAAE,UAAU,EAAE,EAAE;YAC1B,gBAAgB,EAAC,EAAE,EAAE,aAAa,EAAE,EAAE,EAAE,SAAS,EAAE,EAAE;SACtD,CAAC;QACF,IAAI,CAAC,aAAa,CAAC,WAAW,CAAC,SAAS,GAAG,CAAC,CAAC;QAC7C,IAAI,CAAC,aAAa,CAAC,WAAW,CAAC,YAAY,GAAG,EAAE,CAAC;QACjD,IAAI,CAAC,aAAa,CAAC,WAAW,CAAC,YAAY,GAAG,SAAS,CAAC;QACxD,IAAI,CAAC,aAAa,CAAC,WAAW,CAAC,oBAAoB,GAAG,EAAE,CAAC;QACzD,IAAI,CAAC,aAAa,CAAC,WAAW,CAAC,QAAQ,GAAG,EAAE,CAAC;QAC7C,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,YAAY,EAAE,IAAI,CAAC,cAAc,CAAC,CAAC;IAC/D,CAAC;IAEH,sDAAqB,GAArB;QAAA,iBAyCC;QAxCC,IAAM,iBAAiB,GAAG,UAAC,IAAS,EAAE,MAAc;YAClD,IAAI,WAAW,GAAG,CAAC,KAAI,CAAC,YAAY,CAAC;YACrC,IAAI,KAAI,CAAC,YAAY,EAAE;gBACrB,IAAI,aAAW,GAAG,IAAI,CAAC,MAAM,CAAC,QAAQ,EAAE,CAAC,IAAI,EAAE,CAAC,WAAW,EAAE,CAAC,OAAO,CAAC,KAAI,CAAC,YAAY,CAAC,QAAQ,EAAE,CAAC,WAAW,EAAE,CAAC,KAAK,CAAC,CAAC,CAAC;gBACzH,IAAI,kBAAgB,GAAG,IAAI,CAAC,WAAW,CAAC,QAAQ,EAAE,CAAC,IAAI,EAAE,CAAC,WAAW,EAAE,CAAC,OAAO,CAAC,KAAI,CAAC,YAAY,CAAC,QAAQ,EAAE,CAAC,WAAW,EAAE,CAAC,KAAK,CAAC,CAAC,CAAC;gBACnI,IAAI,cAAY,GAAG,IAAI,CAAC,OAAO,CAAC,QAAQ,EAAE,CAAC,IAAI,EAAE,CAAC,WAAW,EAAE,CAAC,OAAO,CAAC,KAAI,CAAC,YAAY,CAAC,QAAQ,EAAE,CAAC,WAAW,EAAE,CAAC,KAAK,CAAC,CAAC,CAAC;gBAC3H,IAAI,iBAAe,GAAG,IAAI,CAAC,UAAU,CAAC,QAAQ,EAAE,CAAC,IAAI,EAAE,CAAC,WAAW,EAAE,CAAC,OAAO,CAAC,KAAI,CAAC,YAAY,CAAC,QAAQ,EAAE,CAAC,WAAW,EAAE,CAAC,KAAK,CAAC,CAAC,CAAC;gBACjI,IAAI,mBAAiB,GAAG,IAAI,CAAC,YAAY,CAAC,QAAQ,EAAE,CAAC,IAAI,EAAE,CAAC,WAAW,EAAE,CAAC,OAAO,CAAC,KAAI,CAAC,YAAY,CAAC,QAAQ,EAAE,CAAC,WAAW,EAAE,CAAC,KAAK,CAAC,CAAC,CAAC;gBACrI,IAAI,eAAa,GAAG,IAAI,CAAC,QAAQ,CAAC,QAAQ,EAAE,CAAC,IAAI,EAAE,CAAC,WAAW,EAAE,CAAC,OAAO,CAAC,KAAI,CAAC,YAAY,CAAC,QAAQ,EAAE,CAAC,WAAW,EAAE,CAAC,KAAK,CAAC,CAAC,CAAC;gBAC7H,IAAI,aAAW,GAAG,IAAI,CAAC,UAAU,CAAC,QAAQ,EAAE,CAAC,IAAI,EAAE,CAAC,WAAW,EAAE,CAAC,OAAO,CAAC,KAAI,CAAC,YAAY,CAAC,QAAQ,EAAE,CAAC,WAAW,EAAE,CAAC,KAAK,CAAC,CAAC,CAAC;gBAC7H,IAAI,YAAU,GAAG,IAAI,CAAC,OAAO,CAAC,QAAQ,EAAE,CAAC,IAAI,EAAE,CAAC,WAAW,EAAE,CAAC,OAAO,CAAC,KAAI,CAAC,YAAY,CAAC,QAAQ,EAAE,CAAC,WAAW,EAAE,CAAC,KAAK,CAAC,CAAC,CAAC;gBACzH,IAAI,YAAU,GAAG,IAAI,CAAC,aAAa,CAAC,QAAQ,EAAE,CAAC,IAAI,EAAE,CAAC,WAAW,EAAE,CAAC,OAAO,CAAC,KAAI,CAAC,YAAY,CAAC,QAAQ,EAAE,CAAC,WAAW,EAAE,CAAC,KAAK,CAAC,CAAC,CAAC;gBAC/H,IAAI,iBAAe,GAAG,IAAI,CAAC,gBAAgB,CAAC,QAAQ,EAAE,CAAC,IAAI,EAAE,CAAC,WAAW,EAAE,CAAC,OAAO,CAAC,KAAI,CAAC,YAAY,CAAC,QAAQ,EAAE,CAAC,WAAW,EAAE,CAAC,KAAK,CAAC,CAAC,CAAC;gBACvI,IAAI,aAAa,GAAG,IAAI,CAAC,QAAQ,CAAC,QAAQ,EAAE,CAAC,IAAI,EAAE,CAAC,WAAW,EAAE,CAAC,OAAO,CAAC,KAAI,CAAC,YAAY,CAAC,QAAQ,EAAE,CAAC,WAAW,EAAE,CAAC,KAAK,CAAC,CAAC,CAAC;gBAC7H,IAAI,OAAO,GAAG,IAAI,CAAC,eAAe,CAAC,QAAQ,EAAE,CAAC,IAAI,EAAE,CAAC,WAAW,EAAE,CAAC,OAAO,CAAC,KAAI,CAAC,YAAY,CAAC,QAAQ,EAAE,CAAC,WAAW,EAAE,CAAC,KAAK,CAAC,CAAC,CAAC;gBAC9H,IAAI,kBAAgB,GAAG,IAAI,CAAC,aAAa,CAAC,QAAQ,EAAE,CAAC,IAAI,EAAE,CAAC,WAAW,EAAE,CAAC,OAAO,CAAC,KAAI,CAAC,YAAY,CAAC,QAAQ,EAAE,CAAC,WAAW,EAAE,CAAC,KAAK,CAAC,CAAC,CAAC;gBACrI,IAAI,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC,QAAQ,EAAE,CAAC,IAAI,EAAE,CAAC,WAAW,EAAE,CAAC,OAAO,CAAC,KAAI,CAAC,YAAY,CAAC,QAAQ,EAAE,CAAC,WAAW,EAAE,CAAC,KAAK,CAAC,CAAC,CAAC;gBAC1H,WAAW,GAAG,aAAW,IAAI,kBAAgB,IAAI,cAAY,IAAI,iBAAe,IAAI,mBAAiB,IAAI,eAAa,IAAI,aAAW,IAAI,YAAU,IAAI,YAAU,IAAI,iBAAe,IAAI,aAAa,IAAI,OAAO,IAAI,kBAAgB,IAAI,SAAS,CAAC;aACnP;YAED,IAAI,CAAC,WAAW,EAAE;gBAChB,OAAO;aACR;YAED,IAAI,YAAY,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC;YACtC,IAAI,WAAW,GAAG,IAAI,CAAC,MAAM,CAAC,QAAQ,EAAE,CAAC,IAAI,EAAE,CAAC,WAAW,EAAE,CAAC,OAAO,CAAC,YAAY,CAAC,MAAM,CAAC,QAAQ,EAAE,CAAC,WAAW,EAAE,CAAC,KAAK,CAAC,CAAC,CAAC;YAC3H,IAAI,gBAAgB,GAAG,IAAI,CAAC,WAAW,CAAC,QAAQ,EAAE,CAAC,IAAI,EAAE,CAAC,WAAW,EAAE,CAAC,OAAO,CAAC,YAAY,CAAC,WAAW,CAAC,QAAQ,EAAE,CAAC,WAAW,EAAE,CAAC,KAAK,CAAC,CAAC,CAAC;YAC1I,IAAI,YAAY,GAAG,IAAI,CAAC,OAAO,CAAC,QAAQ,EAAE,CAAC,IAAI,EAAE,CAAC,WAAW,EAAE,CAAC,OAAO,CAAC,YAAY,CAAC,OAAO,CAAC,QAAQ,EAAE,CAAC,WAAW,EAAE,CAAC,KAAK,CAAC,CAAC,CAAC;YAC9H,IAAI,eAAe,GAAG,IAAI,CAAC,UAAU,CAAC,QAAQ,EAAE,CAAC,IAAI,EAAE,CAAC,WAAW,EAAE,CAAC,OAAO,CAAC,YAAY,CAAC,UAAU,CAAC,QAAQ,EAAE,CAAC,WAAW,EAAE,CAAC,KAAK,CAAC,CAAC,CAAC;YACvI,IAAI,iBAAiB,GAAG,IAAI,CAAC,YAAY,CAAC,QAAQ,EAAE,CAAC,IAAI,EAAE,CAAC,WAAW,EAAE,CAAC,OAAO,CAAC,YAAY,CAAC,YAAY,CAAC,QAAQ,EAAE,CAAC,WAAW,EAAE,CAAC,KAAK,CAAC,CAAC,CAAC;YAC7I,IAAI,aAAa,GAAG,IAAI,CAAC,QAAQ,CAAC,QAAQ,EAAE,CAAC,IAAI,EAAE,CAAC,WAAW,EAAE,CAAC,OAAO,CAAC,YAAY,CAAC,QAAQ,CAAC,QAAQ,EAAE,CAAC,WAAW,EAAE,CAAC,KAAK,CAAC,CAAC,CAAC;YACjI,IAAI,WAAW,GAAG,IAAI,CAAC,UAAU,CAAC,QAAQ,EAAE,CAAC,IAAI,EAAE,CAAC,WAAW,EAAE,CAAC,OAAO,CAAC,YAAY,CAAC,UAAU,CAAC,QAAQ,EAAE,CAAC,WAAW,EAAE,CAAC,KAAK,CAAC,CAAC,CAAC;YACnI,IAAI,UAAU,GAAG,IAAI,CAAC,OAAO,CAAC,QAAQ,EAAE,CAAC,IAAI,EAAE,CAAC,WAAW,EAAE,CAAC,OAAO,CAAC,YAAY,CAAC,OAAO,CAAC,QAAQ,EAAE,CAAC,WAAW,EAAE,CAAC,KAAK,CAAC,CAAC,CAAC;YAC5H,IAAI,UAAU,GAAG,IAAI,CAAC,aAAa,CAAC,QAAQ,EAAE,CAAC,IAAI,EAAE,CAAC,WAAW,EAAE,CAAC,OAAO,CAAC,YAAY,CAAC,UAAU,CAAC,QAAQ,EAAE,CAAC,WAAW,EAAE,CAAC,KAAK,CAAC,CAAC,CAAC;YACrI,IAAI,eAAe,GAAG,IAAI,CAAC,gBAAgB,CAAC,QAAQ,EAAE,CAAC,IAAI,EAAE,CAAC,WAAW,EAAE,CAAC,OAAO,CAAC,YAAY,CAAC,gBAAgB,CAAC,QAAQ,EAAE,CAAC,WAAW,EAAE,CAAC,KAAK,CAAC,CAAC,CAAC;YACnJ,IAAI,gBAAgB,GAAG,IAAI,CAAC,aAAa,CAAC,QAAQ,EAAE,CAAC,IAAI,EAAE,CAAC,WAAW,EAAE,CAAC,OAAO,CAAC,YAAY,CAAC,aAAa,CAAC,QAAQ,EAAE,CAAC,WAAW,EAAE,CAAC,KAAK,CAAC,CAAC,CAAC;YAC9I,IAAI,cAAc,GAAG,IAAI,CAAC,SAAS,CAAC,QAAQ,EAAE,CAAC,IAAI,EAAE,CAAC,WAAW,EAAE,CAAC,OAAO,CAAC,YAAY,CAAC,SAAS,CAAC,QAAQ,EAAE,CAAC,WAAW,EAAE,CAAC,KAAK,CAAC,CAAC,CAAC;YACpI,OAAO,WAAW,IAAI,gBAAgB,IAAI,YAAY,IAAI,eAAe,IAAI,iBAAiB,IAAI,aAAa,IAAI,WAAW,IAAI,UAAU,IAAI,UAAU,IAAI,eAAe,IAAI,gBAAgB,IAAI,cAAc,CAAC;QACtN,CAAC;QACD,OAAO,iBAAiB,CAAC;IAC3B,CAAC;IAEC,kDAAiB,GAAjB,UAAkB,WAAmB,EAAE,GAAW;QAChD,IAAI,CAAC,cAAc,CAAC,GAAG,CAAC,GAAG,WAAW,CAAC;QACvC,IAAI,CAAC,UAAU,CAAC,MAAM,GAAG,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC;IAC/D,CAAC;IAED,4CAAW,GAAX,UAAY,MAAM;QAClB,oCAAoC;QAClC,8DAA8D;QAE9D,IAAI,CAAC,YAAY,GAAG,MAAM,CAAC;QAC3B,IAAI,CAAC,UAAU,CAAC,MAAM,GAAG,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC;IAC/D,CAAC;IAED,yCAAQ,GAAR,UAAS,GAAG;QACV,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,SAAS,CAAC,SAAS,EAAE,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,CAAC;QAC1E,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,IAAI,CAAC,cAAc,EAAE,IAAI,CAAC,gBAAgB,EAAE,MAAM,EAAE,GAAG,CAAC,MAAM,CAAE,CAAC,CAAC;QACxF,4EAA4E;QAC5E,IAAI,KAAK,GAAG,IAAI,CAAC,UAAU,CAAC,YAAY,CAAC;QACzC;;WAEG;QACH,IAAI,CAAC,aAAa,CAAC,WAAW,CAAC,oBAAoB,GAAG,EAAE,CAAC;QACzD,IAAG,KAAK,CAAC,MAAM,GAAG,CAAC,EAAC;YAClB,KAAI,IAAI,CAAC,GAAC,CAAC,EAAE,CAAC,GAAC,KAAK,CAAC,MAAM,EAAE,CAAC,EAAE,EAAC;gBAC/B,IAAI,IAAI,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC;gBACpB,IAAG,CAAC,IAAE,CAAC,EAAC;oBACN,IAAI,CAAC,YAAY,CAAC,GAAG,KAAK,CAAC,KAAK,CAAC,MAAM,GAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC;oBACrD,IAAI,CAAC,YAAY,CAAC,GAAG,KAAK,CAAC,CAAC,GAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC;iBAC3C;qBAAM,IAAI,CAAC,IAAI,KAAK,CAAC,MAAM,GAAC,CAAC,EAAE;oBAC9B,IAAI,CAAC,YAAY,CAAC,GAAG,KAAK,CAAC,CAAC,GAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC;oBAC1C,IAAI,CAAC,YAAY,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC;iBACzC;qBAAM;oBACL,IAAI,CAAC,YAAY,CAAC,GAAG,KAAK,CAAC,CAAC,GAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC;oBAC1C,IAAI,CAAC,YAAY,CAAC,GAAG,KAAK,CAAC,CAAC,GAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC;iBAC3C;gBACD,IAAI,CAAC,OAAO,CAAC,GAAE,CAAC,GAAC,CAAC,CAAC;gBACnB,IAAI,CAAC,aAAa,CAAC,WAAW,CAAC,oBAAoB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;aAChE;SACF;IACH,CAAC;IAED,6CAAY,GAAZ,UAAa,UAAkB,EAAE,QAAgB;QAC/C,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,SAAS,EAAE,UAAU,EAAE,QAAQ,CAAC,CAAC,CAAC;IAC1D,CAAC;IAED,4CAAW,GAAX;QACE,IAAI,CAAC,aAAa,CAAC,MAAM,CAAC,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;QAEzD,IAAI,CAAC,aAAa,CAAC,WAAW,CAAC,SAAS,GAAG,CAAC,CAAC;QAC7C,IAAI,CAAC,aAAa,CAAC,WAAW,CAAC,YAAY,GAAG,EAAE,CAAC;QACjD,IAAI,CAAC,aAAa,CAAC,WAAW,CAAC,YAAY,GAAG,SAAS,CAAC;QACxD,IAAI,CAAC,aAAa,CAAC,WAAW,CAAC,QAAQ,GAAG,EAAE,CAAC;QAC7C,IAAI,CAAC,aAAa,CAAC,WAAW,CAAC,oBAAoB,GAAG,EAAE,CAAC;QACvD,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC;IAClC,CAAC;IAED,kDAAiB,GAAjB,UAAkB,SAAiB,EAAE,QAAgB;QACnD,IAAI,CAAC,aAAa,CAAC,WAAW,CAAC,SAAS,GAAG,SAAS,CAAC;QACrD,IAAI,CAAC,aAAa,CAAC,WAAW,CAAC,QAAQ,GAAG,QAAQ,CAAC;QACnD,IAAI,CAAC,aAAa,CAAC,WAAW,CAAC,YAAY,GAAG,IAAI,CAAC,YAAY,CAAC;QAChE,IAAI,CAAC,aAAa,CAAC,WAAW,CAAC,YAAY,GAAG,IAAI,CAAC,cAAc,CAAC;IACpE,CAAC;IAEM,2CAAU,GAAjB,UAAkB,CAAM;QACtB,MAAM,CAAC,QAAQ,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;IACxB,CAAC;IAnNsB;QAAxB,+DAAS,CAAC,8DAAY,CAAC;wEAAY,8DAAY;6DAAC;IAC7B;QAAnB,+DAAS,CAAC,yDAAO,CAAC;wEAAO,yDAAO;wDAAC;IAlBvB,sBAAsB;QALlC,+DAAS,CAAC;YACT,QAAQ,EAAE,oBAAoB;YAC9B,sIAA8C;;SAE/C,CAAC;+EAqB0B,+DAAU,EAAkB,sDAAM,EAAyB,4EAAoB;YACrF,4DAAW,EAAiB,8DAAc;OArBnD,sBAAsB,CAqOlC;IAAD,6BAAC;CAAA;AArOkC;;;;;;;;;;;;;;;;;;;;;AChBe;AACI;AACwB;AAK9E;IA4EE,8BAAoB,IAAgB;QAApC,iBAEC;QAFmB,SAAI,GAAJ,IAAI,CAAY;QArEpC,mFAAmF;QACnF,6CAA6C;QAC7C,YAAO,GAAU,4BAA4B,CAAC;QAG9C,mBAAc,GAAG,CAAC;gBAChB,EAAE,EAAE,CAAC;gBACL,KAAK,EAAE,GAAG;gBACV,IAAI,EAAE,KAAK;aACZ;YACD;gBACE,EAAE,EAAE,CAAC;gBACL,KAAK,EAAE,GAAG;gBACV,IAAI,EAAE,KAAK;aACZ;YACD;gBACE,EAAE,EAAE,CAAC;gBACL,KAAK,EAAE,GAAG;gBACV,IAAI,EAAE,KAAK;aACZ;YACD;gBACE,EAAE,EAAE,CAAC;gBACL,KAAK,EAAE,GAAG;gBACV,IAAI,EAAE,KAAK;aACZ;YACD;gBACE,EAAE,EAAE,CAAC;gBACL,KAAK,EAAE,GAAG;gBACV,IAAI,EAAE,KAAK;aACZ;YACD;gBACE,EAAE,EAAE,CAAC;gBACL,KAAK,EAAE,GAAG;gBACV,IAAI,EAAE,KAAK;aACZ;SACA,CAAC;QAEF,kBAAa,GAAG,CAAC,mBAAmB;YAClC,kCAAkC;YAClC,qBAAqB;YACrB,iCAAiC;YACjC,6BAA6B;YAC7B,kCAAkC;YAClC,wBAAwB;YACxB,mCAAmC;YACnC,2CAA2C;YAC3C,iCAAiC;YACjC,uBAAuB;YACvB,8BAA8B;YAC9B,4CAA4C;YAC5C,8BAA8B;YAC9B,uCAAuC;YACvC,6BAA6B;YAC7B,0BAA0B;YAC1B,gCAAgC;YAChC,kDAAkD;YAClD,yCAAyC;YACzC,8BAA8B;YAC9B,0CAA0C;YAC1C,qBAAqB;YACrB,sBAAsB;YACtB,4BAA4B;YAC5B,qBAAqB;YACrB,uBAAuB;YACvB,2CAA2C;SAC5C,CAAC;QA0BK,YAAO,GAAG,UAAC,gBAAwB,EAAE,MAAc;YACxD,OAAO,KAAI,CAAC,IAAI,CAAC,GAAG,CAAC,KAAI,CAAC,OAAO,GAAG,UAAU,GAAG,gBAAgB,GAAG,GAAG,GAAG,MAAM,CAAC,CAAC;QACpF,CAAC;QAEM,yBAAoB,GAAG,UAAC,cAAsB,EAAE,MAAc;YACnE,OAAO,KAAI,CAAC,IAAI,CAAC,GAAG,CAAC,KAAI,CAAC,OAAO,GAAG,YAAY,GAAG,cAAc,GAAG,GAAG,GAAG,MAAM,CAAC,CAAC;QACpF,CAAC;QAWM,oBAAe,GAAG;YACvB,OAAO,KAAI,CAAC,IAAI,CAAC,GAAG,CAAC,KAAI,CAAC,OAAO,GAAG,cAAc,CAAC,CAAC;QACtD,CAAC;QAEM,gBAAW,GAAG,UAAC,QAAgB,EAAE,MAAc,EAAE,MAAc,EAAE,cAAmB;YACzF,OAAO,KAAI,CAAC,IAAI,CAAC,GAAG,CAAC,KAAI,CAAC,OAAO,GAAG,cAAc,GAAG,QAAQ,GAAG,GAAG,GAAG,MAAM,GAAG,GAAG,GAAG,MAAM,GAAG,GAAG,GAAG,cAAc,CAAC,CAAC;QACtH,CAAC;QAEM,gBAAW,GAAG,UAAC,QAAgB,EAAE,MAAc;YACpD,OAAO,KAAI,CAAC,IAAI,CAAC,GAAG,CAAC,KAAI,CAAC,OAAO,GAAG,cAAc,GAAG,QAAQ,GAAG,GAAG,GAAG,MAAM,CAAC,CAAC;QAChF,CAAC;QAcD,mBAAc,GAAG,UAAC,cAAsB,EAAE,MAAc;YACtD,OAAO,KAAI,CAAC,IAAI,CAAC,GAAG,CAAC,KAAI,CAAC,OAAO,GAAG,cAAc,GAAG,QAAQ,GAAG,MAAM,CAAC,CAAC;QAC1E,CAAC;QAED,qBAAgB,GAAG;YACjB,OAAO,KAAI,CAAC,IAAI,CAAC,GAAG,CAAC,qBAAqB,CAAC,CAAC;QAC9C,CAAC;QApEC,IAAI,CAAC,WAAW,GAAG,IAAI,OAAO,EAAE,CAAC;IACnC,CAAC;IAEK,gDAAiB,GAAvB;;;;;;wBACM,IAAI,GAAG,IAAI,CAAC;wBAChB,qBAAM,KAAK,CAAC,IAAI,CAAC,OAAO,GAAG,SAAS,CAAC;iCAClC,IAAI,CAAC,UAAU,QAAQ;gCACtB,QAAQ,CAAC,IAAI,EAAE,CAAC,IAAI,CAClB,UAAU,IAAI;oCACZ,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC;oCAC7B,IAAI,CAAC,iBAAiB,GAAG,IAAI,oEAAkB,CAAC,IAAI,CAAC,CAAC;oCAEtD,IAAI,CAAC,iBAAiB,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC;oCAClD,IAAI,CAAC,iBAAiB,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;gCAC1C,CAAC,CACF,CAAC;gCACF,0EAA0E;4BAC5E,CAAC,CAAC;;wBAZJ,SAYI,CAAC;;;;;KAEN;IAWD,mDAAoB,GAApB,UAAqB,cAAsB,EAAE,MAAW,EAAE,cAAmB;QAC3E,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,OAAO,GAAG,8BAA8B,GAAG,cAAc,GAAG,GAAG,GAAG,MAAM,GAAG,GAAG,GAAG,cAAc,CAAC,CAAC;IAC7H,CAAC;IAED,+DAAgC,GAAhC,UAAiC,cAAsB,EAAE,cAAmB;QAC1E,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,OAAO,GAAG,8BAA8B,GAAG,cAAc,GAAG,GAAG,GAAG,cAAc,CAAC,CAAC;IAC9G,CAAC;IAcK,4CAAa,GAAnB,UAAoB,MAAc;;;;;;wBAC5B,IAAI,GAAG,IAAI,CAAC;wBAChB,qBAAM,KAAK,CAAC,qBAAqB,CAAC;iCAC/B,IAAI,CAAC,UAAU,QAAQ;gCACtB,QAAQ,CAAC,IAAI,EAAE,CAAC,IAAI,CAClB,UAAU,IAAI;oCACZ,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,IAAI,CAAC,cAAI,IAAI,WAAI,CAAC,MAAM,KAAK,MAAM,EAAtB,CAAsB,CAAC,CAAC;gCAC5D,CAAC,CACF,CAAC;4BACJ,CAAC,CAAC;;wBAPJ,SAOI,CAAC;;;;;KACN;IAUM,4CAAa,GAApB,UAAqB,MAAc,EAAE,UAAkB,EAAE,MAAc,EAAE,UAAkB,EAAE,YAAoB;QAC/G,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,GAAG,WAAW,EAAE,EAAE,MAAM,EAAE,MAAM,EAAE,UAAU,EAAE,UAAU,EAAE,MAAM,EAAE,MAAM,EAAE,UAAU,EAAE,UAAU,EAAE,QAAQ,EAAE,YAAY,EAAE,CAAC,CAAC;IAChK,CAAC;IAGD,0CAAW,GAAX,UAAY,gBAAwB,EAAE,MAAW,EAAE,GAAQ,EAAE,MAAc,EAAE,SAAiB,EAAE,QAAgB,EAAE,WAAoB;QAClI,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,GAAG,YAAY,EAAE,EAAE,QAAQ,EAAE,gBAAgB,EAAE,MAAM,EAAE,MAAM,EAAE,UAAU,EAAE,GAAG,EAAE,MAAM,EAAE,MAAM,EAAE,UAAU,EAAE,SAAS,EAAE,QAAQ,EAAE,QAAQ,EAAE,WAAW,EAAE,WAAW,EAAE,CAAC,CAAC;IAC7M,CAAC;IAEM,yCAAU,GAAjB,UAAkB,QAAgB,EAAE,MAAc,EAAE,UAAkB,EAAE,MAAc;QACpF,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,OAAO,GAAG,aAAa,GAAC,QAAQ,GAAC,GAAG,GAAC,MAAM,GAAC,GAAG,GAAC,UAAU,GAAC,GAAG,GAAC,MAAM,CAAC,CAAC;IACnG,CAAC;IAEM,0CAAW,GAAlB,UAAmB,OAAe,EAAE,QAAgB,EAAE,WAAoB;QACxE,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,GAAG,aAAa,EAAE,EAAE,QAAQ,EAAE,OAAO,CAAC,UAAU,CAAC,EAAE,MAAM,EAAE,OAAO,CAAC,QAAQ,CAAC,EAAE,UAAU,EAAE,OAAO,CAAC,YAAY,CAAC,EAAE,MAAM,EAAE,OAAO,CAAC,QAAQ,CAAC,EAAE,UAAU,EAAE,OAAO,CAAC,YAAY,CAAC,EAAE,QAAQ,EAAE,OAAO,CAAC,UAAU,CAAC,EAAE,QAAQ,EAAE,QAAQ,EAAE,WAAW,EAAE,WAAW,EAAC,CAAC,CAAC;IACjS,CAAC;IAEM,4CAAa,GAApB,UAAqB,OAAe;QAClC,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,GAAG,eAAe,EAAE,EAAE,QAAQ,EAAE,OAAO,CAAC,UAAU,CAAC,EAAE,MAAM,EAAE,OAAO,CAAC,QAAQ,CAAC,EAAE,UAAU,EAAE,OAAO,CAAC,YAAY,CAAC,EAAE,MAAM,EAAE,OAAO,CAAC,QAAQ,CAAC,EAAE,UAAU,EAAE,OAAO,CAAC,YAAY,CAAC,EAAE,CAAC,CAAC;IACvN,CAAC;IAEM,+CAAgB,GAAvB,UAAwB,QAAe,EAAE,UAAkB,EAAG,UAAkB;QAC9E,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,GAAG,kBAAkB,EAAE,EAAE,QAAQ,EAAE,QAAQ,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAE,UAAU,EAAC,CAAC,CAAC;IAClI,CAAC;IAEM,6CAAc,GAArB,UAAsB,OAAe,EAAE,UAAkB;QACvD,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,GAAG,gBAAgB,EAAE,EAAE,QAAQ,EAAE,OAAO,CAAC,UAAU,CAAC,EAAE,MAAM,EAAE,OAAO,CAAC,QAAQ,CAAC,EAAE,UAAU,EAAE,OAAO,CAAC,YAAY,CAAC,EAAE,MAAM,EAAE,OAAO,CAAC,QAAQ,CAAC,EAAE,UAAU,EAAE,OAAO,CAAC,YAAY,CAAC,EAAE,UAAU,EAAE,UAAU,EAAC,CAAC,CAAC;IAC/O,CAAC;IAEM,uDAAwB,GAA/B,UAAgC,OAAe,EAAE,UAAkB;QACjE,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,GAAG,0BAA0B,EAAE,EAAE,QAAQ,EAAE,OAAO,CAAC,UAAU,CAAC,EAAE,MAAM,EAAE,OAAO,CAAC,QAAQ,CAAC,EAAE,UAAU,EAAE,OAAO,CAAC,YAAY,CAAC,EAAE,MAAM,EAAE,OAAO,CAAC,QAAQ,CAAC,EAAE,UAAU,EAAE,OAAO,CAAC,YAAY,CAAC,EAAE,UAAU,EAAE,UAAU,EAAE,QAAQ,EAAE,OAAO,CAAC,UAAU,CAAC,EAAC,CAAC,CAAC;IACxR,CAAC;IAEM,wCAAS,GAAhB,UAAiB,QAAe,EAAE,MAAa,EAAE,cAAqB,EAAE,oBAA6B,EAAE,eAAwB;QAC7H,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,GAAE,WAAW,EAAE,EAAC,QAAQ,EAAE,QAAQ,EAAE,MAAM,EAAC,MAAM,EAAE,cAAc,EAAE,cAAc,EAAG,oBAAoB,EAAE,oBAAoB,EAAC,eAAe,EAAE,eAAe,EAAE,EAAE,EAAC,YAAY,EAAE,MAAM,EAAC,CAAC,CAAC;IAC/N,CAAC;IAEK,0CAAW,GAAjB,UAAkB,MAAc;;;;;;wBAC1B,IAAI,GAAG,IAAI,CAAC;wBAChB,qBAAM,KAAK,CAAC,qBAAqB,CAAC;iCAC/B,IAAI,CAAC,UAAU,QAAQ;gCACtB,QAAQ,CAAC,IAAI,EAAE,CAAC,IAAI,CAClB,UAAU,IAAI;oCACZ,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,IAAI,CAAC,cAAI,IAAI,WAAI,CAAC,MAAM,KAAK,MAAM,EAAtB,CAAsB,CAAC,CAAC;oCAC1D,IAAI,CAAC,cAAc,GAAG,IAAI,oEAAkB,CAAC,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,QAAQ,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;gCAC/F,CAAC,CACF,CAAC;4BACJ,CAAC,CAAC;;wBARJ,SAQI,CAAC;;;;;KACN;IAED,qCAAM,GAAN,UAAO,KAAa;QAClB,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,GAAG,QAAQ,EAAE,EAAE,MAAM,EAAE,KAAK,EAAE,CAAC,CAAC,SAAS,CAAC,aAAG;YACtE,oBAAoB;QACtB,CAAC,CAAC,CAAC;IACL,CAAC;IAED,yCAAU,GAAV,UAAW,MAAc,EAAE,MAAc;QACvC,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,GAAG,YAAY,EAAE,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,EAAE,CAAC,CAAC;IACzF,CAAC;IAED,0CAAW,GAAX;QACE,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,gCAAgC,CAAC,CAAC,SAAS,EAAE;aACxD,IAAI,CAAC,UAAU,QAAQ;QACxB,CAAC,CAAC,CAAC;IACP,CAAC;IAxMwB;QAAxB,+DAAS,CAAC,8DAAY,CAAC;wEAAY,8DAAY;2DAAC;IA+D7B;QAAnB,+DAAS,CAAC,yDAAO,CAAC;wEAAO,yDAAO;sDAAC;IA1EvB,oBAAoB;QAHhC,gEAAU,CAAC;YACV,UAAU,EAAE,MAAM;SACnB,CAAC;+EA6E0B,+DAAU;OA5EzB,oBAAoB,CAoNhC;IAAD,2BAAC;CAAA;AApNgC;AAsNjC;IAAA;QACE,cAAS,GAAW,CAAC,CAAC;QACtB,iBAAY,GAAW,EAAE,CAAC;QAE1B,yBAAoB,GAAU,EAAE,CAAC;QACjC,aAAQ,GAAW,EAAE,CAAC;IAUxB,CAAC;IARC,0BAAQ,GAAR;QACE,IAAI,GAAG,GAAG,EAAE,CAAC;QACb,GAAG,CAAC,WAAW,CAAC,GAAG,IAAI,CAAC,SAAS,CAAC;QAClC,GAAG,CAAC,UAAU,CAAC,GAAG,IAAI,CAAC,QAAQ,CAAC;QAChC,GAAG,CAAC,cAAc,CAAC,GAAG,IAAI,CAAC,YAAY,CAAC;QACxC,GAAG,CAAC,cAAc,CAAC,GAAG,IAAI,CAAC,YAAY,CAAC;QACxC,OAAO,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC;IAC7B,CAAC;IACH,cAAC;AAAD,CAAC;;;;;;;;;;;;;;;;;;;;;AC5OwC;AACc;AAC2B;AAGlF,IAAM,MAAM,GAAW;IACrB;QACE,IAAI,EAAC,EAAE;QACP,SAAS,EAAE,+FAAsB;KAClC;CACF,CAAC;AAMF;IAAA;IAAoC,CAAC;IAAxB,oBAAoB;QAJhC,8DAAQ,CAAC;YACR,OAAO,EAAE,CAAC,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;YACxC,OAAO,EAAE,CAAC,4DAAY,CAAC;SACxB,CAAC;OACW,oBAAoB,CAAI;IAAD,2BAAC;CAAA;AAAJ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AChBQ;AACM;AAEiB;AACmB;AACtC;AAEQ;AACS;AAMnC;AAC6E;AACxC;AACJ;AAED;AACN;AACa;AAoBlE;IAAA;IAA6B,CAAC;IAAjB,aAAa;QAjBzB,8DAAQ,CAAC;YACR,YAAY,EAAE,CAAC,+FAAsB,EAAE,yFAAoB,EAAE,yEAAe,EAAE,8FAAyB,EAAE,+EAAiB,CAAC;YAC3H,eAAe,EAAG,CAAC,8FAAyB,CAAC;YAC7C,SAAS,EAAG,CAAC,4EAAoB,CAAC;YAClC,OAAO,EAAE;gBACP,4DAAY;gBACZ,4EAAoB;gBACpB,iEAAe,EAAE,+DAAa,EAAE,iEAAe,EAAE,gEAAc,EAAE,gEAAc;gBAC/E,kEAAgB,EAAE,+DAAa,EAAC,+DAAa,EAAE,0EAAwB,EAAE,+DAAa;gBACtF,oEAAkB,EAAG,oEAAkB,EAAE,+DAAa,EAAE,kEAAgB,EAAE,2EAAgB;gBAC1F,qEAAa;gBACb,0DAAW;gBACX,oEAAS,CAAC,OAAO,EAAE;gBACnB,2EAAgB;aACjB;SACF,CAAC;OAEW,aAAa,CAAI;IAAD,oBAAC;CAAA;AAAJ;;;;;;;;;;;;ACzC1B,8CAA8C,WAAW,8a;;;;;;;;;;;ACAzD,kCAAkC,kBAAkB,KAAK,wBAAwB,kBAAkB,KAAK,uCAAuC,qBAAqB,KAAK,kBAAkB,sBAAsB,yBAAyB,2BAA2B,+BAA+B,oBAAoB,KAAK,iDAAiD,sBAAsB,KAAK,yBAAyB,sBAAsB,KAAK,kCAAkC,0CAA0C,KAAK,mCAAmC,2CAA2C,KAAK,cAAc,iBAAiB,KAAK,cAAc,iBAAiB,KAAK,6EAA6E,gCAAgC,KAAK,iCAAiC,yCAAyC,kCAAkC,KAAK,mDAAmD,22D;;;;;;;;;;;ACA/7B,uOAAuO,yDAAyD,eAAe,2HAA2H,0DAA0D,gBAAgB,4jCAA4jC,mBAAmB,oLAAoL,mBAAmB,uNAAuN,eAAe,aAAa,aAAa,6DAA6D,kBAAkB,KAAK,cAAc,KAAK,iBAAiB,IAAI,mBAAmB,+JAA+J,YAAY,UAAU,uDAAuD,oGAAoG,iBAAiB,gOAAgO,iBAAiB,qTAAqT,+GAA+G,cAAc,wBAAwB,sEAAsE,0EAA0E,oBAAoB,iBAAiB,kYAAkY,oBAAoB,iBAAiB,yFAAyF,+TAA+T,oLAAoL,oBAAoB,iBAAiB,+IAA+I,yCAAyC,iGAAiG,oBAAoB,iqCAAiqC,yBAAyB,cAAc,yGAAyG,oBAAoB,iBAAiB,uUAAuU,8EAA8E,gCAAgC,aAAa,gBAAgB,sLAAsL,oBAAoB,iBAAiB,sXAAsX,gCAAgC,aAAa,sBAAsB,gLAAgL,oBAAoB,iBAAiB,iaAAia,gCAAgC,aAAa,oDAAoD,oNAAoN,udAAud,0JAA0J,cAAc,gIAAgI,oBAAoB,iBAAiB,mXAAmX,oBAAoB,iBAAiB,mVAAmV,6nCAA6nC,oBAAoB,0MAA0M,ofAAof,s1BAAs1B,oBAAoB,mlBAAmlB,eAAe,qZAAqZ,eAAe,icAAic,sBAAsB,yYAAyY,kBAAkB,sdAAsd,wBAAwB,kVAAkV,4IAA4I,gYAAgY,gBAAgB,mbAAmb,sBAAsB,geAAge,oDAAoD,+8BAA+8B,wCAAwC,+EAA+E,eAAe,0PAA0P,cAAc,wRAAwR,cAAc,4LAA4L,2BAA2B,4qBAA4qB,sBAAsB,yMAAyM,wCAAwC,iP;;;;;;;;;;;;;;;;;;;;;;;;;ACA3lmB;AACE;AACF;AACiD;AACrD;AAEmB;AAChC;AACmB;AASnE;IAuBE,8BAAoB,KAAqB,EAAU,aAAoC,EAC7E,MAAc,EAAU,MAAiB,EACzC,WAAuB,EAAU,QAA8B;QAFzE,iBAKI;QALgB,UAAK,GAAL,KAAK,CAAgB;QAAU,kBAAa,GAAb,aAAa,CAAuB;QAC7E,WAAM,GAAN,MAAM,CAAQ;QAAU,WAAM,GAAN,MAAM,CAAW;QACzC,gBAAW,GAAX,WAAW,CAAY;QAAU,aAAQ,GAAR,QAAQ,CAAsB;QApBzE,eAAU,GAAG,IAAI,oEAAkB,EAAU,CAAC;QAC9C,4BAAuB,GAAG,IAAI,oEAAkB,EAAU,CAAC;QAC3D,qBAAgB,GAAa,CAAC,OAAO,EAAE,MAAM,EAAE,MAAM,CAAC,CAAC;QACvD,kCAA6B,GAAa,CAAC,cAAc,CAAC,CAAC;QAI3D,eAAU,GAAU,CAAC,CAAC;QAEtB,0BAAqB,GAAa,KAAK,CAAC;QACxC,aAAQ,GAAY,KAAK,CAAC;QAC1B,iBAAY,GAAW,IAAI,CAAC;QAC5B,mBAAc,GAAW,IAAI,CAAC;QAC9B,oBAAe,GAAW,IAAI,CAAC;QAC/B,oBAAe,GAAW,IAAI,CAAC;QAC/B,oBAAe,GAAU,EAAE,CAAC;QAC5B,yBAAoB,GAAY,KAAK,CAAC;QAgD/B,iBAAY,GAAG,UAAC,cAAc,EAAE,MAAM;YACvC,IAAI,KAAK,GAAG,KAAI,CAAC;YACf,KAAI,CAAC,aAAa,CAAC,cAAc,CAAC,cAAc,EAAE,MAAM,CAAC,CAAC,SAAS,CACrE,cAAI;gBACF,KAAK,CAAC,IAAI,GAAG,IAAI,CAAC;gBAClB,KAAK,CAAC,UAAU,CAAC,IAAI,GAAG,IAAI,CAAC,sBAAsB,CAAC,CAAC;gBACrD,KAAK,CAAC,uBAAuB,CAAC,IAAI,GAAG,IAAI,CAAC,wBAAwB,CAAC,CAAC;gBACpE,IAAI,MAAM,GAAG,IAAI,CAAC,2BAA2B,CAAC,CAAC;gBAC/C,KAAK,CAAC,aAAa,CAAC,cAAc,GAAG,MAAM,CAAC;gBAC5C,KAAK,CAAC,QAAQ,GAAG,KAAK,CAAC;gBACvB,KAAK,CAAC,UAAU,GAAG,CAAC,CAAC;gBACrB,KAAK,CAAC,YAAY,GAAG,EAAE,CAAC;gBACxB,KAAK,CAAC,qBAAqB,GAAG,KAAK,CAAC;gBACnC,IAAG,WAAW,KAAK,KAAK,CAAC,IAAI,CAAC,YAAY,CAAC,EAAE;oBAC3C,KAAK,CAAC,QAAQ,GAAG,IAAI,CAAC;oBACtB,IAAG,KAAK,CAAC,WAAW,CAAC,QAAQ,KAAK,QAAQ,EAAC;wBACzC,KAAK,CAAC,qBAAqB,GAAG,IAAI,CAAC;wBACnC,KAAK,CAAC,eAAe,GAAG,uJAAuJ,CAAC;qBACjL;yBAAM;wBACL,KAAK,CAAC,eAAe,GAAG,wDAAwD,CAAC;qBAClF;oBACD,IAAI,aAAa,GAAI,MAAM,CAAC,MAAM,CAAC,UAAS,KAAK;wBAC/C,OAAO,KAAK,CAAC,kBAAkB,CAAC,CAAC,YAAY,CAAC,IAAI,cAAc,IAAI,KAAK,CAAC,QAAQ,CAAC,IAAI,GAAG,CAAC;oBAC5F,CAAC,CAAC,CAAC;oBAEH,IAAI,aAAa,CAAC,MAAM,IAAI,CAAC,EAAE;wBAC7B,KAAK,CAAC,UAAU,GAAG,aAAa,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC;qBAChD;iBACH;qBAAO;oBACN,IAAI,OAAO,GAAG,KAAI,CAAC,2BAA2B,CAAC,MAAM,EAAE,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,cAAc,CAAC,CAAC;oBACxF,IAAI,OAAO,CAAC,MAAM,IAAI,CAAC,EAAE;wBACvB,KAAK,CAAC,UAAU,GAAG,OAAO,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC;qBAC1C;iBACH;gBAED,IAAI,iBAAiB,GAAG,KAAI,CAAC,2BAA2B,CAAC,MAAM,EAAE,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,cAAc,CAAC,CAAC;gBACnG,IAAI,iBAAiB,CAAC,MAAM,IAAI,CAAC,EAAE;oBACjC,KAAK,CAAC,YAAY,GAAG,iBAAiB,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC;iBACpD;gBAED,IAAG,KAAI,CAAC,eAAe,CAAC,MAAM,GAAG,CAAC,EAAC;oBACjC,IAAI,IAAI,GAAG,KAAI,CAAC,eAAe,CAAC,MAAM,CAAC,WAAC,IAAI,QAAC,CAAC,QAAQ,CAAC,IAAI,KAAK,CAAC,IAAI,CAAC,QAAQ,CAAC,EAAnC,CAAmC,CAAC,CAAC;oBACjF,IAAG,IAAI,CAAC,MAAM,GAAG,CAAC,EAAC;wBAClB,KAAK,CAAC,IAAI,CAAC,YAAY,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC;wBAC9C,KAAK,CAAC,IAAI,CAAC,YAAY,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC;wBAC9C,KAAK,CAAC,IAAI,CAAC,OAAO,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC;qBACrC;iBACD;YAEJ,CAAC,EACD,aAAG;gBACD,KAAI,CAAC,QAAQ,CAAC,YAAY,CAAE,qDAAqD,EAAE,OAAO,EAAE,cAAc,CAAC,CAAC;YAC9G,CAAC,EACD;YAEA,CAAC,CACF,CAAC;QACN,CAAC;IAlGE,CAAC;IAEJ,uCAAQ,GAAR;QAAA,iBAKC;QAJC,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,SAAS,CAAC,gBAAM;YAChC,KAAI,CAAC,gBAAgB,GAAG,MAAM,CAAC,UAAU,CAAC,CAAC;YAC3C,KAAI,CAAC,UAAU,CAAC,MAAM,CAAC,YAAY,CAAC,EAAE,MAAM,CAAC,QAAQ,CAAC,CAAC,CAAC;QAC1D,CAAC,CAAC,CAAC;IACL,CAAC;IAED,0CAAW,GAAX;IAEA,CAAC;IAED,yCAAU,GAAV,UAAW,UAAiB,EAAE,MAAc;QAC1C,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC;QAClC,IAAI,CAAC,YAAY,CAAC,UAAU,EAAE,MAAM,CAAC,CAAC;QACtC,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC;QAC1C,IAAI,CAAC,cAAc,GAAG,UAAU,CAAC;QACjC,IAAI,CAAC,UAAU,GAAG,MAAM,CAAC;QAEzB,IAAI,IAAI,CAAC,aAAa,CAAC,WAAW,CAAC,oBAAoB,IAAI,SAAS,EAAE;YACpE,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,aAAa,CAAC,WAAW,CAAC,oBAAoB,CAAC;SAC5E;QACD,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,aAAa,CAAC,WAAW,CAAC,CAAC;IAClD,CAAC;IAED,yCAAU,GAAV,UAAW,MAAM;QACf,IAAI,EAAE,GAAG,sMAAsM,CAAC;QAChN,IAAG,MAAM,CAAC,SAAS,IAAG,CAAC,IAAI,MAAM,CAAC,YAAY,IAAI,EAAE;eACjD,MAAM,CAAC,QAAQ,IAAI,EAAE,IAAI,CAAC,MAAM,CAAC,YAAY,IAAI,SAAS,IAAI,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,YAAY,CAAC,IAAI,EAAE,CAAC,EAAC;YAC1G,IAAG,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,MAAM,CAAC,QAAQ,EAAE,EAAC;gBAC1C,IAAI,CAAC,aAAa,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,MAAM,CAAC,QAAQ,EAAE,CAAC,CAAC,SAAS,CAAC,cAAI;oBAC9E,IAAI,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC,OAAO,CAAC,aAAa,CAAC,CAAC,CAAC;oBAC3D,IAAI,CAAC,QAAQ,CAAC,GAAG,MAAM,CAAC,QAAQ,EAAE,CAAC;oBACnC,YAAY,CAAC,OAAO,CAAC,aAAa,EAAE,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,CAAC;gBAC5D,CAAC,CAAC,CAAC;aACJ;SACF;IACH,CAAC;IA8DD,uCAAQ,GAAR,UAAS,MAAM;QACb,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,IAAI,CAAC,cAAc,EAAE,IAAI,CAAC,gBAAgB,EAAE,MAAM,EAAE,MAAM,CAAE,CAAC,CAAC;IACtF,CAAC;IAED,0DAA2B,GAA3B,UAA4B,MAAU,EAAE,MAAa,EAAE,UAAiB;QACtE,IAAI,QAAQ,GAAG,MAAM,CAAC,MAAM,CAAC,UAAS,KAAK;YACzC,OAAO,KAAK,CAAC,EAAE,IAAI,MAAM,IAAI,KAAK,CAAC,kBAAkB,CAAC,CAAC,YAAY,CAAC,IAAI,UAAU,CAAC;QACpF,CAAC,CAAC,CAAC;QACH,OAAO,QAAQ,CAAC;IACnB,CAAC;IAGD,2CAAY,GAAZ;QAAA,iBA2BC;QA1BC,IAAI,MAAM,GAAG,GAAG,CAAC;QACjB,IAAG,OAAO,KAAK,IAAI,CAAC,IAAI,CAAC,kBAAkB,CAAC,CAAC,UAAU,CAAC,IAAI,QAAQ,KAAK,IAAI,CAAC,IAAI,CAAC,kBAAkB,CAAC,CAAC,UAAU,CAAC,EAAE;YAChH,MAAM,GAAG,GAAG,CAAC;YACb,IAAI,IAAI,CAAC,IAAI,CAAC,2BAA2B,CAAC,IAAI,SAAS,IAAI,IAAI,CAAC,IAAI,CAAC,2BAA2B,CAAC,CAAC,MAAM,GAAG,CAAC,EAAG;gBAC7G,IAAI,iCAAiC,GAAG,IAAI,CAAC,IAAI,CAAC,2BAA2B,CAAC,CAAC,MAAM,CAAC,WAAC,IAAI,QAAC,CAAC,gBAAgB,CAAC,UAAU,IAAI,KAAI,CAAC,cAAc,EAApD,CAAoD,CAAC,CAAC;gBACjJ,IAAG,iCAAiC,CAAC,MAAM,GAAG,CAAC,EAAE;oBAC/C,IAAM,SAAS,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,yBAAyB,EAAE;wBAC5D,KAAK,EAAE,OAAO;wBACd,IAAI,EAAE,EAAC,OAAO,EAAE,IAAI,EAAC;qBACtB,CAAC,CAAC;oBAEH,SAAS,CAAC,WAAW,EAAE,CAAC,SAAS,CAAC,gBAAM;wBACtC,IAAI,MAAM,CAAC,OAAO,IAAI,KAAK,EAAC;4BAC1B,KAAI,CAAC,aAAa,CAAC,MAAM,CAAC,CAAC;yBAC5B;oBACH,CAAC,CAAC,CAAC;iBACJ;qBAAM;oBACL,IAAI,CAAC,aAAa,CAAC,MAAM,CAAC,CAAC;iBAC5B;aACF;iBAAM;gBACL,IAAI,CAAC,aAAa,CAAC,MAAM,CAAC,CAAC;aAC5B;SACH;aAAM,IAAI,QAAQ,KAAK,IAAI,CAAC,IAAI,CAAC,kBAAkB,CAAC,CAAC,UAAU,CAAC,EAAE;YACjE,MAAM,GAAG,GAAG,CAAC;YACb,IAAI,CAAC,aAAa,CAAC,MAAM,CAAC,CAAC;SAC5B;IACJ,CAAC;IAED,yCAAU,GAAV,UAAW,IAAI,EAAE,MAAM;QACrB,IAAI,KAAK,GAAG,IAAI,CAAC;QACjB,KAAK,CAAC,QAAQ,GAAG,IAAI,CAAC;QACtB,KAAK,CAAC,eAAe,GAAG,wDAAwD,CAAC;IACnF,CAAC;IAED,4CAAa,GAAb,UAAc,KAAK;QAAnB,iBAUC;QATC,IAAI,CAAC,aAAa,CAAC,aAAa,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE,IAAI,CAAC,cAAc,EAAE,IAAI,CAAC,UAAU,EAAE,IAAI,CAAC,UAAU,EAAE,IAAI,CAAC,YAAY,CAAC,CAAC,SAAS,CAAC,aAAG;YACrI,KAAI,CAAC,UAAU,CAAC,KAAI,CAAC,cAAc,EAAG,KAAI,CAAC,UAAU,CAAC,CAAC;YACvD,KAAI,CAAC,oBAAoB,GAAG,CAAC,KAAI,CAAC,oBAAoB,CAAC;YACvD,KAAI,CAAC,QAAQ,CAAC,YAAY,CAAE,0BAA0B,EAAE,OAAO,EAAE,gBAAgB,CAAC,CAAC;QACrF,CAAC,EACD,aAAG;YACD,KAAI,CAAC,QAAQ,CAAC,YAAY,CAAE,0BAA0B,EAAE,OAAO,EAAE,cAAc,CAAC,CAAC;QACnF,CAAC,CACF,CAAC;IACJ,CAAC;IAED,6CAAc,GAAd;QACE,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,SAAS,EAAE,IAAI,CAAC,cAAc,EAAE,IAAI,CAAC,gBAAgB,CAAC,CAAC,CAAC;IAChF,CAAC;IAED,yCAAU,GAAV;QAAA,iBAiBC;QAhBC,IAAM,YAAY,GAAG,IAAI,iEAAe,EAAE,CAAC;QAC3C,YAAY,CAAC,KAAK,GAAG,OAAO,CAAC;QAC7B,YAAY,CAAC,SAAS,GAAG,OAAO,CAAC;QACjC,YAAY,CAAC,SAAS,GAAG,IAAI,CAAC;QAC9B,YAAY,CAAC,IAAI,GAAG;YAChB,UAAU,EAAE,IAAI,CAAC,cAAc;YAC/B,MAAM,EAAE,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC;YACvB,MAAM,EAAG,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC;SAC/B,CAAC;QACF,IAAM,cAAc,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,wEAAe,EAAE,YAAY,CAAC,CAAC;QAEvE,cAAc,CAAC,WAAW,EAAE,CAAC,SAAS,CAAC,cAAI;YACzC,IAAG,IAAI,IAAI,SAAS,EAAE;gBACpB,KAAI,CAAC,UAAU,CAAC,IAAI,CAAC,UAAU,EAAG,IAAI,CAAC,MAAM,CAAC,CAAC;aAChD;QACH,CAAC,CAAC,CAAC;IACL,CAAC;IAED,4CAAa,GAAb;QACE,IAAM,YAAY,GAAG,IAAI,iEAAe,EAAE,CAAC;QAC3C,YAAY,CAAC,KAAK,GAAG,OAAO,CAAC;QAC7B,YAAY,CAAC,SAAS,GAAG,OAAO,CAAC;QACjC,YAAY,CAAC,SAAS,GAAG,IAAI,CAAC;QAC9B,YAAY,CAAC,IAAI,GAAG;YAChB,UAAU,EAAE,IAAI,CAAC,cAAc;YAC/B,MAAM,EAAE,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC;YACvB,MAAM,EAAG,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC;SAC/B,CAAC;QACF,IAAM,cAAc,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,8EAAiB,EAAE,YAAY,CAAC,CAAC;QAEzE,cAAc,CAAC,WAAW,EAAE,CAAC,SAAS,CAAC,cAAI,IAAK,CAAC,CAAC,CAAC;IACrD,CAAC;IAED,gDAAiB,GAAjB;QACE,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,MAAM,EAAC,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC;IACjD,CAAC;IAED,2CAAY,GAAZ;QACE,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC;IACnC,CAAC;IAED,0CAAW,GAAX;QACE,IAAI,CAAC,aAAa,CAAC,MAAM,CAAC,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;QACvD,IAAI,CAAC,aAAa,CAAC,WAAW,CAAC,SAAS,GAAG,CAAC,CAAC;QAC7C,IAAI,CAAC,aAAa,CAAC,WAAW,CAAC,QAAQ,GAAG,EAAE,CAAC;QAC7C,IAAI,CAAC,aAAa,CAAC,WAAW,CAAC,YAAY,GAAG,EAAE,CAAC;QACjD,IAAI,CAAC,aAAa,CAAC,WAAW,CAAC,YAAY,GAAG,SAAS,CAAC;QACxD,IAAI,CAAC,aAAa,CAAC,WAAW,CAAC,oBAAoB,GAAG,EAAE,CAAC;QACzD,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC;IAClC,CAAC;IAjPU,oBAAoB;QALhC,+DAAS,CAAC;YACT,QAAQ,EAAE,kBAAkB;YAC5B,gIAA4C;;SAE7C,CAAC;+EAwB2B,8DAAc,EAA0B,4EAAoB;YACrE,sDAAM,EAAkB,2DAAS;YAC7B,4DAAW,EAAoB,2FAAoB;OAzB9D,oBAAoB,CA2PhC;IAAD,2BAAC;CAAA;AA3PgC;AAiQjC;IAEE,mCACS,SAAkD,EACzB,IAAS;QADlC,cAAS,GAAT,SAAS,CAAyC;QACzB,SAAI,GAAJ,IAAI,CAAK;IAAG,CAAC;IAE/C,+CAAW,GAAX,UAAY,OAAO;QACjB,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,EAAC,SAAS,EAAE,OAAO,EAAC,CAAC,CAAC;IAC7C,CAAC;IARU,yBAAyB;QAJrC,+DAAS,CAAC;YACT,QAAQ,EAAE,2BAA2B;YACrC,sIAA6C;SAC9C,CAAC;QAKG,6GAAM,CAAC,iEAAe,CAAC;+EADN,8DAAY;OAHrB,yBAAyB,CAUrC;IAAD,gCAAC;CAAA;AAVqC;;;;;;;;;;;;AClRtC,+DAA+D,+K;;;;;;;;;;;ACA/D,0D;;;;;;;;;;;;;;;;;ACAkD;AAOlD;IAEE;IAAgB,CAAC;IAEjB,4CAAQ,GAAR;IACA,CAAC;IALU,yBAAyB;QALrC,+DAAS,CAAC;YACT,QAAQ,EAAE,uBAAuB;YACjC,4IAAiD;;SAElD,CAAC;;OACW,yBAAyB,CAOrC;IAAD,gCAAC;CAAA;AAPqC;;;;;;;;;;;;;;;;;;;;ACPG;AACc;AAEoC;AAE3F,IAAM,MAAM,GAAW;IACrB;QACE,IAAI,EAAC,EAAE;QACP,SAAS,EAAE,wGAAyB;KACrC;CACF,CAAC;AAMF;IAAA;IAAiC,CAAC;IAArB,iBAAiB;QAJ7B,8DAAQ,CAAC;YACR,OAAO,EAAE,CAAC,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;YACxC,OAAO,EAAE,CAAC,4DAAY,CAAC;SACxB,CAAC;OACW,iBAAiB,CAAI;IAAD,wBAAC;CAAA;AAAJ;;;;;;;;;;;;;;;;;;;;;AChBW;AACM;AAEW;AACkC;AAS5F;IAAA;IAA0B,CAAC;IAAd,UAAU;QAPtB,8DAAQ,CAAC;YACR,YAAY,EAAE,CAAC,wGAAyB,CAAC;YACzC,OAAO,EAAE;gBACP,4DAAY;gBACZ,sEAAiB;aAClB;SACF,CAAC;OACW,UAAU,CAAI;IAAD,iBAAC;CAAA;AAAJ;;;;;;;;;;;;;ACbvB;AAAA;AAAA,gFAAgF;AAChF,0EAA0E;AAC1E,gEAAgE;AAEzD,IAAM,WAAW,GAAG;IACzB,UAAU,EAAE,IAAI;CACjB,CAAC;AAEF;;;;;;GAMG;AACH,mEAAmE;;;;;;;;;;;;;ACfnE;AAAA;AAAA;AAAA;AAAA;AAA+C;AAC4B;AAE9B;AACY;AAEzD,IAAI,qEAAW,CAAC,UAAU,EAAE;IAC1B,oEAAc,EAAE,CAAC;CAClB;AAED,gGAAsB,EAAE,CAAC,eAAe,CAAC,yDAAS,CAAC;KAChD,KAAK,CAAC,aAAG,IAAI,cAAO,CAAC,KAAK,CAAC,GAAG,CAAC,EAAlB,CAAkB,CAAC,CAAC","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { Injectable } from '@angular/core';\nimport { Router, CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot } from '@angular/router';\n\n@Injectable({providedIn: \"root\"})\n\nexport class AuthGuard implements CanActivate {\n\n    constructor(private router: Router) { }\n\n    canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot) {\n        if (localStorage.getItem('currentUser')) {\n            // logged in so return true\n            return true;\n        }\n\n        // not logged in so redirect to login page with the return url\n        this.router.navigate(['/login']);\n        //, { queryParams: { returnUrl: state.url }}\n        return false;\n    }\n}\n","export * from './auth.guard';","import { Injectable } from '@angular/core';\nimport { Router, NavigationStart } from '@angular/router';\nimport { Observable, Subject } from 'rxjs';\n\n@Injectable()\nexport class AlertService {\n    private subject = new Subject<any>();\n    private keepAfterNavigationChange = false;\n\n    constructor(private router: Router) {\n        // clear alert message on route change\n        router.events.subscribe(event => {\n            if (event instanceof NavigationStart) {\n                if (this.keepAfterNavigationChange) {\n                    // only keep for a single location change\n                    this.keepAfterNavigationChange = false;\n                } else {\n                    // clear alert\n                    this.subject.next();\n                }\n            }\n        });\n    }\n\n    success(message: string, keepAfterNavigationChange = false) {\n        this.keepAfterNavigationChange = keepAfterNavigationChange;\n        this.subject.next({ type: 'success', text: message });\n    }\n\n    error(message: string, keepAfterNavigationChange = false) {\n        this.keepAfterNavigationChange = keepAfterNavigationChange;\n        this.subject.next({ type: 'error', text: message });\n    }\n\n    getMessage(): Observable<any> {\n        return this.subject.asObservable();\n    }\n}","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { UserEntity } from '../_models/UserEntity';\r\nimport { map } from 'rxjs/operators';\r\nimport { MatSnackBarComponent } from '../service/mat-snack-bar/mat-snack-bar.component';\r\n\r\n\r\n@Injectable()\r\nexport class AuthenticationService {\r\n\r\n  user: UserEntity;\r\n  //API_URL: string = \"http://ec2-18-220-6-166.us-east-2.compute.amazonaws.com:8080/\";\r\n  //API_URL: string = \"http://localhost:8080/\";\r\n   //API_URL: string = \"http://cdfw-alb-prod-775994205.us-west-1.elb.amazonaws.com:9301/\";\r\n   API_URL: string = \"https://prod.cdfw-sbb.com/\";\r\n   //API_URL: string = \"https://dev.cdfw-sbb.com/\";\r\n\r\n  constructor(private http: HttpClient, private snackBar: MatSnackBarComponent) { }\r\n\r\n  login(username: string, password: string) {\r\n    var self = this;\r\n    return this.http.post<UserEntity>(this.API_URL + 'authenticateUser', { username: username, password: password }).\r\n      toPromise()\r\n      .then(function (response) {\r\n        if (response) {\r\n          localStorage.setItem('currentUser', JSON.stringify(response));\r\n          return true;\r\n        }\r\n        return false;\r\n      }, function (error) {\r\n        return error;\r\n      });\r\n\r\n  }\r\n\r\n  resetPassword(username: string, password: string, newpassword: string) {\r\n    var self = this;\r\n    return this.http.post<UserEntity>(this.API_URL + 'resetPassword', { username: username, password: password, newpassword: newpassword });\r\n  }\r\n\r\n  logout() {\r\n    localStorage.removeItem('currentUser');\r\n    localStorage.removeItem('csServiceMatrix');\r\n    sessionStorage.removeItem('cslcfilters');\r\n  }\r\n\r\n}\r\n","import { HttpEvent,\r\n         HttpInterceptor,\r\n         HttpHandler,\r\n         HttpRequest,\r\n         HttpResponse,\r\n         HttpErrorResponse} from '@angular/common/http';\r\nimport { Observable, throwError } from 'rxjs';\r\nimport { catchError } from 'rxjs/operators';\r\nimport { MatSnackBarComponent } from '../service/mat-snack-bar/mat-snack-bar.component';\r\nimport { Injectable } from '@angular/core';\r\n\r\n@Injectable()\r\nexport class HttpErrorInterceptor  implements HttpInterceptor {\r\n\r\nconstructor( private snackBar: MatSnackBarComponent) {\r\n\r\n}\r\n\r\n  intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>>{\r\n    return next.handle(request)\r\n               .pipe(\r\n                 catchError( (error: HttpErrorResponse) => {\r\n                    let errMsg = '';\r\n                    // Client Side Error\r\n                    if (error.error instanceof ErrorEvent) {\r\n                      errMsg = `Error: ${error.error.message}`;\r\n                    }\r\n                    else {  // Server Side Error\r\n                      errMsg = `Error Code: ${error.status},  Message: ${error.message}`;\r\n                    }\r\n                    // show error snackbar with red background\r\n\t          \t      this.snackBar.openSnackBar('We are experiencing technical difficulties. Please try again later.','Close','red-snackbar');\r\n                    //this.snackBar.openSnackBar(errMsg,'Close','red-snackbar');\r\n                    // return an observable\r\n                    return throwError(errMsg);\r\n                  })\r\n               )\r\n  }\r\n}\r\n","import {Injectable} from '@angular/core';\r\nimport {HttpEvent, HttpInterceptor, HttpHandler, HttpRequest} from '@angular/common/http';\r\nimport {Observable} from \"rxjs\";\r\nimport { NgxSpinnerService } from 'ngx-spinner';\r\nimport { tap, finalize } from 'rxjs/operators';\r\n\r\n@Injectable()\r\nexport class AuthInterceptor implements HttpInterceptor {\r\n  count = 0;\r\n  constructor(private spinner: NgxSpinnerService) { }\r\n  intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n    var user = JSON.parse(localStorage.getItem('currentUser'));\r\n    req = req.clone({\r\n        setHeaders: {\r\n            Authorization: 'Bearer '+ (user !== null ? user.userToken : '')\r\n        }\r\n    });\r\n\r\n   setTimeout(() => this.spinner.show());\r\n   //console.log(`Intercepting requests --> ${this.count}`);\r\n    this.count++;\r\n    //console.log(`Incrementing count --> ${this.count}`);\r\n    return next.handle(req)\r\n            .pipe ( tap (\r\n                    event => console.log(event),\r\n                    error => console.log( error )\r\n                ), finalize(() => {\r\n                    //console.log(`Decrementing count --> ${this.count}`);\r\n                    this.count--;\r\n                    if ( this.count == 0 ) this.spinner.hide ()\r\n                })\r\n            );\r\n          //  return  next.handle(req);\r\n  }\r\n}\r\n","export * from './alert.service';\r\nexport * from './authentication.service';\r\nexport * from './user.service';","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\n\r\nimport { User } from '../_models';\r\n\r\n@Injectable()\r\nexport class UserService {\r\n    constructor(private http: HttpClient) { }\r\n\r\n    get user():Object{\r\n      return JSON.parse(localStorage.getItem('currentUser'));\r\n    }\r\n\r\n    get userId():number{\r\n      return JSON.parse(localStorage.getItem('currentUser'))['id'];\r\n    }\r\n\r\n    getSelectedRegionObject(selectedRegion:string): any {\r\n      if(localStorage.getItem('currentUser') != null || localStorage.getItem('currentUser') != undefined){\r\n        let userRegionMapping = this.user['userRegionMappingsById'];\r\n        for(let userRegion of userRegionMapping) {\r\n          if(selectedRegion === userRegion['regionByRegionId']['regionName']){\r\n            return userRegion['regionByRegionId'];\r\n          }\r\n        }\r\n      }\r\n      return null;\r\n    }\r\n\r\n    get userRole():string{\r\n      return JSON.parse(localStorage.getItem('currentUser'))['userRoleByRoleId']['roleName'];\r\n    }\r\n\r\n    getUser() {\r\n        return this.http.get<User[]>(`/users`);\r\n    }\r\n\r\n    getById(id: number) {\r\n        return this.http.get(`/users/` + id);\r\n    }\r\n\r\n    register(user: User) {\r\n        return this.http.post(`/users/register`, user);\r\n    }\r\n\r\n    update(user: User) {\r\n        return this.http.put(`/users/` + user.id, user);\r\n    }\r\n\r\n    delete(id: number) {\r\n        return this.http.delete(`/users/` + id);\r\n    }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { UserRegistrationComponent} from './user/user-registration/user-registration.component';\r\nimport { MatrixDetailsComponent} from './service/matrix-details/matrix-details.component';\r\nimport { LoginFormComponent } from './login/login-form/login-form.component';\r\nimport { TaskDetailsComponent } from './service/task-details/task-details.component';\r\nimport { AuthGuard } from './_guards';\r\nimport { LaborClassComponent } from './current-state/labor-class/labor-class.component';\r\nimport { LaborHourDetailsComponent } from './current-state/labor-hour-details/labor-hour-details.component';\r\n\r\n\r\nconst routes: Routes = [\r\n  { path: 'user', component: UserRegistrationComponent, canActivate: [AuthGuard] },\r\n  { path: 'service/:regionName/:regionId', component:  MatrixDetailsComponent, canActivate: [AuthGuard]},\r\n  { path: ':regionName/:regionId/task/:taskId', component:  TaskDetailsComponent, canActivate: [AuthGuard]},\r\n  { path: 'currentState/:regionId', component:  LaborClassComponent, canActivate: [AuthGuard]},\r\n  { path: 'csLaborHours/:regionId/:laborClassName', component:  LaborHourDetailsComponent, canActivate: [AuthGuard]},\r\n  { path: 'login', component:  LoginFormComponent},\r\n  { path: '', component:  LoginFormComponent},\r\n  // otherwise redirect to home\r\n    { path: '**', redirectTo: '' }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","module.exports = \".flex-container {\\r\\n  display:flex;\\r\\n  /*background-color: green;*/\\r\\n  flex-direction: column;\\r\\n  justify-content: center;\\r\\n  align-content: center;\\r\\n}\\r\\n\\r\\n.vertical-middle{\\r\\n  margin-top: auto;\\r\\n  margin-bottom: auto;\\r\\n}\\r\\n\\r\\n.fill-remaining-space {\\r\\n  /* This fills the remaining space, by using flexbox.\\r\\n     Every toolbar row uses a flexbox row layout. */\\r\\n  flex: 1 1 auto;\\r\\n  text-align: center;\\r\\n}\\r\\n\\r\\n.main-content {\\r\\n  width:100%;\\r\\n  /*flex: 1 1 auto;*/\\r\\n}\\r\\n\\r\\nfooter\\r\\n {\\r\\n   position: fixed;\\r\\n   left: 0;\\r\\n   bottom: 0;\\r\\n   width: 100%;\\r\\n   text-align:center;\\r\\n   background-color: #ccc;\\r\\n   font-size: 14px;\\r\\n   padding-top: 3px;\\r\\n   padding-bottom: 3px\\r\\n }\\r\\n\\r\\n.fake-link {\\r\\n     color: blue;\\r\\n     text-decoration: underline;\\r\\n     cursor: pointer;\\r\\n }\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvYXBwLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxZQUFZO0VBQ1osMkJBQTJCO0VBQzNCLHNCQUFzQjtFQUN0Qix1QkFBdUI7RUFDdkIscUJBQXFCO0FBQ3ZCOztBQUVBO0VBQ0UsZ0JBQWdCO0VBQ2hCLG1CQUFtQjtBQUNyQjs7QUFFQTtFQUNFO21EQUNpRDtFQUNqRCxjQUFjO0VBQ2Qsa0JBQWtCO0FBQ3BCOztBQUVBO0VBQ0UsVUFBVTtFQUNWLGtCQUFrQjtBQUNwQjs7QUFFQTs7R0FFRyxlQUFlO0dBQ2YsT0FBTztHQUNQLFNBQVM7R0FDVCxXQUFXO0dBQ1gsaUJBQWlCO0dBQ2pCLHNCQUFzQjtHQUN0QixlQUFlO0dBQ2YsZ0JBQWdCO0dBQ2hCO0NBQ0Y7O0FBRUE7S0FDSSxXQUFXO0tBQ1gsMEJBQTBCO0tBQzFCLGVBQWU7Q0FDbkIiLCJmaWxlIjoic3JjL2FwcC9hcHAuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi5mbGV4LWNvbnRhaW5lciB7XHJcbiAgZGlzcGxheTpmbGV4O1xyXG4gIC8qYmFja2dyb3VuZC1jb2xvcjogZ3JlZW47Ki9cclxuICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xyXG4gIGp1c3RpZnktY29udGVudDogY2VudGVyO1xyXG4gIGFsaWduLWNvbnRlbnQ6IGNlbnRlcjtcclxufVxyXG5cclxuLnZlcnRpY2FsLW1pZGRsZXtcclxuICBtYXJnaW4tdG9wOiBhdXRvO1xyXG4gIG1hcmdpbi1ib3R0b206IGF1dG87XHJcbn1cclxuXHJcbi5maWxsLXJlbWFpbmluZy1zcGFjZSB7XHJcbiAgLyogVGhpcyBmaWxscyB0aGUgcmVtYWluaW5nIHNwYWNlLCBieSB1c2luZyBmbGV4Ym94LlxyXG4gICAgIEV2ZXJ5IHRvb2xiYXIgcm93IHVzZXMgYSBmbGV4Ym94IHJvdyBsYXlvdXQuICovXHJcbiAgZmxleDogMSAxIGF1dG87XHJcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG59XHJcblxyXG4ubWFpbi1jb250ZW50IHtcclxuICB3aWR0aDoxMDAlO1xyXG4gIC8qZmxleDogMSAxIGF1dG87Ki9cclxufVxyXG5cclxuZm9vdGVyXHJcbiB7XHJcbiAgIHBvc2l0aW9uOiBmaXhlZDtcclxuICAgbGVmdDogMDtcclxuICAgYm90dG9tOiAwO1xyXG4gICB3aWR0aDogMTAwJTtcclxuICAgdGV4dC1hbGlnbjpjZW50ZXI7XHJcbiAgIGJhY2tncm91bmQtY29sb3I6ICNjY2M7XHJcbiAgIGZvbnQtc2l6ZTogMTRweDtcclxuICAgcGFkZGluZy10b3A6IDNweDtcclxuICAgcGFkZGluZy1ib3R0b206IDNweFxyXG4gfVxyXG5cclxuIC5mYWtlLWxpbmsge1xyXG4gICAgIGNvbG9yOiBibHVlO1xyXG4gICAgIHRleHQtZGVjb3JhdGlvbjogdW5kZXJsaW5lO1xyXG4gICAgIGN1cnNvcjogcG9pbnRlcjtcclxuIH1cclxuIl19 */\"","module.exports = \"<div class=\\\"flex-container\\\">\\r\\n\\r\\n  <div style =\\\"width:100%; background-color: #1f4e79; color: white;\\\">\\r\\n    <!-- <mat-toolbar color=\\\"primary\\\"> -->\\r\\n      <!-- <div class=\\\"row m-0 w-100 p-2 h-100\\\">\\r\\n        <div class=\\\"col-md-2\\\">\\r\\n            <img src=\\\"../assets/SBB.png\\\" alt=\\\"\\\" class=\\\"logo\\\">\\r\\n        </div>\\r\\n        <div class=\\\"col-md-8 text-center vertical-middle text-bold\\\">\\r\\n          {{title}} {{getDataType()}}\\r\\n        </div>\\r\\n        <div class=\\\"col-md-2 text-right vertical-middle\\\">\\r\\n            <img src=\\\"../assets/CDFW.png\\\" alt=\\\"\\\">\\r\\n        </div>\\r\\n      </div> -->\\r\\n      <div class=\\\"row m-0 w-100 p-2 h-100\\\">\\r\\n          <div class=\\\"col-md-3\\\">\\r\\n              <img src=\\\"../assets/cdfw-logo.png\\\" alt=\\\"\\\" class=\\\"logo\\\">\\r\\n          </div>\\r\\n          <div class=\\\"col-md-6 text-center vertical-middle text-bold\\\">\\r\\n            <p class=\\\"mb-0\\\">{{title}} {{getDataType()}}</p>\\r\\n            <p class=\\\"mb-0\\\" style=\\\"color: red; font-weight: bold;\\\" *ngIf=\\\"!production\\\">***Test Environment***</p>\\r\\n          </div>\\r\\n          <div class=\\\"col-md-3 text-right vertical-middle\\\">\\r\\n              <img src=\\\"../assets/SBB.png\\\" alt=\\\"\\\" class=\\\"logo-sbb\\\">\\r\\n          </div>\\r\\n        </div>\\r\\n      <!-- <mat-toolbar-row>\\r\\n        <img src=\\\"../assets/SBB.png\\\" alt=\\\"\\\" class=\\\"logo\\\">\\r\\n        <span class=\\\"fill-remaining-space\\\">\\r\\n           Mission Level Data Collection Tool\\r\\n        </span>\\r\\n        <img src=\\\"../assets/CDFW.png\\\" alt=\\\"\\\">\\r\\n      </mat-toolbar-row> -->\\r\\n    <!-- </mat-toolbar> -->\\r\\n  </div>\\r\\n\\r\\n  <div class = \\\"main-content\\\">\\r\\n    <router-outlet #routerOutlet=\\\"outlet\\\"> </router-outlet>\\r\\n    <ngx-spinner\\r\\n        size = \\\"default\\\"\\r\\n        color = \\\"#fff\\\"\\r\\n        type = \\\"ball-pulse\\\"\\r\\n        fullScreen = \\\"true\\\"\\r\\n        >\\r\\n        <p style=\\\"color: white\\\" > Loading... </p>\\r\\n        </ngx-spinner>\\r\\n  </div>\\r\\n  <div>\\r\\n    <footer flex>\\r\\n      <div class=\\\"footer-copyright py-1 pb-1 text-center\\\">\\r\\n        Please contact the project team at\\r\\n        <a href=\\\"mailto:sbbsupport@wildlife.ca.gov\\\" class=\\\"fake-link\\\">sbbsupport@wildlife.ca.gov</a>\\r\\n        if you need assistance\\r\\n      </div>\\r\\n    </footer>\\r\\n  </div>\\r\\n</div>\\r\\n\"","import { Component } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { UserService } from './_services';\r\nimport { environment } from './../environments/environment';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n  title = 'Service Based Budgeting Project Data Collection Tool';\r\n  production: boolean = environment.production;\r\n\r\n  constructor(private userService:UserService) {}\r\n\r\n  getUserDetails() {\r\n      //this.router.navigate(['/heroes']);\r\n  }\r\n\r\n  getDataType(){\r\n    if(this.userService.user != null){\r\n      if(this.userService.user['dataTypeByDataTypeId']['dataType'] == 'mission'){\r\n        return ' - Mission Level';\r\n      } else if(this.userService.user['dataTypeByDataTypeId']['dataType'] == 'current'){\r\n        return ' - Current State'\r\n      } else if(this.userService.user['dataTypeByDataTypeId']['dataType'] == 'both'){\r\n        return sessionStorage.getItem(\"tool-access\");\r\n      } \r\n    } \r\n    return '';\r\n  }\r\n\r\n}\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\n\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\n\r\nimport { UserModule } from './user/user.module';\r\nimport { ServiceModule } from './service/service.module';\r\nimport { LoginModule } from './login/login.module';\r\n\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\n\r\nimport {\r\n  MatButtonModule, MatCardModule, MatDialogModule, MatInputModule, MatTableModule, MatExpansionModule, MatTabsModule, MatSelectModule, MatAutocompleteModule,\r\n  MatToolbarModule, MatMenuModule, MatIconModule, MatProgressSpinnerModule, MatSidenavModule, MatSnackBarModule, MatSortModule, MatPaginatorModule\r\n} from '@angular/material';\r\n\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { MatTooltipModule } from '@angular/material/tooltip';\r\nimport { NgxSpinnerModule } from 'ngx-spinner';\r\n\r\nimport { FlexLayoutModule } from \"@angular/flex-layout\";\r\nimport { InputsComponent } from './service/inputs/inputs.component';\r\nimport { AuthenticationService } from './_services/authentication.service'\r\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { UserService } from './_services';\r\nimport { DataTableModule } from 'primeng/primeng';\r\nimport { TableModule } from 'primeng/table';\r\nimport { DropdownModule } from 'primeng/dropdown';\r\n\r\nimport 'hammerjs';\r\nimport { HttpErrorInterceptor } from './_services/error-interceptor';\r\nimport { MatSnackBarComponent } from './service/mat-snack-bar/mat-snack-bar.component';\r\nimport { AuthInterceptor } from './_services/http.interceptor';\r\nimport { ResestPasswordDialog, DataTypeSelectionDialog } from './login/login-form/login-form.component';\r\nimport { FeedbackComponent } from './service/feedback/feedback.component';\r\nimport { LaborClassComponent } from './current-state/labor-class/labor-class.component';\r\nimport { LaborHourDetailsComponent } from './current-state/labor-hour-details/labor-hour-details.component';\r\nimport { LaborClassInputsComponent, DeleteCSInputDialog, ApproveCSInputDialog, EditCSInputDialog } from './current-state/labor-class-inputs/labor-class-inputs.component';\r\nimport { LaborClassTasksComponent, AddCSInputDialog, CSInputTaskExistDialog } from './current-state/labor-class-tasks/labor-class-tasks.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    MatSnackBarComponent,\r\n    ResestPasswordDialog,\r\n    DataTypeSelectionDialog,\r\n    AddCSInputDialog,\r\n    EditCSInputDialog,\r\n    DeleteCSInputDialog,\r\n    ApproveCSInputDialog,\r\n    CSInputTaskExistDialog,\r\n    LaborClassComponent,\r\n    LaborHourDetailsComponent,\r\n    LaborClassInputsComponent,\r\n    LaborClassTasksComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    AppRoutingModule,\r\n    HttpClientModule,\r\n    //material\r\n\r\n    BrowserAnimationsModule,\r\n    MatFormFieldModule,\r\n    MatToolbarModule,\r\n    MatButtonModule,\r\n    MatCardModule,\r\n    MatInputModule,\r\n    MatDialogModule,\r\n    MatTableModule,\r\n    MatMenuModule,\r\n    MatIconModule,\r\n    MatProgressSpinnerModule,\r\n    MatSidenavModule,\r\n    MatTooltipModule,\r\n    MatTabsModule,\r\n    MatSelectModule,\r\n    MatAutocompleteModule,\r\n    FlexLayoutModule,\r\n    UserModule,\r\n    ServiceModule,\r\n    LoginModule,\r\n    MatSnackBarModule,\r\n    NgxSpinnerModule,\r\n    MatPaginatorModule,\r\n    MatSortModule,\r\n    MatExpansionModule,\r\n    DataTableModule,\r\n    TableModule,\r\n    DropdownModule\r\n  ],\r\n  providers: [{\r\n    provide: HTTP_INTERCEPTORS,\r\n    useClass: HttpErrorInterceptor,\r\n    multi: true,\r\n  },\r\n  {\r\n    provide: HTTP_INTERCEPTORS,\r\n    useClass: AuthInterceptor,\r\n    multi: true,\r\n  },\r\n    AuthenticationService, UserService, MatSnackBarComponent],\r\n  bootstrap: [AppComponent],\r\n  entryComponents: [InputsComponent, ResestPasswordDialog, FeedbackComponent, DataTypeSelectionDialog, AddCSInputDialog, EditCSInputDialog, DeleteCSInputDialog, ApproveCSInputDialog, CSInputTaskExistDialog]\r\n})\r\nexport class AppModule { }\r\n","module.exports = \"<h1 mat-dialog-title>Approve Input</h1>\\r\\n<div mat-dialog-content>\\r\\n    <p>Are you sure you want to approve below input?</p>\\r\\n    <p>Position Id: {{data.task.positionId}}</p>\\r\\n    <p>Task Id: {{data.task.taskId}}</p>\\r\\n    <p>Input Hours: {{data.task.inputHours}}</p>\\r\\n</div>\\r\\n<div mat-dialog-actions class=\\\"text-center\\\">\\r\\n    <button mat-raised-button (click)=\\\"onNoClick()\\\">Cancel</button>\\r\\n    <button mat-raised-button color=\\\"primary\\\" cdkFocusInitial (click)=\\\"onConfirm()\\\">Confirm</button>\\r\\n</div>\\r\\n\"","module.exports = \"<h1 mat-dialog-title>Delete Input</h1>\\r\\n<div mat-dialog-content>\\r\\n    <p>Are you sure you want to delete below input?</p>\\r\\n    <p>Position Id: {{data.task.positionId}}</p>\\r\\n    <p>Task Id: {{data.task.taskId}}</p>\\r\\n    <p>Input Hours: {{data.task.inputHours}}</p>\\r\\n</div>\\r\\n<div mat-dialog-actions class=\\\"text-center\\\">\\r\\n    <button mat-raised-button (click)=\\\"onNoClick()\\\">Cancel</button>\\r\\n    <button mat-raised-button color=\\\"primary\\\" cdkFocusInitial (click)=\\\"onConfirm()\\\">Confirm</button>\\r\\n</div>\\r\\n\"","module.exports = \"<!-- <h1 mat-dialog-title>Edit Input</h1>\\r\\n<div mat-dialog-content>\\r\\n  <mat-form-field class=\\\"px-1\\\">\\r\\n    <input matInput placeholder=\\\"Position Id\\\" value=\\\"{{data.task.positionId}}\\\" disabled>\\r\\n  </mat-form-field>\\r\\n  <mat-form-field class=\\\"px-1\\\">\\r\\n    <input matInput placeholder=\\\"Task Id\\\" value=\\\"{{data.task.taskId}}\\\" disabled>\\r\\n  </mat-form-field><br>\\r\\n  <mat-form-field class=\\\"px-1\\\">\\r\\n    <input matInput placeholder=\\\"Input Hours\\\" type=\\\"number\\\" [(ngModel)]=\\\"data.task.inputHours\\\">\\r\\n  </mat-form-field>\\r\\n  <mat-form-field class=\\\"px-1\\\">\\r\\n    <textarea matInput placeholder=\\\"Feedback\\\" [(ngModel)]=\\\"data.task.feedback\\\"></textarea>\\r\\n  </mat-form-field>\\r\\n</div>\\r\\n<div mat-dialog-actions class=\\\"text-center\\\">\\r\\n  <button mat-raised-button (click)=\\\"onNoClick()\\\">Cancel</button>\\r\\n  <button mat-raised-button color=\\\"primary\\\" cdkFocusInitial (click)=\\\"onUpdate()\\\">Update</button>\\r\\n</div>  -->\\r\\n\\r\\n\\r\\n<div>\\r\\n  <p style=\\\"font-size: 20px; font-weight: 600; margin-bottom: 0;\\\">{{data.task.serviceMatrixByTaskId.taskName}}({{data.task.taskId}}) - {{data.task.positionId}}</p>\\r\\n  <p style=\\\"font-size: 14px;\\\">{{data.task.serviceMatrixByTaskId.serviceName}} / {{data.task.serviceMatrixByTaskId.program}} / {{data.task.serviceMatrixByTaskId.subProgram}}\\r\\n    /{{data.task.serviceMatrixByTaskId.taskCategory}}\\r\\n  </p>\\r\\n</div>\\r\\n<div class=\\\"pt-4 row\\\">\\r\\n  <div class=\\\"col-12\\\">\\r\\n    <table class=\\\"text-white\\\" style=\\\"background: #1f4e79; height: 80px; width: auto !important; border-collapse: separate; border-spacing: 5px;\\\">\\r\\n      <tr>\\r\\n        <td rowspan=\\\"3\\\" style=\\\"background-color: white;\\\">\\r\\n            <mat-form-field class=\\\"px-1\\\">\\r\\n              <input matInput style=\\\"color:black;\\\" placeholder=\\\"Input Hours\\\" type=\\\"number\\\" [(ngModel)]=\\\"data.task.inputHours\\\">\\r\\n            </mat-form-field>\\r\\n            <mat-form-field class=\\\"px-1\\\">\\r\\n              <textarea matInput placeholder=\\\"Feedback\\\" [(ngModel)]=\\\"data.task.feedback\\\" style=\\\"color: black;\\\"></textarea>\\r\\n            </mat-form-field>\\r\\n          <button mat-raised-button color=\\\"primary\\\"cdkFocusInitial (click)=\\\"onUpdate()\\\" class=\\\"m-1\\\" style=\\\"width: 75px;\\\">Update</button>\\r\\n          <!--<button mat-raised-button color=\\\"primary\\\"cdkFocusInitial (click)=\\\"onValidate()\\\" class=\\\"m-1\\\" style=\\\"width: 75px;\\\">Validate</button>-->\\r\\n            <button mat-raised-button  (click)=\\\"onNoClick()\\\" class=\\\"m-1\\\" style=\\\"width: 75px;\\\">Close</button></td>\\r\\n        <td rowspan=\\\"3\\\" style=\\\"width: 75px;\\\"></td>\\r\\n        <td>Hours bank for the position</td>\\r\\n        <td style=\\\"width: 75px; border-bottom: 1px solid white;\\\">{{data.hoursBank}}</td>\\r\\n      </tr>\\r\\n      <tr>\\r\\n        <td>Total hours allocated</td>\\r\\n        <td style=\\\"border-bottom: 1px solid white;\\\">{{data.hoursEntered+data.task.inputHours-staticInputHours}}</td>\\r\\n      </tr>\\r\\n      <tr>\\r\\n        <td>Hours remaining to be allocated</td>\\r\\n        <td style=\\\"border-bottom: 1px solid white;\\\">{{data.hoursBank-(data.hoursEntered+data.task.inputHours-staticInputHours)}}</td>\\r\\n      </tr>\\r\\n    </table>\\r\\n  </div>\\r\\n</div>\\r\\n<div class=\\\"row pt-3\\\">\\r\\n  <div class=\\\"col-3\\\">\\r\\n    <mat-form-field class=\\\"w-100\\\">\\r\\n      <textarea matInput placeholder=\\\"Description\\\" disabled style=\\\"min-height: 150px; color: #444 !important;\\\">{{data.task.serviceMatrixByTaskId.taskDesc}}</textarea>\\r\\n    </mat-form-field>\\r\\n  </div>\\r\\n  <div class=\\\"col-3\\\">\\r\\n    <mat-form-field class=\\\"w-100\\\">\\r\\n      <textarea matInput placeholder=\\\"Desired Performance\\\" disabled style=\\\"min-height: 150px; color: #444 !important;\\\">{{data.task.serviceMatrixByTaskId.desiredPerf}}</textarea>\\r\\n    </mat-form-field>\\r\\n  </div>\\r\\n  <div class=\\\"col-3\\\">\\r\\n    <mat-form-field class=\\\"w-100\\\">\\r\\n      <textarea matInput placeholder=\\\"Glossary\\\" disabled style=\\\"min-height: 150px; color: #444 !important;\\\">{{data.task.serviceMatrixByTaskId.serviceGlossary}}</textarea>\\r\\n    </mat-form-field>\\r\\n  </div>\\r\\n  <div class=\\\"col-3\\\">\\r\\n    <mat-form-field class=\\\"w-100\\\">\\r\\n      <textarea matInput placeholder=\\\"Additional Budget Factors\\\" disabled style=\\\"min-height: 150px; color: #444 !important;\\\">{{data.task.serviceMatrixByTaskId.addtnlBudgetFator}}</textarea>\\r\\n    </mat-form-field>\\r\\n  </div>\\r\\n</div>\\r\\n\"","module.exports = \".info{\\r\\n    cursor: pointer;\\r\\n    color: #1f4e79;\\r\\n    font-size: 18px;\\r\\n    padding-top: 5px;\\r\\n}\\r\\n\\r\\n.text-primary{\\r\\n    color: #1f4e79 !important;\\r\\n}\\r\\n\\r\\n.mat-form-field-infix { width: auto; }\\r\\n\\r\\n/*table tr td { border: 1px solid black;}*/\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY3VycmVudC1zdGF0ZS9sYWJvci1jbGFzcy1pbnB1dHMvbGFib3ItY2xhc3MtaW5wdXRzLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxlQUFlO0lBQ2YsY0FBYztJQUNkLGVBQWU7SUFDZixnQkFBZ0I7QUFDcEI7O0FBRUE7SUFDSSx5QkFBeUI7QUFDN0I7O0FBRUEsd0JBQXdCLFdBQVcsRUFBRTs7QUFFckMsMENBQTBDIiwiZmlsZSI6InNyYy9hcHAvY3VycmVudC1zdGF0ZS9sYWJvci1jbGFzcy1pbnB1dHMvbGFib3ItY2xhc3MtaW5wdXRzLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuaW5mb3tcclxuICAgIGN1cnNvcjogcG9pbnRlcjtcclxuICAgIGNvbG9yOiAjMWY0ZTc5O1xyXG4gICAgZm9udC1zaXplOiAxOHB4O1xyXG4gICAgcGFkZGluZy10b3A6IDVweDtcclxufVxyXG5cclxuLnRleHQtcHJpbWFyeXtcclxuICAgIGNvbG9yOiAjMWY0ZTc5ICFpbXBvcnRhbnQ7XHJcbn1cclxuXHJcbi5tYXQtZm9ybS1maWVsZC1pbmZpeCB7IHdpZHRoOiBhdXRvOyB9XHJcblxyXG4vKnRhYmxlIHRyIHRkIHsgYm9yZGVyOiAxcHggc29saWQgYmxhY2s7fSovXHJcbiJdfQ== */\"","module.exports = \"<!--<div>\\r\\n<button mat-button (click)=\\\"copyTasks()\\\" color=\\\"primary\\\" matTooltip=\\\"Copy All Tasks\\\" style=\\\"cursor:default;\\\">\\r\\n  <mat-icon>file_copy</mat-icon>\\r\\n  Copy All Tasks\\r\\n</button>\\r\\n<mat-form-field>\\r\\n  <mat-label>Select Position IDs</mat-label>\\r\\n  <mat-select [(ngModel)]=\\\"positions\\\" multiple>\\r\\n    <mat-option style=\\\"min-width:1000px;\\\" *ngFor=\\\"let position of laborMappings\\\" [value]=\\\"position\\\">\\r\\n        {{position.positionId}} | {{position.laborClassName}}\\r\\n    </mat-option>\\r\\n  </mat-select>\\r\\n</mat-form-field>\\r\\n<span *ngIf=\\\"isVaidator\\\" style=\\\"float: right;\\\">\\r\\n  <button id=\\\"valAllTasks\\\" mat-button (click)=\\\"approveAllTasks()\\\" color=\\\"primary\\\" matTooltip=\\\"Validate All Tasks\\\">\\r\\n    <mat-icon>done_all</mat-icon>\\r\\n    Validate All Tasks\\r\\n  </button>\\r\\n</span>\\r\\n</div>-->\\r\\n\\r\\n<table class=\\\"w-100 lcsummary-table\\\">\\r\\n  <tr class=\\\"border-bottom\\\" style=\\\"background-color: #1f4e79; color: white;\\\">\\r\\n    <th></th>\\r\\n    <th style=\\\"width:175px; height: 40px;\\\">Task ID</th>\\r\\n    <th>Task Name</th>\\r\\n    <th style=\\\"width:125px;\\\">Respondent name</th>\\r\\n    <th style=\\\"width:75px;\\\">Status</th>\\r\\n    <th style=\\\"width:100px;\\\">Validated by</th>\\r\\n    <th style=\\\"width:100px;\\\">Last edited by</th>\\r\\n    <th style=\\\"width:60px;\\\">Hours</th>\\r\\n    <th style=\\\"width:200px;\\\">Feedback</th>\\r\\n    <th style=\\\"width:60px;\\\">Actions</th>\\r\\n  </tr>\\r\\n  <tr *ngFor=\\\"let summary of result\\\" class=\\\"border-bottom\\\">\\r\\n    <td>\\r\\n      <i class=\\\"material-icons info text-primary\\\"\\r\\n        title=\\\"{{summary.tasks[0].serviceMatrixByTaskId.serviceName+'/'+summary.tasks[0].serviceMatrixByTaskId.program+'/'+summary.tasks[0].serviceMatrixByTaskId.subProgram+'/'+summary.tasks[0].serviceMatrixByTaskId.taskCategory}}\\\">info</i>\\r\\n    </td>\\r\\n    <td>{{summary.taskId}}</td>\\r\\n    <td>{{summary.tasks[0].serviceMatrixByTaskId.taskName}}</td>\\r\\n    <td colspan=\\\"7\\\">\\r\\n      <table class=\\\"w-100\\\">\\r\\n        <tbody>\\r\\n        <!-- <tr *ngFor=\\\"let task of summary.tasks; index as i\\\"> -->\\r\\n        <tr *ngFor=\\\"let task of summary.tasks; index as i\\\" [class.border-top]=\\\"i>0\\\">\\r\\n          <td style=\\\"width:125px; height: 35px;\\\">{{task.user.userName}}</td>\\r\\n          <td style=\\\"width:75px;\\\">\\r\\n            <div *ngIf=\\\"task.statusBySttsId != null\\\">\\r\\n              {{task.statusBySttsId.statusCode}}\\r\\n            </div>\\r\\n          </td>\\r\\n          <td style=\\\"width:100px;\\\">\\r\\n            <div *ngIf=\\\"task.userByApproverId != null\\\">\\r\\n              {{task.userByApproverId.userName}}\\r\\n            </div>\\r\\n          </td>\\r\\n          <td style=\\\"width:100px;\\\">\\r\\n            <div *ngIf=\\\"task.userByEditedBy != null\\\">\\r\\n              {{task.userByEditedBy.userName}}\\r\\n            </div>\\r\\n          </td>\\r\\n          <td style=\\\"width:60px;\\\" class=\\\"text-center\\\">{{task.inputHours}}</td>\\r\\n          <td style=\\\"width:200px;\\\">{{task.feedback}}</td>\\r\\n          <td style=\\\"width:60px;\\\">\\r\\n            <!--\\r\\n            <i disabled=true class=\\\"material-icons info text-primary\\\" title=\\\"Edit\\\" *ngIf=\\\"(task.userId == user.id &&  task.sttsId != 'A') || user.userRoleByCsRoleId.roleName == 'c_lead'\\\"\\r\\n              (click)=\\\"editInput(task)\\\">edit</i>\\r\\n            <i class=\\\"material-icons info text-danger\\\" title=\\\"Remove\\\" *ngIf=\\\"(task.userId == user.id && task.sttsId != 'A') || user.userRoleByCsRoleId.roleName == 'c_lead'\\\"\\r\\n              (click)=\\\"deleteInput(task)\\\">delete</i>\\r\\n            <i class=\\\"material-icons info text-success\\\" title=\\\"Approve\\\"\\r\\n              (click)=\\\"approveCSInput(task)\\\" *ngIf=\\\"user.userRoleByCsRoleId.roleName == 'c_lead'\\\">check_circle</i>\\r\\n-->\\r\\n          </td>\\r\\n        </tr>\\r\\n        </tbody>\\r\\n      </table>\\r\\n    </td>\\r\\n  </tr>\\r\\n  <tr *ngIf=\\\"result == null || result == undefined || result.length == 0\\\">\\r\\n    <td colspan=\\\"9\\\" class=\\\"text-center\\\">No records found</td>\\r\\n  </tr>\\r\\n</table>\\r\\n\"","import { Component, OnInit, Input, Inject, Output, EventEmitter } from '@angular/core';\r\nimport { UserService } from 'src/app/_services';\r\nimport { ServiceMatrixService } from 'src/app/service/service-matrix.service';\r\nimport * as _ from 'lodash';\r\nimport { MatDialog, MatDialogRef, MAT_DIALOG_DATA } from '@angular/material';\r\nimport { MatSnackBarComponent } from 'src/app/service/mat-snack-bar/mat-snack-bar.component';\r\nimport { element } from '@angular/core/src/render3';\r\n\r\n@Component({\r\n  selector: 'app-labor-class-inputs',\r\n  templateUrl: './labor-class-inputs.component.html',\r\n  styleUrls: ['./labor-class-inputs.component.css']\r\n})\r\nexport class LaborClassInputsComponent implements OnInit {\r\n\r\n  @Input('positionId') positionId: string;\r\n  @Input('regionId') regionId: number;\r\n  @Output() hoursEntered = new EventEmitter();\r\n  @Output() validatedHours = new EventEmitter();\r\n  @Output() copyInd = new EventEmitter();\r\n//  @Input('laborMappings') laborMappings: any;\r\n  _laborMappings: any;\r\n  @Input(\"hoursEntered\") hoursEnterd: number;\r\n  @Input(\"validatdHours\") validatdHours: number;\r\n  @Input(\"hoursBank\") hoursBank: number;\r\n\r\n  result: any[];\r\n  user: Object;\r\n  positions: any;\r\n  isCopyListEmpty :boolean = false;\r\n  isVaidator: boolean = false;\r\n\r\n  constructor(private userService: UserService, private serviceMatrix: ServiceMatrixService, public dialog: MatDialog, private snackBar: MatSnackBarComponent) { }\r\n\r\n  ngOnInit() {\r\n    this.customInit();\r\n    this.user = this.userService.user;\r\n    if('c_lead' === this.user['userRoleByCsRoleId']['roleName']) {\r\n      this.isVaidator = true;\r\n    }\r\n  }\r\n\r\n  get laborMappings(): any {\r\n   // transform value for display\r\n   return this._laborMappings;\r\n }\r\n\r\n @Input('laborMappings')\r\n set laborMappings(laborMappings: any) {\r\n   this._laborMappings = laborMappings.filter(e => e['positionId'] != this.positionId);\r\n }\r\n\r\n  customInit() {\r\n    let _self = this;\r\n    this.serviceMatrix.getLaborClassSummaryByPositionId(this.regionId, this.positionId).subscribe(res => {\r\n      _self.result = _(res)\r\n        .groupBy(x => x['taskId'])\r\n        .map((value, key) => ({ taskId: key, tasks: value }))\r\n        .value();\r\n\r\n      let he = _.sumBy(res as [], function (e) {\r\n          return e['inputHours'];\r\n      });\r\n      let resp = res as [];\r\n      let filteredResp = resp.filter(e => e['sttsId'] == 'A');\r\n      let hv = _.sumBy(filteredResp, function (e) {\r\n          return e['inputHours'];\r\n      });\r\n      this.hoursEntered.emit(he);\r\n      this.validatedHours.emit(hv);\r\n    });\r\n  }\r\n\r\n  editInput(task) {\r\n    const dialogRef = this.dialog.open(EditCSInputDialog, {\r\n      data: { task: task, hoursBank: this.hoursBank, hoursEntered: this.hoursEnterd }\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe(result => {\r\n      if (result) {\r\n        this.customInit();\r\n      }\r\n    });\r\n  }\r\n\r\n  deleteInput(task) {\r\n    const dialogRef = this.dialog.open(DeleteCSInputDialog, {\r\n      data: { task: task }\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe(result => {\r\n      if (result) {\r\n        this.customInit();\r\n      }\r\n    });\r\n  }\r\n\r\n  approveCSInput(task) {\r\n    this.serviceMatrix.approveCSInput(task, this.userService.userId).subscribe(res => {\r\n      if (res) {\r\n        this.snackBar.openSnackBar(\"Input Validated\", 'Close', \"green-snackbar\");\r\n        this.customInit();\r\n        //this.dialogRef.close(res);\r\n      } else {\r\n        this.snackBar.openSnackBar(\"Error approving input\", 'Close', \"red-snackbar\");\r\n      }\r\n    });\r\n  /*  const dialogRef = this.dialog.open(ApproveCSInputDialog, {\r\n      data: { task: task }\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe(result => {\r\n      if (result) {\r\n        this.customInit();\r\n      }\r\n    });*/\r\n  }\r\n\r\n  approveAllTasks(){\r\n    this.serviceMatrix.approveAllInputs(this.regionId,  this.positionId, this.userService.userId).subscribe(res => {\r\n      if (res) {\r\n        this.snackBar.openSnackBar(\"Inputs Validated\", 'Close', \"green-snackbar\");\r\n        this.customInit();\r\n        //this.dialogRef.close(res);\r\n      } else {\r\n        this.snackBar.openSnackBar(\"Error approving input\", 'Close', \"red-snackbar\");\r\n      }\r\n    });\r\n  }\r\n\r\n    copyTasks(){\r\n      this.isCopyListEmpty = false;\r\n      if(this.positions == undefined || this.positions.length == 0) {\r\n        this.snackBar.openSnackBar( \"Please select position ids\", 'Close', \"red-snackbar\");\r\n      } else {\r\n        let destinationPositions = this.positions.map(a => a.positionId);\r\n        let tasksToBeCopied:string[] = this.result.map(a => a.taskId);\r\n        this.serviceMatrix.copyTasks(this.regionId, this.userService.userId, this.positionId, destinationPositions,\r\n           tasksToBeCopied).subscribe(res => {\r\n          this.snackBar.openSnackBar( \"Tasks copied successfully\", 'Close', \"green-snackbar\");\r\n          this.copyInd.emit();\r\n        }, err => {\r\n          this.snackBar.openSnackBar( \"Error copying tasks\", 'Close', \"red-snackbar\");\r\n        });\r\n      }\r\n    }\r\n\r\n}\r\n\r\n@Component({\r\n  selector: 'edit-cs-input-dialog',\r\n  templateUrl: 'edit-cs-input-dialog.html',\r\n})\r\nexport class EditCSInputDialog {\r\n\r\n  staticInputHours: number = this.data.task.inputHours;\r\n\r\n  constructor(\r\n    public dialogRef: MatDialogRef<EditCSInputDialog>,\r\n    @Inject(MAT_DIALOG_DATA) public data: any, private serviceMatrix: ServiceMatrixService, private snackBar: MatSnackBarComponent,\r\n    private userService :UserService) {\r\n      dialogRef.disableClose = true;\r\n    }\r\n\r\n  onNoClick(): void {\r\n    this.data.task.inputHours = this.staticInputHours;\r\n    this.dialogRef.close();\r\n  }\r\n\r\n  onUpdate() {\r\n    let user = this.userService.user;\r\n    let vaidator:boolean= false;\r\n    if('c_lead' === user['userRoleByCsRoleId']['roleName']) {\r\n      vaidator = true;\r\n    }\r\n    this.serviceMatrix.editCSInput(this.data.task, this.userService.userId, vaidator).subscribe(res => {\r\n      if (res) {\r\n        this.snackBar.openSnackBar(\"Input saved successfully\", 'Close', \"green-snackbar\");\r\n        this.dialogRef.close(res);\r\n      } else {\r\n        this.snackBar.openSnackBar(\"Error saving input value\", 'Close', \"red-snackbar\");\r\n      }\r\n    });\r\n  }\r\n\r\n  onValidate() {\r\n    this.serviceMatrix.updateAndValidateCsInput(this.data.task, this.userService.userId).subscribe(res => {\r\n      if (res) {\r\n        this.snackBar.openSnackBar(\"Input approved successfully\", 'Close', \"green-snackbar\");\r\n        this.dialogRef.close(res);\r\n      } else {\r\n        this.snackBar.openSnackBar(\"Error approving input\", 'Close', \"red-snackbar\");\r\n      }\r\n    });\r\n  }\r\n\r\n}\r\n\r\n@Component({\r\n  selector: 'delete-cs-input-dialog',\r\n  templateUrl: 'delete-cs-input-dialog.html',\r\n})\r\nexport class DeleteCSInputDialog {\r\n\r\n  constructor(\r\n    public dialogRef: MatDialogRef<DeleteCSInputDialog>,\r\n    @Inject(MAT_DIALOG_DATA) public data: any, private serviceMatrix: ServiceMatrixService, private snackBar: MatSnackBarComponent) { }\r\n\r\n  onNoClick(): void {\r\n    this.dialogRef.close();\r\n  }\r\n\r\n  onConfirm() {\r\n    this.serviceMatrix.deleteCSInput(this.data.task).subscribe(res => {\r\n      if (res) {\r\n        this.snackBar.openSnackBar(\"Input deleted successfully\", 'Close', \"green-snackbar\");\r\n        this.dialogRef.close(res);\r\n      } else {\r\n        this.snackBar.openSnackBar(\"Error deleting input value\", 'Close', \"red-snackbar\");\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\n\r\n@Component({\r\n  selector: 'approve-cs-input-dialog',\r\n  templateUrl: 'approve-cs-input-dialog.html',\r\n})\r\nexport class ApproveCSInputDialog {\r\n\r\n  constructor(\r\n    public dialogRef: MatDialogRef<DeleteCSInputDialog>,\r\n    @Inject(MAT_DIALOG_DATA) public data: any,\r\n    private serviceMatrix: ServiceMatrixService,\r\n    private snackBar: MatSnackBarComponent,\r\n    private userService :UserService) { }\r\n\r\n  onNoClick(): void {\r\n    this.dialogRef.close();\r\n  }\r\n\r\n  onConfirm() {\r\n    this.serviceMatrix.approveCSInput(this.data.task, this.userService.userId).subscribe(res => {\r\n      if (res) {\r\n        this.snackBar.openSnackBar(\"Input approved successfully\", 'Close', \"green-snackbar\");\r\n        this.dialogRef.close(res);\r\n      } else {\r\n        this.snackBar.openSnackBar(\"Error approving input\", 'Close', \"red-snackbar\");\r\n      }\r\n    });\r\n  }\r\n}\r\n","module.exports = \"table {\\r\\n    border-collapse: separate;\\r\\n    border-spacing: 5px;\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY3VycmVudC1zdGF0ZS9sYWJvci1jbGFzcy10YXNrcy9hZGQtY3MtaW5wdXQtZGlhbG9nLmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtJQUNJLHlCQUF5QjtJQUN6QixtQkFBbUI7QUFDdkIiLCJmaWxlIjoic3JjL2FwcC9jdXJyZW50LXN0YXRlL2xhYm9yLWNsYXNzLXRhc2tzL2FkZC1jcy1pbnB1dC1kaWFsb2cuY3NzIiwic291cmNlc0NvbnRlbnQiOlsidGFibGUge1xyXG4gICAgYm9yZGVyLWNvbGxhcHNlOiBzZXBhcmF0ZTtcclxuICAgIGJvcmRlci1zcGFjaW5nOiA1cHg7XHJcbn0iXX0= */\"","module.exports = \"<div>\\r\\n  <table class=\\\"w-100\\\">\\r\\n    <tr>\\r\\n      <td style=\\\"font-size: 20px; font-weight: 600; margin-bottom: 0;\\\">{{task.taskName}}({{task.taskId}}) - {{positionId}}</td>\\r\\n      <td rowspan=\\\"2\\\" style=\\\"text-align: center; width: 148px;\\\">\\r\\n        ({{task.index}} out of {{filteredTasks.length}})<br>\\r\\n        <button mat-button class=\\\"float-sm-right\\\" *ngIf=\\\"task.nextTask != undefined\\\" title=\\\"{{task.nextTask.taskId}}\\\" (click)=\\\"goToTask(task.nextTask.taskId)\\\">\\r\\n            <mat-icon class=\\\"next_task_icon\\\">navigate_next</mat-icon>\\r\\n        </button>\\r\\n        <button mat-button class=\\\"float-sm-right\\\" *ngIf=\\\"task.nextTask != undefined\\\" title=\\\"{{task.prevTask.taskId}}\\\" (click)=\\\"goToTask(task.prevTask.taskId)\\\">\\r\\n            <mat-icon class=\\\"next_task_icon\\\">navigate_before</mat-icon>\\r\\n        </button>\\r\\n      </td>\\r\\n    </tr>\\r\\n    <tr>\\r\\n      <td style=\\\"font-size: 14px; color: gray; padding-bottom: 10px;\\\">\\r\\n        {{task.serviceName}}/{{task.program}}/{{task.subProgram}}/{{task.taskCategory}}\\r\\n      </td>\\r\\n    </tr>\\r\\n    <tr *ngIf=\\\"taskMessage != ''\\\">\\r\\n      <td colspan=\\\"2\\\" class=\\\"alert alert-success\\\">{{taskMessage}}</td>\\r\\n    </tr>\\r\\n  </table>\\r\\n  <!-- <p style=\\\"font-size: 20px; font-weight: 600; margin-bottom: 0;\\\">{{data.task.taskName}}({{data.task.taskId}}) - {{data.positionId}}</p>\\r\\n  <p style=\\\"font-size: 14px;\\\">{{data.task.serviceName}} / {{data.task.program}} / {{data.task.subProgram}}\\r\\n    /{{data.task.taskCategory}}\\r\\n  </p> -->\\r\\n</div>\\r\\n<div class=\\\"row\\\">\\r\\n  <div class=\\\"col-12\\\">\\r\\n    <table class=\\\"text-white\\\" style=\\\"background: #1f4e79; height: 80px; width: auto !important;\\\">\\r\\n      <tr>\\r\\n        <td rowspan=\\\"3\\\" style=\\\"background-color: white;\\\">\\r\\n            <mat-form-field class=\\\"px-1\\\">\\r\\n              <input matInput style=\\\"color:black;\\\" placeholder=\\\"Input Hours\\\" type=\\\"number\\\" [(ngModel)]=\\\"hours\\\">\\r\\n            </mat-form-field>\\r\\n            <mat-form-field class=\\\"px-1\\\">\\r\\n              <textarea matInput placeholder=\\\"Feedback\\\" [(ngModel)]=\\\"feedback\\\" style=\\\"color: black;\\\"></textarea>\\r\\n            </mat-form-field>\\r\\n          <button mat-raised-button color=\\\"primary\\\" cdkFocusInitial (click)=\\\"onAdd()\\\" class=\\\"m-1\\\" style=\\\"width: 70px;\\\" *ngIf=\\\"!existingTask\\\">Add</button>\\r\\n          <button mat-raised-button color=\\\"primary\\\" cdkFocusInitial (click)=\\\"onUpdate()\\\" class=\\\"m-1\\\" style=\\\"width: 70px;\\\" *ngIf=\\\"existingTask\\\">Update</button>\\r\\n          <button mat-raised-button  (click)=\\\"onNoClick()\\\" class=\\\"m-1\\\" style=\\\"width: 70px;\\\">Close</button>\\r\\n        </td>\\r\\n        <td rowspan=\\\"3\\\" style=\\\"width: 75px;\\\"></td>\\r\\n        <td>Hours bank for the position</td>\\r\\n        <td style=\\\"width: 75px; border-bottom: 1px solid white;\\\">{{hoursBank}}</td>\\r\\n      </tr>\\r\\n      <tr>\\r\\n        <td>Total hours allocated</td>\\r\\n        <td style=\\\"border-bottom: 1px solid white;\\\">{{hoursEntered+hours-staticInputHours}}</td>\\r\\n      </tr>\\r\\n      <tr>\\r\\n        <td>Hours remaining to be allocated</td>\\r\\n        <td style=\\\"border-bottom: 1px solid white;\\\">{{hoursBank-(hoursEntered+hours-staticInputHours)}}</td>\\r\\n      </tr>\\r\\n    </table>\\r\\n  </div>\\r\\n</div>\\r\\n<div class=\\\"row pt-3\\\">\\r\\n  <div class=\\\"col-3\\\">\\r\\n    <mat-form-field class=\\\"w-100\\\">\\r\\n      <textarea matInput placeholder=\\\"Description\\\" disabled style=\\\"min-height: 150px; color: #444 !important;\\\">{{task.taskDesc}}</textarea>\\r\\n    </mat-form-field>\\r\\n  </div>\\r\\n  <div class=\\\"col-3\\\">\\r\\n    <mat-form-field class=\\\"w-100\\\">\\r\\n      <textarea matInput placeholder=\\\"Desired Performance\\\" disabled style=\\\"min-height: 150px; color: #444 !important;\\\">{{task.desiredPerf}}</textarea>\\r\\n    </mat-form-field>\\r\\n  </div>\\r\\n  <div class=\\\"col-3\\\">\\r\\n    <mat-form-field class=\\\"w-100\\\">\\r\\n      <textarea matInput placeholder=\\\"Glossary\\\" disabled style=\\\"min-height: 150px; color: #444 !important;\\\">{{task.serviceGlossary}}</textarea>\\r\\n    </mat-form-field>\\r\\n  </div>\\r\\n  <div class=\\\"col-3\\\">\\r\\n    <mat-form-field class=\\\"w-100\\\">\\r\\n      <textarea matInput placeholder=\\\"Additional Budget Factors\\\" disabled style=\\\"min-height: 150px; color: #444 !important;\\\">{{task.addtnlBudgetFator}}</textarea>\\r\\n    </mat-form-field>\\r\\n  </div>\\r\\n</div>\\r\\n\"","module.exports = \"<h1 mat-dialog-title>Task already added</h1>\\r\\n<div mat-dialog-content>\\r\\n  <p>Please view 'Inputs' section to modify task hours.</p>\\r\\n</div>\\r\\n<div mat-dialog-actions>\\r\\n  <button mat-button (click)=\\\"onNoClick()\\\">Ok</button>\\r\\n</div>\"","module.exports = \"mat-cell,\\r\\n.mat-cell,\\r\\nmat-footer-cell,\\r\\n.mat-footer-cell,\\r\\nmat-header-cell, .mat-header-cell {\\r\\n  padding: 0.75rem !important;\\r\\n}\\r\\n\\r\\nmat-header-cell {\\r\\n  display:flex;\\r\\n  justify-content:flex-end;\\r\\n }\\r\\n\\r\\n.mat-form-field {\\r\\n   font-size: 14px;\\r\\n   width: 50%;\\r\\n }\\r\\n\\r\\n.mat-row:hover {\\r\\n  background-color: #DDD;\\r\\n}\\r\\n\\r\\n.example-fill-remaining-space {\\r\\n  /* This fills the remaining space, by using flexbox.\\r\\n     Every toolbar row uses a flexbox row layout. */\\r\\n  flex: 1 1 auto;\\r\\n}\\r\\n\\r\\nmat-toolbar  span, mat-toolbar  a  span {\\r\\n  font-size: 10pt;\\r\\n}\\r\\n\\r\\n.table-col-title {\\r\\n  font-weight: 500;\\r\\n  color: black;\\r\\n  font-size: 14px;\\r\\n}\\r\\n\\r\\n.table-col-header {\\r\\n  font-size: 12px;\\r\\n}\\r\\n\\r\\n.filter-input{\\r\\n  width: 75%;\\r\\n  text-align: left;\\r\\n}\\r\\n\\r\\n.th-header-background{\\r\\n  background: #1f4e79;\\r\\n  color: white;\\r\\n  font-size: 14px;\\r\\n}\\r\\n\\r\\n.help-text-icon {\\r\\n  font-size: 14px;\\r\\n}\\r\\n\\r\\n::ng-deep .mat-tooltip  {\\r\\n white-space: pre-line    !important;\\r\\n font-size: 10px   !important;\\r\\n}\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY3VycmVudC1zdGF0ZS9sYWJvci1jbGFzcy10YXNrcy9sYWJvci1jbGFzcy10YXNrcy5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOzs7OztFQUtFLDJCQUEyQjtBQUM3Qjs7QUFFQTtFQUNFLFlBQVk7RUFDWix3QkFBd0I7Q0FDekI7O0FBRUE7R0FDRSxlQUFlO0dBQ2YsVUFBVTtDQUNaOztBQUVBO0VBQ0Msc0JBQXNCO0FBQ3hCOztBQUVBO0VBQ0U7bURBQ2lEO0VBQ2pELGNBQWM7QUFDaEI7O0FBRUE7RUFDRSxlQUFlO0FBQ2pCOztBQUVBO0VBQ0UsZ0JBQWdCO0VBQ2hCLFlBQVk7RUFDWixlQUFlO0FBQ2pCOztBQUVBO0VBQ0UsZUFBZTtBQUNqQjs7QUFFQTtFQUNFLFVBQVU7RUFDVixnQkFBZ0I7QUFDbEI7O0FBRUE7RUFDRSxtQkFBbUI7RUFDbkIsWUFBWTtFQUNaLGVBQWU7QUFDakI7O0FBRUE7RUFDRSxlQUFlO0FBQ2pCOztBQUVBO0NBQ0MsbUNBQW1DO0NBQ25DLDRCQUE0QjtBQUM3QiIsImZpbGUiOiJzcmMvYXBwL2N1cnJlbnQtc3RhdGUvbGFib3ItY2xhc3MtdGFza3MvbGFib3ItY2xhc3MtdGFza3MuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIm1hdC1jZWxsLFxyXG4ubWF0LWNlbGwsXHJcbm1hdC1mb290ZXItY2VsbCxcclxuLm1hdC1mb290ZXItY2VsbCxcclxubWF0LWhlYWRlci1jZWxsLCAubWF0LWhlYWRlci1jZWxsIHtcclxuICBwYWRkaW5nOiAwLjc1cmVtICFpbXBvcnRhbnQ7XHJcbn1cclxuXHJcbm1hdC1oZWFkZXItY2VsbCB7XHJcbiAgZGlzcGxheTpmbGV4O1xyXG4gIGp1c3RpZnktY29udGVudDpmbGV4LWVuZDtcclxuIH1cclxuXHJcbiAubWF0LWZvcm0tZmllbGQge1xyXG4gICBmb250LXNpemU6IDE0cHg7XHJcbiAgIHdpZHRoOiA1MCU7XHJcbiB9XHJcblxyXG4gLm1hdC1yb3c6aG92ZXIge1xyXG4gIGJhY2tncm91bmQtY29sb3I6ICNEREQ7XHJcbn1cclxuXHJcbi5leGFtcGxlLWZpbGwtcmVtYWluaW5nLXNwYWNlIHtcclxuICAvKiBUaGlzIGZpbGxzIHRoZSByZW1haW5pbmcgc3BhY2UsIGJ5IHVzaW5nIGZsZXhib3guXHJcbiAgICAgRXZlcnkgdG9vbGJhciByb3cgdXNlcyBhIGZsZXhib3ggcm93IGxheW91dC4gKi9cclxuICBmbGV4OiAxIDEgYXV0bztcclxufVxyXG5cclxubWF0LXRvb2xiYXIgIHNwYW4sIG1hdC10b29sYmFyICBhICBzcGFuIHtcclxuICBmb250LXNpemU6IDEwcHQ7XHJcbn1cclxuXHJcbi50YWJsZS1jb2wtdGl0bGUge1xyXG4gIGZvbnQtd2VpZ2h0OiA1MDA7XHJcbiAgY29sb3I6IGJsYWNrO1xyXG4gIGZvbnQtc2l6ZTogMTRweDtcclxufVxyXG5cclxuLnRhYmxlLWNvbC1oZWFkZXIge1xyXG4gIGZvbnQtc2l6ZTogMTJweDtcclxufVxyXG5cclxuLmZpbHRlci1pbnB1dHtcclxuICB3aWR0aDogNzUlO1xyXG4gIHRleHQtYWxpZ246IGxlZnQ7XHJcbn1cclxuXHJcbi50aC1oZWFkZXItYmFja2dyb3VuZHtcclxuICBiYWNrZ3JvdW5kOiAjMWY0ZTc5O1xyXG4gIGNvbG9yOiB3aGl0ZTtcclxuICBmb250LXNpemU6IDE0cHg7XHJcbn1cclxuXHJcbi5oZWxwLXRleHQtaWNvbiB7XHJcbiAgZm9udC1zaXplOiAxNHB4O1xyXG59XHJcblxyXG46Om5nLWRlZXAgLm1hdC10b29sdGlwICB7XHJcbiB3aGl0ZS1zcGFjZTogcHJlLWxpbmUgICAgIWltcG9ydGFudDtcclxuIGZvbnQtc2l6ZTogMTBweCAgICFpbXBvcnRhbnQ7XHJcbn1cclxuIl19 */\"","module.exports = \"<div>\\r\\n  <div class=\\\"text-center\\\">\\r\\n  <mat-form-field>\\r\\n    <input matInput (keyup)=\\\"applyFilter($event.target.value)\\\" placeholder=\\\"Filter\\\" [(ngModel)]=\\\"globalFilter\\\">\\r\\n  </mat-form-field>\\r\\n  <button mat-button color=\\\"primary\\\" (click)=\\\"clearAllFilters()\\\">Clear All Filters</button>\\r\\n  <!-- <button mat-button color=\\\"primary\\\" (click)=\\\"loadLastUsedFilter()\\\" *ngIf=\\\"user['filter'] != null\\\">Use Most Recent\\r\\n    Filter</button> -->\\r\\n  </div>\\r\\n\\r\\n  <table mat-table [dataSource]=\\\"dataSource\\\" matSort class=\\\"mat-elevation-z8 w-100\\\">\\r\\n    <ng-container matColumnDef=\\\"viewTask\\\">\\r\\n      <th mat-header-cell *matHeaderCellDef mat-sort-header class=\\\"th-header-background\\\">Actions</th>\\r\\n      <td mat-cell *matCellDef=\\\"let row\\\">\\r\\n        <!--<button mat-button color=\\\"primary\\\" (click)=\\\"addInput(row)\\\" title=\\\"Add Hours\\\" [disabled]=\\\"isTaskAdded(row.taskId) >= 0\\\">-->\\r\\n        <button mat-button color=\\\"primary\\\" (click)=\\\"addInput(row)\\\" title=\\\"Add Hours\\\" [disabled]=true>\\r\\n          <mat-icon>add_box</mat-icon>\\r\\n        </button>\\r\\n      </td>\\r\\n    </ng-container>\\r\\n\\r\\n    <ng-container matColumnDef=\\\"viewTask-filter\\\">\\r\\n      <th mat-header-cell *matHeaderCellDef>\\r\\n\\r\\n      </th>\\r\\n    </ng-container>\\r\\n\\r\\n\\r\\n    <ng-container matColumnDef=\\\"taskId\\\">\\r\\n      <th mat-header-cell *matHeaderCellDef mat-sort-header class=\\\"th-header-background\\\">Task ID</th>\\r\\n      <td mat-cell *matCellDef=\\\"let element\\\">\\r\\n        {{element.taskId}}\\r\\n      </td>\\r\\n    </ng-container>\\r\\n\\r\\n    <ng-container matColumnDef=\\\"serviceName\\\">\\r\\n      <th mat-header-cell *matHeaderCellDef mat-sort-header class=\\\"th-header-background\\\">Service</th>\\r\\n      <td mat-cell *matCellDef=\\\"let element\\\">\\r\\n        {{element.serviceName}}\\r\\n      </td>\\r\\n    </ng-container>\\r\\n\\r\\n    <ng-container matColumnDef=\\\"program\\\">\\r\\n      <th mat-header-cell *matHeaderCellDef mat-sort-header class=\\\"th-header-background\\\">Program</th>\\r\\n      <td mat-cell *matCellDef=\\\"let element\\\">\\r\\n        {{element.program}}\\r\\n      </td>\\r\\n    </ng-container>\\r\\n\\r\\n    <ng-container matColumnDef=\\\"subProgram\\\">\\r\\n      <th mat-header-cell *matHeaderCellDef mat-sort-header class=\\\"th-header-background\\\">Sub Program</th>\\r\\n      <td mat-cell *matCellDef=\\\"let element\\\">\\r\\n        {{element.subProgram}}\\r\\n      </td>\\r\\n    </ng-container>\\r\\n\\r\\n    <ng-container matColumnDef=\\\"taskCategory\\\">\\r\\n      <th mat-header-cell *matHeaderCellDef mat-sort-header class=\\\"th-header-background\\\">Task Category</th>\\r\\n      <td mat-cell *matCellDef=\\\"let element\\\">\\r\\n        {{element.taskCategory}}\\r\\n      </td>\\r\\n    </ng-container>\\r\\n\\r\\n    <ng-container matColumnDef=\\\"taskName\\\">\\r\\n      <th mat-header-cell *matHeaderCellDef mat-sort-header class=\\\"th-header-background\\\">Task</th>\\r\\n      <td mat-cell *matCellDef=\\\"let element\\\">\\r\\n        {{element.taskName}}\\r\\n      </td>\\r\\n    </ng-container>\\r\\n\\r\\n    <!-- Task Id Filter Column -->\\r\\n    <ng-container matColumnDef=\\\"taskId-filter\\\">\\r\\n      <th mat-header-cell *matHeaderCellDef>\\r\\n        <input class=\\\"filter-input\\\" value=\\\"{{filteredValues.taskId}}\\\"\\r\\n          (keyup)=\\\"applyColumnFilter($event.target.value, 'taskId')\\\" placeholder=\\\"Filter\\\">\\r\\n      </th>\\r\\n    </ng-container>\\r\\n\\r\\n    <!-- Service Filter Column -->\\r\\n    <ng-container matColumnDef=\\\"serviceName-filter\\\">\\r\\n      <th mat-header-cell *matHeaderCellDef>\\r\\n        <input class=\\\"filter-input\\\" value=\\\"{{filteredValues.serviceName}}\\\"\\r\\n          (keyup)=\\\"applyColumnFilter($event.target.value, 'serviceName')\\\" placeholder=\\\"Filter\\\">\\r\\n      </th>\\r\\n    </ng-container>\\r\\n\\r\\n    <!-- Program Filter Column -->\\r\\n    <ng-container matColumnDef=\\\"program-filter\\\">\\r\\n      <th mat-header-cell *matHeaderCellDef>\\r\\n        <input class=\\\"filter-input\\\" value=\\\"{{filteredValues.program}}\\\"\\r\\n          (keyup)=\\\"applyColumnFilter($event.target.value, 'program')\\\" placeholder=\\\"Filter\\\">\\r\\n      </th>\\r\\n    </ng-container>\\r\\n\\r\\n    <!-- Sub Program Filter Column -->\\r\\n    <ng-container matColumnDef=\\\"subProgram-filter\\\">\\r\\n      <th mat-header-cell *matHeaderCellDef>\\r\\n        <input class=\\\"filter-input\\\" value=\\\"{{filteredValues.subProgram}}\\\"\\r\\n          (keyup)=\\\"applyColumnFilter($event.target.value, 'subProgram')\\\" placeholder=\\\"Filter\\\">\\r\\n      </th>\\r\\n    </ng-container>\\r\\n\\r\\n    <!-- Task Category Filter Column -->\\r\\n    <ng-container matColumnDef=\\\"taskCategory-filter\\\">\\r\\n      <th mat-header-cell *matHeaderCellDef>\\r\\n        <input class=\\\"filter-input\\\" value=\\\"{{filteredValues.taskCategory}}\\\"\\r\\n          (keyup)=\\\"applyColumnFilter($event.target.value, 'taskCategory')\\\" placeholder=\\\"Filter\\\">\\r\\n      </th>\\r\\n    </ng-container>\\r\\n\\r\\n    <!-- Task Filter Column -->\\r\\n    <ng-container matColumnDef=\\\"taskName-filter\\\">\\r\\n      <th mat-header-cell *matHeaderCellDef>\\r\\n        <input class=\\\"filter-input\\\" value=\\\"{{filteredValues.taskName}}\\\"\\r\\n          (keyup)=\\\"applyColumnFilter($event.target.value, 'taskName')\\\" placeholder=\\\"Filter\\\">\\r\\n      </th>\\r\\n    </ng-container>\\r\\n\\r\\n    <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\r\\n    <tr mat-header-row *matHeaderRowDef=\\\"displayedFilterColumns\\\" class=\\\"example-second-header-row\\\"></tr>\\r\\n    <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></tr>\\r\\n  </table>\\r\\n  <mat-paginator [pageSizeOptions]=\\\"[10, 20, 50, 100]\\\" showFirstLastButtons (page)=\\\"pageEvent = handlePage($event)\\\"></mat-paginator>\\r\\n</div>\\r\\n\"","import { Component, OnInit, Input, ViewChild, Inject, Output, EventEmitter } from '@angular/core';\r\nimport { UserService } from 'src/app/_services';\r\nimport { ServiceMatrixService } from 'src/app/service/service-matrix.service';\r\nimport { MatDialog, MatTableDataSource, MatPaginator, MatSort, MAT_DIALOG_DATA, MatDialogRef } from '@angular/material';\r\nimport { MatSnackBarComponent } from 'src/app/service/mat-snack-bar/mat-snack-bar.component';\r\nimport * as _ from 'lodash';\r\n\r\n@Component({\r\n  selector: 'app-labor-class-tasks',\r\n  templateUrl: './labor-class-tasks.component.html',\r\n  styleUrls: ['./labor-class-tasks.component.css']\r\n})\r\nexport class LaborClassTasksComponent implements OnInit {\r\n\r\n  @Input('positionId') positionId: string;\r\n  @Input('regionId') regionId: number;\r\n  @Input(\"hoursEntered\") hoursEntered: number;\r\n  @Input(\"validatedHours\") validatedHours: number;\r\n  @Input(\"hoursBank\") hoursBank: number;\r\n\r\n  @Output() updateHoursEntered = new EventEmitter();\r\n  @Output() updatedValidatedHours = new EventEmitter();\r\n\r\n  user: Object;\r\n\r\n  @Input(\"taskCatalog\") taskCatalog: any;\r\n  addedTasks: any = [];\r\n  filters: any;\r\n  lcfilter: any;\r\n\r\n  dataSource = new MatTableDataSource<Object>();\r\n  searchInput: string;\r\n  displayedColumns: string[] = [\"taskId\", \"serviceName\", \"program\", \"subProgram\", \"taskCategory\", \"taskName\", \"viewTask\"];\r\n  displayedFilterColumns: string[] = [];\r\n  globalFilter = '';\r\n  filteredValues = {\r\n    taskId: '', serviceName: '', program: '',\r\n    subProgram: '', taskCategory: '', taskName: ''\r\n  };\r\n\r\n  @ViewChild(MatPaginator) paginator: MatPaginator;\r\n  @ViewChild(MatSort) sort: MatSort;\r\n\r\n  constructor(private userService: UserService, private serviceMatrix: ServiceMatrixService, public dialog: MatDialog, private snackBar: MatSnackBarComponent) { }\r\n\r\n  ngOnInit(){\r\n    this.user = this.userService.user;\r\n    // this.loadLaborClassInputs();\r\n    // this.taskCatalog = JSON.parse(localStorage.getItem('csServiceMatrix'));\r\n    this.displayedColumns.forEach(e => {\r\n      this.displayedFilterColumns.push(e + '-filter');\r\n    });\r\n    this.dataSource.data = this.taskCatalog as Object[];\r\n    this.dataSource.filterPredicate = this.customFilterPredicate();\r\n\r\n    this.filters = JSON.parse(sessionStorage.getItem('cslcfilters'));\r\n    this.filters = this.filters == null ? {} : this.filters;\r\n    this.lcfilter = this.filters[this.positionId];\r\n    if(this.lcfilter != undefined) {\r\n      this.paginator.pageIndex = this.lcfilter.pageIndex;\r\n      this.paginator.pageSize = this.lcfilter.pageSize;\r\n      this.applyAllFilters(this.lcfilter.globalFilter, this.lcfilter.filteredValues);\r\n    }\r\n    this.dataSource.paginator = this.paginator;\r\n  }\r\n\r\n  saveFilter(){\r\n    this.lcfilter = {};\r\n    this.lcfilter[\"globalFilter\"] = this.globalFilter;\r\n    this.lcfilter[\"filteredValues\"] = this.filteredValues;\r\n    this.lcfilter[\"pageIndex\"] = this.paginator.pageIndex;\r\n    this.lcfilter[\"pageSize\"] = this.paginator.pageSize;\r\n    this.filters[this.positionId] = this.lcfilter;\r\n    sessionStorage.setItem('cslcfilters', JSON.stringify(this.filters));\r\n  }\r\n\r\n  handlePage(e){\r\n    this.saveFilter();\r\n  }\r\n\r\n  loadLaborClassInputs(){\r\n    this.serviceMatrix.getLaborClassSummaryByPositionId(this.regionId, this.positionId).subscribe(res => {\r\n      this.addedTasks = res as [];\r\n    });\r\n  }\r\n\r\n  isTaskAdded(taskId){\r\n    let index = _.findIndex(this.addedTasks, function(ele) {return ele['taskId'] == taskId});\r\n    return index;\r\n  }\r\n\r\n  applyAllFilters(gFilter, fValues) {\r\n    this.applyFilter(gFilter);\r\n    this.applyColumnFilter(fValues.taskId, 'taskId');\r\n    this.applyColumnFilter(fValues.serviceName, 'serviceName');\r\n    this.applyColumnFilter(fValues.program, 'program');\r\n    this.applyColumnFilter(fValues.subProgram, 'subProgram');\r\n    this.applyColumnFilter(fValues.taskCategory, 'taskCategory');\r\n    this.applyColumnFilter(fValues.taskName, 'taskName');\r\n  }\r\n\r\n  clearAllFilters() {\r\n    this.paginator.pageIndex = 0;\r\n    this.paginator.pageSize = 10;\r\n    this.dataSource.paginator = this.paginator;\r\n    this.globalFilter = '';\r\n    this.filteredValues = {\r\n      taskId: '', serviceName: '', program: '',\r\n      subProgram: '', taskCategory: '', taskName: ''\r\n    };\r\n    this.applyAllFilters(this.globalFilter, this.filteredValues);\r\n    this.saveFilter();\r\n  }\r\n\r\n  customFilterPredicate() {\r\n    const myFilterPredicate = (data: any, filter: string): boolean => {\r\n      var globalMatch = !this.globalFilter;\r\n      if (this.globalFilter) {\r\n        let taskIdFound = data.taskId.toString().trim().toLowerCase().indexOf(this.globalFilter.toString().toLowerCase()) !== -1;\r\n        let serviceNameFound = data.serviceName.toString().trim().toLowerCase().indexOf(this.globalFilter.toString().toLowerCase()) !== -1;\r\n        let programFound = data.program.toString().trim().toLowerCase().indexOf(this.globalFilter.toString().toLowerCase()) !== -1;\r\n        let subProgramFound = data.subProgram.toString().trim().toLowerCase().indexOf(this.globalFilter.toString().toLowerCase()) !== -1;\r\n        let taskCategoryFound = data.taskCategory.toString().trim().toLowerCase().indexOf(this.globalFilter.toString().toLowerCase()) !== -1;\r\n        let taskNameFound = data.taskName.toString().trim().toLowerCase().indexOf(this.globalFilter.toString().toLowerCase()) !== -1;\r\n        globalMatch = taskIdFound || serviceNameFound || programFound || subProgramFound || taskCategoryFound || taskNameFound;\r\n      }\r\n\r\n      if (!globalMatch) {\r\n        return;\r\n      }\r\n\r\n      let searchString = JSON.parse(filter);\r\n      let taskIdFound = data.taskId.toString().trim().toLowerCase().indexOf(searchString.taskId.toString().toLowerCase()) !== -1;\r\n      let serviceNameFound = data.serviceName.toString().trim().toLowerCase().indexOf(searchString.serviceName.toString().toLowerCase()) !== -1;\r\n      let programFound = data.program.toString().trim().toLowerCase().indexOf(searchString.program.toString().toLowerCase()) !== -1;\r\n      let subProgramFound = data.subProgram.toString().trim().toLowerCase().indexOf(searchString.subProgram.toString().toLowerCase()) !== -1;\r\n      let taskCategoryFound = data.taskCategory.toString().trim().toLowerCase().indexOf(searchString.taskCategory.toString().toLowerCase()) !== -1;\r\n      let taskNameFound = data.taskName.toString().trim().toLowerCase().indexOf(searchString.taskName.toString().toLowerCase()) !== -1;\r\n      return taskIdFound && serviceNameFound && programFound && subProgramFound && taskCategoryFound && taskNameFound;\r\n    }\r\n    return myFilterPredicate;\r\n  }\r\n\r\n  applyColumnFilter(filterValue: string, col: string) {\r\n    this.filteredValues[col] = filterValue;\r\n    this.dataSource.filter = JSON.stringify(this.filteredValues);\r\n    this.saveFilter();\r\n  }\r\n\r\n  applyFilter(filter) {\r\n    this.globalFilter = filter;\r\n    this.dataSource.filter = JSON.stringify(this.filteredValues);\r\n    this.saveFilter();\r\n  }\r\n\r\n  addInput(task) {\r\n\r\n    var tasks = this.dataSource.filteredData;\r\n    let filteredTasks = [];\r\n    if(tasks.length > 0){\r\n      for(var i=0; i<tasks.length; i++){\r\n        var sspt = tasks[i];\r\n        if(i==0){\r\n          sspt[\"prevTask\"] = tasks[tasks.length-1];\r\n          sspt[\"nextTask\"] = tasks[i+1];\r\n        } else if (i == tasks.length-1) {\r\n          sspt[\"prevTask\"] = tasks[i-1];\r\n          sspt[\"nextTask\"] = tasks[0];\r\n        } else {\r\n          sspt[\"prevTask\"] = tasks[i-1];\r\n          sspt[\"nextTask\"] = tasks[i+1];\r\n        }\r\n        sspt[\"index\"]= i+1;\r\n        filteredTasks.push(sspt);\r\n      }\r\n    }\r\n\r\n    // this.serviceMatrix.getCSInput(this.regionId, this.userService.userId, this.positionId, task.taskId).subscribe(res => {\r\n    //   if(res != null && res['inputHours'] > 0){\r\n    //     this.dialog.open(CSInputTaskExistDialog, {});\r\n    //   } else {\r\n        const dialogRef = this.dialog.open(AddCSInputDialog, {\r\n          data: { positionId: this.positionId, task: task, hours: 0, feedback: \"\"\r\n          , userId: this.user['id'], selectedRegionId: this.regionId\r\n          , hoursBank: this.hoursBank, hoursEntered: this.hoursEntered\r\n          , validatedHours: this.validatedHours,  filteredTasks: filteredTasks }\r\n        });\r\n\r\n        dialogRef.afterClosed().subscribe(res => {\r\n          if (res != undefined && res.hours) {\r\n            // this.loadLaborClassInputs();\r\n            this.updateHoursEntered.emit(res.hours);\r\n            this.updatedValidatedHours.emit(res.validatedHours);\r\n          }\r\n        });\r\n    //   }\r\n    // })\r\n  }\r\n\r\n}\r\n\r\n@Component({\r\n  selector: 'cs-input-task-exist-dialog',\r\n  templateUrl: 'cs-input-taskexist-dialog.html',\r\n})\r\nexport class CSInputTaskExistDialog {\r\n\r\n  constructor(\r\n    public dialogRef: MatDialogRef<CSInputTaskExistDialog>,\r\n    @Inject(MAT_DIALOG_DATA) public data: any) {}\r\n\r\n  onNoClick(): void {\r\n    this.dialogRef.close();\r\n  }\r\n\r\n}\r\n\r\n@Component({\r\n  selector: 'add-cs-input-dialog',\r\n  templateUrl: 'add-cs-input-dialog.html',\r\n  styleUrls: ['./add-cs-input-dialog.css']\r\n})\r\nexport class AddCSInputDialog implements OnInit {\r\n\r\n  positionId: string;\r\n  selectedTaskId: any;\r\n  hours: number = 0;\r\n  feedback: string = \"\";\r\n  userId: number;\r\n  selectedRegionId: number;\r\n  hoursBank: number;\r\n  hoursEntered: number;\r\n  validatedHours: number;\r\n  filteredTasks: any[];\r\n  task: any;\r\n  existingTask: boolean;\r\n  taskMessage: string;\r\n  csInputUserId: number;\r\n  staticInputHours: number;\r\n  user: object;\r\n\r\n  constructor(\r\n    public dialogRef: MatDialogRef<AddCSInputDialog>,\r\n    @Inject(MAT_DIALOG_DATA) public data: any, private serviceMatrix: ServiceMatrixService, private snackBar: MatSnackBarComponent,\r\n    private userService: UserService) {\r\n      dialogRef.disableClose = true;\r\n    }\r\n\r\n  ngOnInit() {\r\n    this.user = this.userService.user;\r\n    this.selectedRegionId = this.data.selectedRegionId;\r\n    this.userId = this.userService.user['id'];\r\n    this.positionId = this.data.positionId;\r\n    this.hoursBank = this.data.hoursBank;\r\n    this.hoursEntered = this.data.hoursEntered;\r\n    this.validatedHours = this.data.validatedHours;\r\n    this.selectedTaskId = this.data.task.taskId;\r\n    this.filteredTasks = this.data.filteredTasks;\r\n    this.goToTask(this.selectedTaskId);\r\n  }\r\n\r\n  onNoClick(): void {\r\n    this.dialogRef.close({\"hours\":this.hoursEntered, \"validatedHours\": this.validatedHours});\r\n  }\r\n\r\n  goToTask(taskId){\r\n    this.task = this.filteredTasks.find(e => e.taskId == taskId);\r\n    this.hours = 0;\r\n    this.feedback = \"\";\r\n    this.taskMessage = \"\";\r\n    this.existingTask = false;\r\n    this.staticInputHours = 0;\r\n    this.serviceMatrix.getCSInput(this.selectedRegionId, this.userId, this.positionId, taskId).subscribe(res => {\r\n      if(res != null && res['inputHours'] > 0){\r\n        this.hours = res['inputHours'];\r\n        this.feedback = res['feedback'];\r\n        this.staticInputHours = res['inputHours'];\r\n        this.existingTask = true;\r\n        if(res['sttsId'] == 'A'){\r\n          this.taskMessage = \"Task has been already validated\";\r\n        }\r\n        this.csInputUserId = res['userId'];\r\n      }\r\n    });\r\n  }\r\n\r\n  onUpdate() {\r\n    let csInput = new Object;\r\n    csInput['regionId'] = this.selectedRegionId;\r\n    csInput['userId'] = this.csInputUserId;\r\n    csInput['positionId'] = this.positionId;\r\n    csInput['taskId'] = this.task.taskId;\r\n    csInput['inputHours'] = this.hours;\r\n    csInput['feedback'] = this.feedback;\r\n\r\n    let vaidator:boolean= false;\r\n    if('c_lead' === this.user['userRoleByCsRoleId']['roleName']) {\r\n      vaidator = true;\r\n    }\r\n    this.serviceMatrix.editCSInput(csInput, this.userId, vaidator).subscribe(res => {\r\n      if (res) {\r\n        this.hoursEntered = this.hoursEntered + (this.hours-this.staticInputHours);\r\n        if(vaidator) {\r\n          this.validatedHours = this.validatedHours + (this.hours - this.staticInputHours);\r\n        }\r\n        this.staticInputHours = this.hours;\r\n        this.snackBar.openSnackBar(\"Input saved successfully\", 'Close', \"green-snackbar\");\r\n      } else {\r\n        this.snackBar.openSnackBar(\"Error saving input value\", 'Close', \"red-snackbar\");\r\n      }\r\n    });\r\n  }\r\n\r\n  onAdd() {\r\n    let vaidator:boolean= false;\r\n    if('c_lead' === this.user['userRoleByCsRoleId']['roleName']) {\r\n      vaidator = true;\r\n    }\r\n    this.serviceMatrix.saveCsInput(this.selectedRegionId, this.userId, this.positionId, this.task.taskId, this.hours, this.feedback, vaidator).subscribe(res => {\r\n      if (res) {\r\n        this.hoursEntered = this.hoursEntered + this.hours;\r\n        if(vaidator){\r\n            this.validatedHours = this.validatedHours + this.hours;\r\n        }\r\n        this.staticInputHours = this.hours;\r\n        this.snackBar.openSnackBar(\"Input saved successfully\", 'Close', \"green-snackbar\");\r\n        // this.dialogRef.close({\"result\":res, \"hours\":this.data.hours});\r\n      } else {\r\n        this.snackBar.openSnackBar(\"Error saving input value\", 'Close', \"red-snackbar\");\r\n      }\r\n    });\r\n  }\r\n\r\n\r\n}\r\n","module.exports = \"mat-cell,\\r\\n.mat-cell,\\r\\nmat-footer-cell,\\r\\n.mat-footer-cell,\\r\\nmat-header-cell, .mat-header-cell {\\r\\n  padding: 0.75rem !important;\\r\\n}\\r\\n\\r\\ntable, mat-paginator {\\r\\n  width: 90%;\\r\\n}\\r\\n\\r\\n.hours-container{\\r\\n  text-align: center;\\r\\n}\\r\\n\\r\\nmat-header-cell {\\r\\n  display:flex;\\r\\n  justify-content:flex-end;\\r\\n }\\r\\n\\r\\n.mat-form-field {\\r\\n   font-size: 14px;\\r\\n   width: 50%;\\r\\n }\\r\\n\\r\\n.mat-row:hover {\\r\\n  background-color: #DDD;\\r\\n}\\r\\n\\r\\n.example-fill-remaining-space {\\r\\n  /* This fills the remaining space, by using flexbox.\\r\\n     Every toolbar row uses a flexbox row layout. */\\r\\n  flex: 1 1 auto;\\r\\n}\\r\\n\\r\\nmat-toolbar  span, mat-toolbar  a  span {\\r\\n  font-size: 10pt;\\r\\n}\\r\\n\\r\\n.table-col-title {\\r\\n  font-weight: 500;\\r\\n  color: black;\\r\\n  font-size: 14px;\\r\\n}\\r\\n\\r\\n.table-col-header {\\r\\n  font-size: 12px;\\r\\n}\\r\\n\\r\\n.filter-input{\\r\\n  width: 75%;\\r\\n  text-align: left;\\r\\n}\\r\\n\\r\\n.th-header-background{\\r\\n  background: #1f4e79;\\r\\n  color: white;\\r\\n  font-size: 14px;\\r\\n}\\r\\n\\r\\n.help-text-icon {\\r\\n  font-size: 14px;\\r\\n}\\r\\n\\r\\ntr.example-detail-row {\\r\\n  height: 0;\\r\\n}\\r\\n\\r\\ntr.example-element-row:not(.example-expanded-row):hover {\\r\\n  background: #f5f5f5;\\r\\n}\\r\\n\\r\\ntr.example-element-row:not(.example-expanded-row):active {\\r\\n  background: #efefef;\\r\\n}\\r\\n\\r\\n.example-element-row td {\\r\\n  border-bottom-width: 0;\\r\\n}\\r\\n\\r\\n.example-element-detail {\\r\\n  overflow: hidden;\\r\\n  display: flex;\\r\\n  border: 1px solid #1f4e79;\\r\\n}\\r\\n\\r\\n.example-detail-row-td {\\r\\n  padding: 0px !important;\\r\\n}\\r\\n\\r\\n.example-element-diagram {\\r\\n  min-width: 80px;\\r\\n  border: 2px solid black;\\r\\n  padding: 8px;\\r\\n  font-weight: lighter;\\r\\n  margin: 8px 0;\\r\\n  height: 104px;\\r\\n}\\r\\n\\r\\n.example-element-symbol {\\r\\n  font-weight: bold;\\r\\n  font-size: 40px;\\r\\n  line-height: normal;\\r\\n}\\r\\n\\r\\n.example-element-description {\\r\\n  padding: 16px;\\r\\n}\\r\\n\\r\\n.example-element-description-attribution {\\r\\n  opacity: 0.5;\\r\\n}\\r\\n\\r\\n.expand-icon {\\r\\n  cursor: pointer;\\r\\n  color: #1f4e79;\\r\\n}\\r\\n\\r\\n.lcsummary-table {\\r\\n  border-color: lightgray;\\r\\n}\\r\\n\\r\\n.lcsummary-table td, .lcsummary-table th {\\r\\n  padding: 3px;\\r\\n}\\r\\n\\r\\n.example-element-detail:hover {\\r\\n  background-color: white;\\r\\n}\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY3VycmVudC1zdGF0ZS9sYWJvci1jbGFzcy9sYWJvci1jbGFzcy5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOzs7OztFQUtFLDJCQUEyQjtBQUM3Qjs7QUFFQTtFQUNFLFVBQVU7QUFDWjs7QUFFQTtFQUNFLGtCQUFrQjtBQUNwQjs7QUFFQTtFQUNFLFlBQVk7RUFDWix3QkFBd0I7Q0FDekI7O0FBRUE7R0FDRSxlQUFlO0dBQ2YsVUFBVTtDQUNaOztBQUVBO0VBQ0Msc0JBQXNCO0FBQ3hCOztBQUVBO0VBQ0U7bURBQ2lEO0VBQ2pELGNBQWM7QUFDaEI7O0FBRUE7RUFDRSxlQUFlO0FBQ2pCOztBQUVBO0VBQ0UsZ0JBQWdCO0VBQ2hCLFlBQVk7RUFDWixlQUFlO0FBQ2pCOztBQUVBO0VBQ0UsZUFBZTtBQUNqQjs7QUFFQTtFQUNFLFVBQVU7RUFDVixnQkFBZ0I7QUFDbEI7O0FBRUE7RUFDRSxtQkFBbUI7RUFDbkIsWUFBWTtFQUNaLGVBQWU7QUFDakI7O0FBRUE7RUFDRSxlQUFlO0FBQ2pCOztBQUdBO0VBQ0UsU0FBUztBQUNYOztBQUVBO0VBQ0UsbUJBQW1CO0FBQ3JCOztBQUVBO0VBQ0UsbUJBQW1CO0FBQ3JCOztBQUVBO0VBQ0Usc0JBQXNCO0FBQ3hCOztBQUVBO0VBQ0UsZ0JBQWdCO0VBQ2hCLGFBQWE7RUFDYix5QkFBeUI7QUFDM0I7O0FBRUE7RUFDRSx1QkFBdUI7QUFDekI7O0FBRUE7RUFDRSxlQUFlO0VBQ2YsdUJBQXVCO0VBQ3ZCLFlBQVk7RUFDWixvQkFBb0I7RUFDcEIsYUFBYTtFQUNiLGFBQWE7QUFDZjs7QUFFQTtFQUNFLGlCQUFpQjtFQUNqQixlQUFlO0VBQ2YsbUJBQW1CO0FBQ3JCOztBQUVBO0VBQ0UsYUFBYTtBQUNmOztBQUVBO0VBQ0UsWUFBWTtBQUNkOztBQUVBO0VBQ0UsZUFBZTtFQUNmLGNBQWM7QUFDaEI7O0FBRUE7RUFDRSx1QkFBdUI7QUFDekI7O0FBRUE7RUFDRSxZQUFZO0FBQ2Q7O0FBRUE7RUFDRSx1QkFBdUI7QUFDekIiLCJmaWxlIjoic3JjL2FwcC9jdXJyZW50LXN0YXRlL2xhYm9yLWNsYXNzL2xhYm9yLWNsYXNzLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyJtYXQtY2VsbCxcclxuLm1hdC1jZWxsLFxyXG5tYXQtZm9vdGVyLWNlbGwsXHJcbi5tYXQtZm9vdGVyLWNlbGwsXHJcbm1hdC1oZWFkZXItY2VsbCwgLm1hdC1oZWFkZXItY2VsbCB7XHJcbiAgcGFkZGluZzogMC43NXJlbSAhaW1wb3J0YW50O1xyXG59XHJcblxyXG50YWJsZSwgbWF0LXBhZ2luYXRvciB7XHJcbiAgd2lkdGg6IDkwJTtcclxufVxyXG5cclxuLmhvdXJzLWNvbnRhaW5lcntcclxuICB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcbn1cclxuXHJcbm1hdC1oZWFkZXItY2VsbCB7XHJcbiAgZGlzcGxheTpmbGV4O1xyXG4gIGp1c3RpZnktY29udGVudDpmbGV4LWVuZDtcclxuIH1cclxuXHJcbiAubWF0LWZvcm0tZmllbGQge1xyXG4gICBmb250LXNpemU6IDE0cHg7XHJcbiAgIHdpZHRoOiA1MCU7XHJcbiB9XHJcblxyXG4gLm1hdC1yb3c6aG92ZXIge1xyXG4gIGJhY2tncm91bmQtY29sb3I6ICNEREQ7XHJcbn1cclxuXHJcbi5leGFtcGxlLWZpbGwtcmVtYWluaW5nLXNwYWNlIHtcclxuICAvKiBUaGlzIGZpbGxzIHRoZSByZW1haW5pbmcgc3BhY2UsIGJ5IHVzaW5nIGZsZXhib3guXHJcbiAgICAgRXZlcnkgdG9vbGJhciByb3cgdXNlcyBhIGZsZXhib3ggcm93IGxheW91dC4gKi9cclxuICBmbGV4OiAxIDEgYXV0bztcclxufVxyXG5cclxubWF0LXRvb2xiYXIgIHNwYW4sIG1hdC10b29sYmFyICBhICBzcGFuIHtcclxuICBmb250LXNpemU6IDEwcHQ7XHJcbn1cclxuXHJcbi50YWJsZS1jb2wtdGl0bGUge1xyXG4gIGZvbnQtd2VpZ2h0OiA1MDA7XHJcbiAgY29sb3I6IGJsYWNrO1xyXG4gIGZvbnQtc2l6ZTogMTRweDtcclxufVxyXG5cclxuLnRhYmxlLWNvbC1oZWFkZXIge1xyXG4gIGZvbnQtc2l6ZTogMTJweDtcclxufVxyXG5cclxuLmZpbHRlci1pbnB1dHtcclxuICB3aWR0aDogNzUlO1xyXG4gIHRleHQtYWxpZ246IGxlZnQ7XHJcbn1cclxuXHJcbi50aC1oZWFkZXItYmFja2dyb3VuZHtcclxuICBiYWNrZ3JvdW5kOiAjMWY0ZTc5O1xyXG4gIGNvbG9yOiB3aGl0ZTtcclxuICBmb250LXNpemU6IDE0cHg7XHJcbn1cclxuXHJcbi5oZWxwLXRleHQtaWNvbiB7XHJcbiAgZm9udC1zaXplOiAxNHB4O1xyXG59XHJcblxyXG5cclxudHIuZXhhbXBsZS1kZXRhaWwtcm93IHtcclxuICBoZWlnaHQ6IDA7XHJcbn1cclxuXHJcbnRyLmV4YW1wbGUtZWxlbWVudC1yb3c6bm90KC5leGFtcGxlLWV4cGFuZGVkLXJvdyk6aG92ZXIge1xyXG4gIGJhY2tncm91bmQ6ICNmNWY1ZjU7XHJcbn1cclxuXHJcbnRyLmV4YW1wbGUtZWxlbWVudC1yb3c6bm90KC5leGFtcGxlLWV4cGFuZGVkLXJvdyk6YWN0aXZlIHtcclxuICBiYWNrZ3JvdW5kOiAjZWZlZmVmO1xyXG59XHJcblxyXG4uZXhhbXBsZS1lbGVtZW50LXJvdyB0ZCB7XHJcbiAgYm9yZGVyLWJvdHRvbS13aWR0aDogMDtcclxufVxyXG5cclxuLmV4YW1wbGUtZWxlbWVudC1kZXRhaWwge1xyXG4gIG92ZXJmbG93OiBoaWRkZW47XHJcbiAgZGlzcGxheTogZmxleDtcclxuICBib3JkZXI6IDFweCBzb2xpZCAjMWY0ZTc5O1xyXG59XHJcblxyXG4uZXhhbXBsZS1kZXRhaWwtcm93LXRkIHtcclxuICBwYWRkaW5nOiAwcHggIWltcG9ydGFudDtcclxufVxyXG5cclxuLmV4YW1wbGUtZWxlbWVudC1kaWFncmFtIHtcclxuICBtaW4td2lkdGg6IDgwcHg7XHJcbiAgYm9yZGVyOiAycHggc29saWQgYmxhY2s7XHJcbiAgcGFkZGluZzogOHB4O1xyXG4gIGZvbnQtd2VpZ2h0OiBsaWdodGVyO1xyXG4gIG1hcmdpbjogOHB4IDA7XHJcbiAgaGVpZ2h0OiAxMDRweDtcclxufVxyXG5cclxuLmV4YW1wbGUtZWxlbWVudC1zeW1ib2wge1xyXG4gIGZvbnQtd2VpZ2h0OiBib2xkO1xyXG4gIGZvbnQtc2l6ZTogNDBweDtcclxuICBsaW5lLWhlaWdodDogbm9ybWFsO1xyXG59XHJcblxyXG4uZXhhbXBsZS1lbGVtZW50LWRlc2NyaXB0aW9uIHtcclxuICBwYWRkaW5nOiAxNnB4O1xyXG59XHJcblxyXG4uZXhhbXBsZS1lbGVtZW50LWRlc2NyaXB0aW9uLWF0dHJpYnV0aW9uIHtcclxuICBvcGFjaXR5OiAwLjU7XHJcbn1cclxuXHJcbi5leHBhbmQtaWNvbiB7XHJcbiAgY3Vyc29yOiBwb2ludGVyO1xyXG4gIGNvbG9yOiAjMWY0ZTc5O1xyXG59XHJcblxyXG4ubGNzdW1tYXJ5LXRhYmxlIHtcclxuICBib3JkZXItY29sb3I6IGxpZ2h0Z3JheTtcclxufVxyXG5cclxuLmxjc3VtbWFyeS10YWJsZSB0ZCwgLmxjc3VtbWFyeS10YWJsZSB0aCB7XHJcbiAgcGFkZGluZzogM3B4O1xyXG59XHJcblxyXG4uZXhhbXBsZS1lbGVtZW50LWRldGFpbDpob3ZlciB7XHJcbiAgYmFja2dyb3VuZC1jb2xvcjogd2hpdGU7XHJcbn1cclxuIl19 */\"","module.exports = \"<div align=\\\"center\\\" class=\\\"mb-4\\\">\\r\\n  <mat-toolbar>\\r\\n    <div class=\\\"row w-100 m-0\\\">\\r\\n      <div class=\\\"col-md-6 text-left\\\">\\r\\n        <span> <b>My Reports</b> </span>\\r\\n\\r\\n        <button mat-button color=\\\"primary\\\" matTooltip=\\\"User Info\\\" style=\\\"cursor:default;\\\">\\r\\n          <mat-icon>account_box</mat-icon>\\r\\n          {{user.userName}}\\r\\n        </button>\\r\\n        <button mat-button color=\\\"primary\\\" matTooltip=\\\"Region/Branch/District\\\" style=\\\"cursor:default;\\\">\\r\\n          <mat-icon>language</mat-icon>\\r\\n          {{selectedRegionObj.regionByRegionId.regionName}}\\r\\n        </button>\\r\\n      </div>\\r\\n      <div class=\\\"col-md-6 text-right\\\">\\r\\n        <span> <b>Actions: </b></span>\\r\\n        <button mat-button color=\\\"primary\\\" [matMenuTriggerFor]=\\\"region\\\">\\r\\n          <mat-icon>language</mat-icon>\\r\\n          Choose Region/Branch/District\\r\\n        </button>\\r\\n\\r\\n        <mat-menu #region=\\\"matMenu\\\">\\r\\n          <button mat-menu-item *ngFor=\\\"let item of regionList\\\" (click)=\\\"chooseRegion(item.regionId)\\\">\\r\\n            {{item.regionByRegionId.regionName}} </button>\\r\\n        </mat-menu>\\r\\n\\r\\n\\r\\n        <a mat-button color=\\\"primary\\\" title=\\\"Provide Feedback\\\" target=\\\"_new\\\"\\r\\n          href=\\\"https://deloittesurvey.deloitte.com/Community/se/3FC11B2638966086\\\">\\r\\n          <mat-icon>feedback</mat-icon>\\r\\n        </a>\\r\\n        <a mat-button color=\\\"primary\\\" title=\\\"Respondent Resource Hub\\\" target=\\\"_new\\\"\\r\\n          href=\\\"http://dfgintranet/portal/BusinessOperations/Budget/ServiceBasedBudgeting/Respondents/tabid/2880/Default.aspx\\\">\\r\\n          <mat-icon>file_copy</mat-icon>\\r\\n        </a>\\r\\n\\r\\n        <button mat-button color=\\\"primary\\\" (click)=\\\"backToLogin()\\\">\\r\\n          <mat-icon>power_settings_new</mat-icon>\\r\\n          Logout\\r\\n        </button>\\r\\n      </div>\\r\\n    </div>\\r\\n  </mat-toolbar>\\r\\n\\r\\n  <table mat-table [dataSource]=\\\"dataSource\\\" matSort class=\\\"mat-elevation-z8\\\" multiTemplateDataRows>\\r\\n    <ng-container matColumnDef=\\\"expansion\\\">\\r\\n      <th mat-header-cell *matHeaderCellDef mat-sort-header class=\\\"th-header-background\\\"></th>\\r\\n      <td mat-cell *matCellDef=\\\"let element\\\" style=\\\"width:20px;\\\">\\r\\n        <i class=\\\"material-icons expand-icon\\\" *ngIf=\\\"element == expandedElement\\\" title=\\\"Collapse\\\"\\r\\n          (click)=\\\"expandRow(element)\\\">expand_less</i>\\r\\n        <i class=\\\"material-icons expand-icon\\\" *ngIf=\\\"element != expandedElement\\\" title=\\\"Expand\\\"\\r\\n          (click)=\\\"expandRow(element)\\\">expand_more</i>\\r\\n      </td>\\r\\n    </ng-container>\\r\\n\\r\\n    <ng-container matColumnDef=\\\"respondentName\\\" >\\r\\n      <th mat-header-cell *matHeaderCellDef mat-sort-header class=\\\"th-header-background\\\">Respondent Name</th>\\r\\n      <td mat-cell *matCellDef=\\\"let element\\\" style=\\\"width:150px;\\\">\\r\\n        {{element.respondentName}}\\r\\n      </td>\\r\\n    </ng-container>\\r\\n\\r\\n    <ng-container matColumnDef=\\\"positionId\\\">\\r\\n      <th mat-header-cell *matHeaderCellDef mat-sort-header class=\\\"th-header-background\\\">Position ID</th>\\r\\n      <td mat-cell *matCellDef=\\\"let element\\\">\\r\\n        {{element.positionId}}\\r\\n      </td>\\r\\n    </ng-container>\\r\\n\\r\\n    <ng-container matColumnDef=\\\"laborClassName\\\">\\r\\n      <th mat-header-cell *matHeaderCellDef mat-sort-header class=\\\"th-header-background\\\">Labor Class Name</th>\\r\\n      <td mat-cell *matCellDef=\\\"let element\\\">\\r\\n        {{element.laborClassName}}\\r\\n      </td>\\r\\n    </ng-container>\\r\\n\\r\\n    <ng-container matColumnDef=\\\"hours\\\">\\r\\n      <th mat-header-cell *matHeaderCellDef mat-sort-header class=\\\"th-header-background\\\">Hours Bank</th>\\r\\n      <td mat-cell *matCellDef=\\\"let element\\\" class=\\\"hours-container\\\">\\r\\n        {{element.hours}}\\r\\n      </td>\\r\\n    </ng-container>\\r\\n\\r\\n    <ng-container matColumnDef=\\\"inputHours\\\">\\r\\n      <th mat-header-cell *matHeaderCellDef mat-sort-header class=\\\"th-header-background\\\">Respondent Hours Entered</th>\\r\\n      <td mat-cell *matCellDef=\\\"let element\\\" class=\\\"hours-container\\\">\\r\\n        {{element.hoursEntered}}\\r\\n      </td>\\r\\n    </ng-container>\\r\\n\\r\\n    <ng-container matColumnDef=\\\"hoursRemaining\\\">\\r\\n      <th mat-header-cell *matHeaderCellDef mat-sort-header class=\\\"th-header-background\\\">Respondent Hours Remaining</th>\\r\\n      <td mat-cell *matCellDef=\\\"let element\\\" [class.text-success]=\\\"element.hoursRemaining > 0\\\" [class.text-danger]=\\\"element.hoursRemaining < 0\\\" class=\\\"hours-container\\\">\\r\\n        {{element.hoursRemaining}}\\r\\n      </td>\\r\\n    </ng-container>\\r\\n\\r\\n    <ng-container matColumnDef=\\\"validatedHours\\\">\\r\\n      <th mat-header-cell *matHeaderCellDef mat-sort-header class=\\\"th-header-background\\\">Validated Hours</th>\\r\\n      <td mat-cell *matCellDef=\\\"let element\\\" class=\\\"hours-container\\\">\\r\\n        {{element.validatedHours}}\\r\\n      </td>\\r\\n    </ng-container>\\r\\n\\r\\n    <ng-container matColumnDef=\\\"validatedHoursRemaining\\\">\\r\\n      <th mat-header-cell *matHeaderCellDef mat-sort-header class=\\\"th-header-background\\\">Unvalidated Hours Remaining</th>\\r\\n      <td mat-cell *matCellDef=\\\"let element\\\" [class.text-success]=\\\"element.validatedHoursRemaining > 0\\\" [class.text-danger]=\\\"element.validatedHoursRemaining < 0\\\" class=\\\"hours-container\\\">\\r\\n        {{element.validatedHoursRemaining}}\\r\\n      </td>\\r\\n    </ng-container>\\r\\n\\r\\n\\r\\n    <ng-container matColumnDef=\\\"actions\\\">\\r\\n      <th mat-header-cell *matHeaderCellDef mat-sort-header class=\\\"th-header-background\\\">Actions</th>\\r\\n      <td mat-cell *matCellDef=\\\"let element\\\">\\r\\n        <!-- <i class=\\\"material-icons\\\" title=\\\"Add Hours\\\" (click)=\\\"showMatrix(element)\\\">add_circle_outline</i> -->\\r\\n        <button mat-stroked-button color=\\\"primary\\\" (click)=\\\"showMatrix(element)\\\">\\r\\n          Add Hours\\r\\n        </button>\\r\\n      </td>\\r\\n    </ng-container>\\r\\n\\r\\n    <!-- Expanded Content Column - The detail row is made up of this one column that spans across all columns -->\\r\\n    <ng-container matColumnDef=\\\"expandedDetail\\\">\\r\\n      <td mat-cell *matCellDef=\\\"let element\\\" [attr.colspan]=\\\"displayedColumns.length\\\" class=\\\"example-detail-row-td\\\">\\r\\n        <div class=\\\"example-element-detail w-100\\\"\\r\\n          [@detailExpand]=\\\"element == expandedElement ? 'expanded' : 'collapsed'\\\">\\r\\n          <mat-tab-group class=\\\"w-100\\\" *ngIf=\\\"element == expandedElement\\\">\\r\\n            <mat-tab label=\\\"Add Task\\\">\\r\\n              <ng-template matTabContent>\\r\\n                <div *ngIf=\\\"taskCatalog != null && taskCatalog.length > 0\\\">\\r\\n                  <app-labor-class-tasks [taskCatalog]=\\\"taskCatalog\\\" [hoursBank]=\\\"element.hours\\\"\\r\\n                   [hoursEntered]=\\\"element.hoursEntered\\\" [validatedHours]=\\\"element.validatedHours\\\" [positionId]=\\\"element.positionId\\\"\\r\\n                   [regionId]=\\\"selectedRegionId\\\" (updateHoursEntered)=\\\"updateHoursEntered(element, $event)\\\"\\r\\n                   (updatedValidatedHours)= \\\"updatedValidatedHours(element, $event)\\\"\\r\\n                   ></app-labor-class-tasks>\\r\\n                </div>\\r\\n              </ng-template>\\r\\n            </mat-tab>\\r\\n            <mat-tab label=\\\"Inputs\\\">\\r\\n              <ng-template matTabContent>\\r\\n                <app-labor-class-inputs [positionId]=\\\"element.positionId\\\" [hoursBank]=\\\"element.hours\\\"\\r\\n                  [hoursEntered]=\\\"element.hoursEntered\\\"\\r\\n                  [validatdHours]=\\\"element.validatedHours\\\"\\r\\n                  (hoursEntered)=\\\"updateHoursEntered(element, $event)\\\"\\r\\n                  (validatedHours)=\\\"updatedValidatedHours(element, $event)\\\"\\r\\n                  (copyInd) = \\\"reloadLaborClass()\\\"\\r\\n                  [regionId]=\\\"selectedRegionObj.regionByRegionId.regionId\\\"\\r\\n                  [laborMappings] = \\\"laborMappings\\\"></app-labor-class-inputs>\\r\\n              </ng-template>\\r\\n            </mat-tab>\\r\\n          </mat-tab-group>\\r\\n        </div>\\r\\n      </td>\\r\\n    </ng-container>\\r\\n\\r\\n    <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\r\\n    <tr mat-row *matRowDef=\\\"let element; columns: displayedColumns;\\\" class=\\\"example-element-row\\\"\\r\\n      [class.example-expanded-row]=\\\"expandedElement === element\\\"></tr>\\r\\n    <tr mat-row *matRowDef=\\\"let row; columns: ['expandedDetail']\\\" class=\\\"example-detail-row\\\"></tr>\\r\\n  </table>\\r\\n  <mat-paginator #paginator [pageSizeOptions]=\\\"[5, 10, 20, 50, 100]\\\" showFirstLastButtons></mat-paginator>\\r\\n</div>\\r\\n\"","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { ServiceMatrixService } from 'src/app/service/service-matrix.service';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { MatTableDataSource, MatPaginator, MatSort } from '@angular/material';\r\nimport { animate, state, style, transition, trigger } from '@angular/animations';\r\nimport { UserService } from 'src/app/_services';\r\nimport { useAnimation } from '@angular/animations';\r\nimport { DataSource } from '@angular/cdk/table';\r\nimport { Observable } from 'rxjs';\r\nimport { map, startWith } from 'rxjs/operators';\r\nimport { MatSnackBarComponent } from 'src/app/service/mat-snack-bar/mat-snack-bar.component';\r\nimport { FormControl } from '@angular/forms';\r\n\r\n@Component({\r\n  selector: 'app-labor-class',\r\n  templateUrl: './labor-class.component.html',\r\n  styleUrls: ['./labor-class.component.css'],\r\n  animations: [\r\n    trigger('detailExpand', [\r\n      state('collapsed', style({ height: '0px', minHeight: '0', visibility: 'hidden' })),\r\n      state('expanded', style({ height: '*' })),\r\n      transition('expanded <=> collapsed', animate('225ms cubic-bezier(0.4, 0.0, 0.2, 1)')),\r\n    ]),\r\n  ]\r\n})\r\nexport class LaborClassComponent implements OnInit {\r\n\r\n  dataSource = new MatTableDataSource<Object>();\r\n  expandedElement: Object | null;\r\n  user: any = null;\r\n  displayedColumns: string[] = [];\r\n  selectedRegionId: number;\r\n  selectedRegionObj: Object;\r\n  @ViewChild(MatPaginator) paginator: MatPaginator;\r\n  @ViewChild(MatSort) sort: MatSort;\r\n  regionList: [];\r\n  taskCatalog: [];\r\n  // serviceNames = new Set();\r\n  // programs = new Set();\r\n  // subprograms = new Set();\r\n  // taskcategories = new Set();\r\n  // tasks: Object[];\r\n  filteredtasks: Object[];\r\n\r\n  servicename: string;\r\n  program: string;\r\n  subprogram: string;\r\n  taskcategory: string;\r\n  taskid: string;\r\n  taskhours: number = 0;\r\n  fundingsource: string;\r\n  feedback: string = \"\";\r\n  selectedIndex: number = 1;\r\n\r\n  options: string[] = ['One', 'Two', 'Three'];\r\n  filteredOptions: Observable<string[]>;\r\n  positions: any;\r\n  laborMappings:any ;\r\n\r\n  constructor(private http: HttpClient, private router: Router, private serviceMatrix: ServiceMatrixService,\r\n    private userService: UserService, private route: ActivatedRoute, private snackBar: MatSnackBarComponent) { }\r\n\r\n  ngOnInit() {\r\n    this.route.params.subscribe(params => {\r\n      this.selectedRegionId = params['regionId'];\r\n      this.customInit(this.selectedRegionId);\r\n      this.loadTaskCatalog();\r\n    });\r\n    // this.filteredOptions = this.myControl.valueChanges\r\n    //   .pipe(\r\n    //     startWith(''),\r\n    //     map(value => this._filter(value))\r\n    //   );\r\n  }\r\n\r\n  loadTaskCatalog() {\r\n    this.taskCatalog = JSON.parse(localStorage.getItem('csServiceMatrix'));\r\n    if (this.taskCatalog == null || this.taskCatalog.length <= 0) {\r\n      console.time(\"Loading Task Catalog\");\r\n      this.serviceMatrix.getCsMatrixData()\r\n        .subscribe(res => {\r\n          this.taskCatalog = res as [];\r\n          // this.taskCatalog.forEach(e => this.serviceNames.add(e[\"serviceName\"]));\r\n          localStorage.setItem('csServiceMatrix', JSON.stringify(res as []));\r\n        });\r\n      console.time(\"Loaded Task Catalog\");\r\n    }\r\n    // else {\r\n    //   this.taskCatalog.forEach(e => this.serviceNames.add(e[\"serviceName\"]));\r\n    // }\r\n  }\r\n\r\n  // private _filter(value: string) {\r\n  //   const filterValue = value.toLowerCase();\r\n  //   return this.tasks.filter(e => e['name'].toLowerCase().includes(filterValue));\r\n  // }\r\n\r\n  // filterServices() {\r\n  //   let fltr = this.taskCatalog.filter(e => e[\"serviceName\"] == this.servicename);\r\n  //   this.programs = new Set();\r\n  //   this.tasks = [];\r\n  //   this.taskid = \"\";\r\n  //   fltr.forEach(e => {\r\n  //     this.programs.add(e[\"program\"]);\r\n  //     this.tasks.push({ \"id\": e[\"taskId\"], \"name\": e[\"taskName\"] });\r\n  //   });\r\n  // }\r\n\r\n  // filterPrograms() {\r\n  //   let fltr = this.taskCatalog.filter(e => e[\"program\"] == this.program);\r\n  //   this.subprograms = new Set();\r\n  //   this.tasks = [];\r\n  //   this.taskid = \"\";\r\n  //   fltr.forEach(e => {\r\n  //     this.subprograms.add(e[\"subProgram\"]);\r\n  //     this.tasks.push({ \"id\": e[\"taskId\"], \"name\": e[\"taskName\"] });\r\n  //   });\r\n  // }\r\n\r\n  // filterSubPrograms() {\r\n  //   let fltr = this.taskCatalog.filter(e => e[\"subProgram\"] == this.subprogram);\r\n  //   this.taskcategories = new Set();\r\n  //   this.tasks = [];\r\n  //   this.taskid = \"\";\r\n  //   fltr.forEach(e => {\r\n  //     this.taskcategories.add(e[\"taskCategory\"]);\r\n  //     this.tasks.push({ \"id\": e[\"taskId\"], \"name\": e[\"taskName\"] });\r\n  //   });\r\n  // }\r\n\r\n  // filterTaskCategories() {\r\n  //   let fltr = this.taskCatalog.filter(e => e[\"taskCategory\"] == this.taskcategory);\r\n  //   this.tasks = [];\r\n  //   this.taskid = \"\";\r\n  //   fltr.forEach(e => this.tasks.push({ \"id\": e[\"taskId\"], \"name\": e[\"taskName\"] }));\r\n  // }\r\n\r\n  // filterTasks(searchVal) {\r\n  //   this.filteredtasks = this._filter(searchVal);\r\n  // }\r\n\r\n  addTask() {\r\n    var pid = this.expandedElement['positionId'];\r\n    this.serviceMatrix.saveCsInput(this.selectedRegionId, this.user[\"id\"], pid, this.taskid, this.taskhours, this.feedback, false)\r\n      .subscribe(res => {\r\n        this.snackBar.openSnackBar(\"Input saved successfully\", 'Close', \"green-snackbar\");\r\n        this.expandedElement['hoursEntered'] = this.expandedElement['hoursEntered'] + this.taskhours;\r\n        //this.expandedElement['validatedHours'] = this.expandedElement['validatedHours'] + this.taskhours;\r\n      });\r\n  }\r\n\r\n  updateHoursEntered(element, hours){\r\n    element['hoursEntered'] = Math.round(hours);\r\n    element['hoursRemaining'] = Math.round(element['hours'] - element['hoursEntered']);\r\n  }\r\n\r\n  updatedValidatedHours(element, hours) {\r\n    element['validatedHours'] = Math.round(hours);\r\n    element['validatedHoursRemaining'] = Math.round(element['hours'] - element['validatedHours']);\r\n  }\r\n\r\n  reloadLaborClass(){\r\n    this.customInit(this.selectedRegionId);\r\n  }\r\n\r\n  updateHoursEnteredFromAdd(element, hours){\r\n    element['hoursEntered'] = element['hoursEntered'] + hours;\r\n    element['hoursRemaining'] = element['hours'] - element['hoursEntered'];\r\n  }\r\n\r\n  resetAddTaskForm() {\r\n    this.servicename = \"\";\r\n    this.program = \"\";\r\n    this.subprogram = \"\";\r\n    this.taskcategory = \"\";\r\n    this.taskid = \"\";\r\n    this.taskhours = 0;\r\n    this.fundingsource = \"\";\r\n    this.feedback = \"\";\r\n  }\r\n\r\n  customInit(regionId) {\r\n    console.time(\"Landing Page\");\r\n    this.user = this.userService.user;\r\n    this.regionList = this.user['userRegionMappingsById'].sort(\r\n      (function(a, b){\r\n      if(a.regionByRegionId.regionName < b.regionByRegionId.regionName) { return -1; }\r\n      if(a.regionByRegionId.regionName > b.regionByRegionId.regionName) { return 1; }\r\n      return 0;\r\n    }));\r\n\r\n    this.selectedRegionObj = this.regionList.find(e => e[\"regionId\"] == regionId);\r\n    if (this.user != null) {\r\n      //var result = [];\r\n      this.serviceMatrix.getLaborMappingsData(this.selectedRegionId, this.user[\"id\"]).subscribe(res => {\r\n        //result = res as Object[];\r\n        this.laborMappings = res as Object[];\r\n        // result.forEach(element => {\r\n        //   var inputHours = 0;\r\n        //   element[\"csUserLaborClassInputs\"].forEach(e => {\r\n        //     inputHours = inputHours + e[\"inputHours\"];\r\n        //   });\r\n        //   element[\"inputHours\"] = inputHours;\r\n        // });\r\n\r\n        this.laborMappings.forEach(element => {\r\n          element.hoursRemaining = element.hours - element.hoursEntered;\r\n          element.validatedHoursRemaining = element.hours - element.validatedHours;\r\n        });\r\n        this.setDatasource(this.selectedRegionId, this.laborMappings);\r\n      });\r\n    }\r\n    console.time(\"Landing Page loaded\");\r\n  }\r\n\r\n  chooseRegion(regionId: number) {\r\n    this.router.navigate([\"currentState\", regionId]);\r\n  }\r\n\r\n  setDatasource(regionId, userLsMappingByRegion) {\r\n    this.dataSource.data = [];\r\n    if('c_lead' === this.user['userRoleByCsRoleId']['roleName']) {\r\n      this.displayedColumns = [\"expansion\", \"respondentName\", \"positionId\", \"laborClassName\", \"hours\", \"inputHours\", \"hoursRemaining\", \"validatedHours\", \"validatedHoursRemaining\"];\r\n    } else {\r\n      this.displayedColumns = [\"expansion\", \"positionId\", \"laborClassName\", \"hours\", \"inputHours\", \"hoursRemaining\", \"validatedHours\", \"validatedHoursRemaining\"];\r\n    }\r\n    this.dataSource.data = userLsMappingByRegion as Object[];\r\n    this.dataSource.sort = this.sort;\r\n    this.paginator.pageSize = 20;\r\n    this.dataSource.paginator = this.paginator;\r\n  }\r\n\r\n  backToLogin() {\r\n    this.router.navigate([\"login\"]);\r\n  }\r\n\r\n  showMatrix(row) {\r\n    this.router.navigate(['csLaborHours', this.selectedRegionId, row.laborClassName]);\r\n  }\r\n\r\n  expandRow(element) {\r\n    this.resetAddTaskForm();\r\n    this.expandedElement = this.expandedElement === element ? null : element;\r\n  }\r\n}\r\n","module.exports = \"mat-cell,\\r\\n.mat-cell,\\r\\nmat-footer-cell,\\r\\n.mat-footer-cell,\\r\\nmat-header-cell, .mat-header-cell {\\r\\n  padding: 0.75rem !important;\\r\\n}\\r\\n\\r\\ntable, mat-paginator {\\r\\n  width: 90%;\\r\\n}\\r\\n\\r\\nmat-header-cell {\\r\\n  display:flex;\\r\\n  justify-content:flex-end;\\r\\n }\\r\\n\\r\\n.mat-form-field {\\r\\n   font-size: 14px;\\r\\n   width: 50%;\\r\\n }\\r\\n\\r\\n.mat-row:hover {\\r\\n  background-color: #DDD;\\r\\n}\\r\\n\\r\\n.example-fill-remaining-space {\\r\\n  /* This fills the remaining space, by using flexbox.\\r\\n     Every toolbar row uses a flexbox row layout. */\\r\\n  flex: 1 1 auto;\\r\\n}\\r\\n\\r\\nmat-toolbar  span, mat-toolbar  a  span {\\r\\n  font-size: 10pt;\\r\\n}\\r\\n\\r\\n.table-col-title {\\r\\n  font-weight: 500;\\r\\n  color: black;\\r\\n  font-size: 14px;\\r\\n}\\r\\n\\r\\n.table-col-header {\\r\\n  font-size: 12px;\\r\\n}\\r\\n\\r\\n.filter-input{\\r\\n  width: 75%;\\r\\n  text-align: left;\\r\\n}\\r\\n\\r\\n.th-header-background{\\r\\n  background: #1f4e79;\\r\\n  color: white;\\r\\n  font-size: 14px;\\r\\n}\\r\\n\\r\\n.help-text-icon {\\r\\n  font-size: 14px;\\r\\n}\\r\\n\\r\\n.labor-hours-card {\\r\\n  max-width: 1000px;\\r\\n  margin-top: 10px;\\r\\n  margin-top: 10px;\\r\\n}\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY3VycmVudC1zdGF0ZS9sYWJvci1ob3VyLWRldGFpbHMvbGFib3ItaG91ci1kZXRhaWxzLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7O0VBS0UsMkJBQTJCO0FBQzdCOztBQUVBO0VBQ0UsVUFBVTtBQUNaOztBQUVBO0VBQ0UsWUFBWTtFQUNaLHdCQUF3QjtDQUN6Qjs7QUFFQTtHQUNFLGVBQWU7R0FDZixVQUFVO0NBQ1o7O0FBRUE7RUFDQyxzQkFBc0I7QUFDeEI7O0FBRUE7RUFDRTttREFDaUQ7RUFDakQsY0FBYztBQUNoQjs7QUFFQTtFQUNFLGVBQWU7QUFDakI7O0FBRUE7RUFDRSxnQkFBZ0I7RUFDaEIsWUFBWTtFQUNaLGVBQWU7QUFDakI7O0FBRUE7RUFDRSxlQUFlO0FBQ2pCOztBQUVBO0VBQ0UsVUFBVTtFQUNWLGdCQUFnQjtBQUNsQjs7QUFFQTtFQUNFLG1CQUFtQjtFQUNuQixZQUFZO0VBQ1osZUFBZTtBQUNqQjs7QUFFQTtFQUNFLGVBQWU7QUFDakI7O0FBRUE7RUFDRSxpQkFBaUI7RUFDakIsZ0JBQWdCO0VBQ2hCLGdCQUFnQjtBQUNsQiIsImZpbGUiOiJzcmMvYXBwL2N1cnJlbnQtc3RhdGUvbGFib3ItaG91ci1kZXRhaWxzL2xhYm9yLWhvdXItZGV0YWlscy5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsibWF0LWNlbGwsXHJcbi5tYXQtY2VsbCxcclxubWF0LWZvb3Rlci1jZWxsLFxyXG4ubWF0LWZvb3Rlci1jZWxsLFxyXG5tYXQtaGVhZGVyLWNlbGwsIC5tYXQtaGVhZGVyLWNlbGwge1xyXG4gIHBhZGRpbmc6IDAuNzVyZW0gIWltcG9ydGFudDtcclxufVxyXG5cclxudGFibGUsIG1hdC1wYWdpbmF0b3Ige1xyXG4gIHdpZHRoOiA5MCU7XHJcbn1cclxuXHJcbm1hdC1oZWFkZXItY2VsbCB7XHJcbiAgZGlzcGxheTpmbGV4O1xyXG4gIGp1c3RpZnktY29udGVudDpmbGV4LWVuZDtcclxuIH1cclxuXHJcbiAubWF0LWZvcm0tZmllbGQge1xyXG4gICBmb250LXNpemU6IDE0cHg7XHJcbiAgIHdpZHRoOiA1MCU7XHJcbiB9XHJcblxyXG4gLm1hdC1yb3c6aG92ZXIge1xyXG4gIGJhY2tncm91bmQtY29sb3I6ICNEREQ7XHJcbn1cclxuXHJcbi5leGFtcGxlLWZpbGwtcmVtYWluaW5nLXNwYWNlIHtcclxuICAvKiBUaGlzIGZpbGxzIHRoZSByZW1haW5pbmcgc3BhY2UsIGJ5IHVzaW5nIGZsZXhib3guXHJcbiAgICAgRXZlcnkgdG9vbGJhciByb3cgdXNlcyBhIGZsZXhib3ggcm93IGxheW91dC4gKi9cclxuICBmbGV4OiAxIDEgYXV0bztcclxufVxyXG5cclxubWF0LXRvb2xiYXIgIHNwYW4sIG1hdC10b29sYmFyICBhICBzcGFuIHtcclxuICBmb250LXNpemU6IDEwcHQ7XHJcbn1cclxuXHJcbi50YWJsZS1jb2wtdGl0bGUge1xyXG4gIGZvbnQtd2VpZ2h0OiA1MDA7XHJcbiAgY29sb3I6IGJsYWNrO1xyXG4gIGZvbnQtc2l6ZTogMTRweDtcclxufVxyXG5cclxuLnRhYmxlLWNvbC1oZWFkZXIge1xyXG4gIGZvbnQtc2l6ZTogMTJweDtcclxufVxyXG5cclxuLmZpbHRlci1pbnB1dHtcclxuICB3aWR0aDogNzUlO1xyXG4gIHRleHQtYWxpZ246IGxlZnQ7XHJcbn1cclxuXHJcbi50aC1oZWFkZXItYmFja2dyb3VuZHtcclxuICBiYWNrZ3JvdW5kOiAjMWY0ZTc5O1xyXG4gIGNvbG9yOiB3aGl0ZTtcclxuICBmb250LXNpemU6IDE0cHg7XHJcbn1cclxuXHJcbi5oZWxwLXRleHQtaWNvbiB7XHJcbiAgZm9udC1zaXplOiAxNHB4O1xyXG59XHJcblxyXG4ubGFib3ItaG91cnMtY2FyZCB7XHJcbiAgbWF4LXdpZHRoOiAxMDAwcHg7XHJcbiAgbWFyZ2luLXRvcDogMTBweDtcclxuICBtYXJnaW4tdG9wOiAxMHB4O1xyXG59XHJcbiJdfQ== */\"","module.exports = \"<div align=\\\"center\\\" class=\\\"mb-4\\\">\\r\\n  <mat-toolbar>\\r\\n    <div class=\\\"row w-100 m-0\\\">\\r\\n      <div class=\\\"col-md-6 text-left\\\">\\r\\n        <span> <b>Task Catalog</b> </span>\\r\\n\\r\\n        <button mat-button color=\\\"primary\\\" matTooltip=\\\"User Info\\\" style=\\\"cursor:default;\\\">\\r\\n          <mat-icon>account_box</mat-icon>\\r\\n          {{user.userName}}\\r\\n        </button>\\r\\n        <button mat-button color=\\\"primary\\\" matTooltip=\\\"Region/Branch/District\\\" style=\\\"cursor:default;\\\">\\r\\n          <mat-icon>language</mat-icon>\\r\\n          {{selectedRegionObj.regionByRegionId.regionName}}\\r\\n        </button>\\r\\n      </div>\\r\\n      <div class=\\\"col-md-6 text-right\\\">\\r\\n        <span> <b>Actions: </b></span>\\r\\n\\r\\n        <button mat-button color=\\\"primary\\\" (click)=\\\"backToLandingPage()\\\">\\r\\n          <mat-icon>arrow_back</mat-icon>\\r\\n          Back to Landing Page\\r\\n        </button>\\r\\n\\r\\n\\r\\n        <a mat-button color=\\\"primary\\\" title=\\\"Provide Feedback\\\" target=\\\"_new\\\"\\r\\n          href=\\\"https://deloittesurvey.deloitte.com/Community/se/3FC11B2638966086\\\">\\r\\n          <mat-icon>feedback</mat-icon>\\r\\n        </a>\\r\\n        <a mat-button color=\\\"primary\\\" title=\\\"Respondent Resource Hub\\\" target=\\\"_new\\\"\\r\\n          href=\\\"http://dfgintranet/portal/BusinessOperations/Budget/ServiceBasedBudgeting/Respondents/tabid/2880/Default.aspx\\\">\\r\\n          <mat-icon>file_copy</mat-icon>\\r\\n        </a>\\r\\n\\r\\n        <button mat-button color=\\\"primary\\\" (click)=\\\"backToLogin()\\\">\\r\\n          <mat-icon>power_settings_new</mat-icon>\\r\\n          Logout\\r\\n        </button>\\r\\n      </div>\\r\\n    </div>\\r\\n  </mat-toolbar>\\r\\n\\r\\n  <mat-card class=\\\"labor-hours-card\\\">\\r\\n    <mat-card-header>\\r\\n      <mat-card-title>{{selectedLaborClassName}}\\r\\n      </mat-card-title>\\r\\n    </mat-card-header>\\r\\n    <mat-card-content>\\r\\n\\r\\n      <p-table [value]=\\\"csHoursData\\\" dataKey=\\\"taskId\\\">\\r\\n        <ng-template pTemplate=\\\"header\\\">\\r\\n          <tr>\\r\\n            <th>TaskID</th>\\r\\n            <th>TaskName</th>\\r\\n            <th>Hours</th>\\r\\n            <th>Funding Source</th>\\r\\n            <th style=\\\"width:8em\\\"></th>\\r\\n          </tr>\\r\\n        </ng-template>\\r\\n        <ng-template pTemplate=\\\"body\\\" let-rowData let-editing=\\\"editing\\\" let-ri=\\\"rowIndex\\\">\\r\\n          <tr [pEditableRow]=\\\"rowData\\\">\\r\\n            <td>\\r\\n              {{rowData.taskId}}\\r\\n            </td>\\r\\n            <td>\\r\\n            <td>\\r\\n              {{rowData.taskName}}\\r\\n            </td>\\r\\n            <td pEditableColumn>\\r\\n              <p-cellEditor>\\r\\n                <ng-template pTemplate=\\\"input\\\">\\r\\n                  <input pInputText type=\\\"text\\\" [(ngModel)]=\\\"rowData.inputHours\\\">\\r\\n                </ng-template>\\r\\n                <ng-template pTemplate=\\\"output\\\">\\r\\n                  {{rowData.inputHours}}\\r\\n                </ng-template>\\r\\n              </p-cellEditor>\\r\\n            </td>\\r\\n            <td pEditableColumn>\\r\\n              <p-cellEditor>\\r\\n                <ng-template pTemplate=\\\"input\\\">\\r\\n                  <p-dropdown [options]=\\\"fundingSources\\\" [(ngModel)]=\\\"rowData.fundingSource\\\" [style]=\\\"{'width':'100%'}\\\">\\r\\n                  </p-dropdown>\\r\\n                </ng-template>\\r\\n                <ng-template pTemplate=\\\"output\\\">\\r\\n                  {{rowData.fundingSource}}\\r\\n                </ng-template>\\r\\n              </p-cellEditor>\\r\\n            </td>\\r\\n\\r\\n            <td style=\\\"text-align:center\\\">\\r\\n              <button *ngIf=\\\"!editing\\\" pButton type=\\\"button\\\" pInitEditableRow icon=\\\"pi pi-pencil\\\" class=\\\"ui-button-info\\\"\\r\\n                (click)=\\\"onRowEditInit(rowData)\\\">Edit</button>\\r\\n              <button *ngIf=\\\"editing\\\" pButton type=\\\"button\\\" pSaveEditableRow icon=\\\"pi pi-check\\\"\\r\\n                class=\\\"ui-button-success\\\" style=\\\"margin-right: .5em\\\" (click)=\\\"onRowEditSave(rowData)\\\">Save</button>\\r\\n              <button *ngIf=\\\"editing\\\" pButton type=\\\"button\\\" pCancelEditableRow icon=\\\"pi pi-times\\\"\\r\\n                class=\\\"ui-button-danger\\\" (click)=\\\"onRowEditCancel(rowData, ri)\\\">Cancel</button>\\r\\n            </td>\\r\\n          </tr>\\r\\n        </ng-template>\\r\\n      </p-table>\\r\\n    </mat-card-content>\\r\\n  </mat-card>\\r\\n\\r\\n\\r\\n  <mat-form-field>\\r\\n    <input matInput (keyup)=\\\"applyFilter($event.target.value)\\\" placeholder=\\\"Filter\\\" [(ngModel)]=\\\"globalFilter\\\">\\r\\n  </mat-form-field>\\r\\n  <button mat-button color=\\\"primary\\\" (click)=\\\"clearAllFilters()\\\">Clear All Filters</button>\\r\\n\\r\\n  <table mat-table [dataSource]=\\\"dataSource\\\" matSort class=\\\"mat-elevation-z8\\\">\\r\\n    <ng-container matColumnDef=\\\"taskId\\\">\\r\\n      <th mat-header-cell *matHeaderCellDef mat-sort-header class=\\\"th-header-background\\\">Task ID</th>\\r\\n      <td mat-cell *matCellDef=\\\"let element\\\">\\r\\n        {{element.taskId}}\\r\\n      </td>\\r\\n    </ng-container>\\r\\n\\r\\n    <ng-container matColumnDef=\\\"serviceName\\\">\\r\\n      <th mat-header-cell *matHeaderCellDef mat-sort-header class=\\\"th-header-background\\\">Service</th>\\r\\n      <td mat-cell *matCellDef=\\\"let element\\\">\\r\\n        {{element.serviceName}}\\r\\n      </td>\\r\\n    </ng-container>\\r\\n\\r\\n    <ng-container matColumnDef=\\\"program\\\">\\r\\n      <th mat-header-cell *matHeaderCellDef mat-sort-header class=\\\"th-header-background\\\">Program</th>\\r\\n      <td mat-cell *matCellDef=\\\"let element\\\">\\r\\n        {{element.program}}\\r\\n      </td>\\r\\n    </ng-container>\\r\\n\\r\\n    <ng-container matColumnDef=\\\"subProgram\\\">\\r\\n      <th mat-header-cell *matHeaderCellDef mat-sort-header class=\\\"th-header-background\\\">Sub Program</th>\\r\\n      <td mat-cell *matCellDef=\\\"let element\\\">\\r\\n        {{element.subProgram}}\\r\\n      </td>\\r\\n    </ng-container>\\r\\n\\r\\n    <ng-container matColumnDef=\\\"taskCategory\\\">\\r\\n      <th mat-header-cell *matHeaderCellDef mat-sort-header class=\\\"th-header-background\\\">Task Category</th>\\r\\n      <td mat-cell *matCellDef=\\\"let element\\\">\\r\\n        {{element.taskCategory}}\\r\\n      </td>\\r\\n    </ng-container>\\r\\n\\r\\n    <ng-container matColumnDef=\\\"taskName\\\">\\r\\n      <th mat-header-cell *matHeaderCellDef mat-sort-header class=\\\"th-header-background\\\">Task</th>\\r\\n      <td mat-cell *matCellDef=\\\"let element\\\">\\r\\n        {{element.taskName}}\\r\\n      </td>\\r\\n    </ng-container>\\r\\n\\r\\n    <ng-container matColumnDef=\\\"hoursSpent\\\">\\r\\n      <th mat-header-cell *matHeaderCellDef mat-sort-header class=\\\"th-header-background\\\">Hours Spent</th>\\r\\n      <td mat-cell *matCellDef=\\\"let element\\\">\\r\\n        <button mat-button color=\\\"primary\\\" matTooltip=\\\"Assign Hours\\\" style=\\\"cursor:default;\\\">\\r\\n          <mat-icon>edit</mat-icon>\\r\\n        </button>\\r\\n      </td>\\r\\n    </ng-container>\\r\\n\\r\\n    <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\r\\n    <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\" (click)=\\\"assignHours(row)\\\"></tr>\\r\\n  </table>\\r\\n  <mat-paginator #paginator [pageSizeOptions]=\\\"[5, 20, 50, 100]\\\" showFirstLastButtons></mat-paginator>\\r\\n\\r\\n</div>\"","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { ServiceMatrixService } from 'src/app/service/service-matrix.service';\r\nimport { MatTableDataSource, MatPaginator, MatSort } from '@angular/material';\r\nimport { UserService } from 'src/app/_services';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { SelectItem } from 'primeng/components/common/selectitem';\r\n\r\n\r\n@Component({\r\n  selector: 'app-labor-hour-details',\r\n  templateUrl: './labor-hour-details.component.html',\r\n  styleUrls: ['./labor-hour-details.component.css']\r\n})\r\nexport class LaborHourDetailsComponent implements OnInit {\r\n  user: Object;\r\n  selectedLaborClassName: string;\r\n  selectedRegionId: number;\r\n  selectedRegionObj: Object;\r\n  selectedTask:Object;\r\n  assignedTasks: Object[] = new Array();\r\n  taskCatalog: Object[];\r\n  dataSource = new MatTableDataSource<Object>();\r\n  @ViewChild(MatPaginator) paginator: MatPaginator;\r\n  @ViewChild(MatSort) sort: MatSort;\r\n  regionList: [];\r\n  displayedColumns = [\"taskId\", \"serviceName\", \"program\",\r\n  \"subProgram\", \"taskCategory\", \"taskName\", \"hoursSpent\"];\r\n\r\n   csHoursData: any = [];\r\n   data: any = [];\r\n\r\n   fundingSources: SelectItem[];\r\n\r\n\r\n  constructor( private serviceMatrix: ServiceMatrixService, private userService:UserService,\r\n  private router: Router, private route: ActivatedRoute) { }\r\n\r\n  ngOnInit() {\r\n    this.route.params.subscribe(params => {\r\n      this.selectedRegionId = params['regionId'];\r\n      this.selectedLaborClassName = params['laborClassName'];\r\n      this.customInit(params);\r\n    });\r\n  }\r\n\r\n\r\n  addRow(row:any) {\r\n    this.csHoursData = [...this.csHoursData];\r\n    this.csHoursData.push({taskId: row.taskId, taskName: row.taskName, isEditable:false});\r\n  }\r\n\r\n  customInit(params){\r\n    this.user = this.userService.user;\r\n    this.setRegionDetails(this.user);\r\n    this.selectedRegionObj = this.regionList.find(e => e[\"regionId\"] == params['regionId']);\r\n    if(localStorage.getItem('csServiceMatrix') == null || localStorage.getItem('csServiceMatrix') == undefined){\r\n      this.serviceMatrix.getCsMatrixData()\r\n      .subscribe(res => {\r\n        this.taskCatalog = res as Object[];\r\n        this.setDataSource(res as Object[]);\r\n        localStorage.setItem('csServiceMatrix', JSON.stringify(res as Object[]));\r\n      });\r\n    } else {\r\n      this.setDataSource(JSON.parse(localStorage.getItem('csServiceMatrix')) as Object[]);\r\n    }\r\n\r\n    this.fundingSources = [\r\n    {label: 'FS1', value: 'Funding Source 1'},\r\n    {label: 'FS2', value: 'Funding Source 2'},\r\n    {label: 'FS3', value: 'Funding Source 3'},\r\n    {label: 'FS4', value: 'Funding Source 4'},\r\n    {label: 'FS5', value: 'Funding Source 5'},\r\n    {label: 'FS6', value: 'Funding Source 6'},\r\n  ];\r\n  }\r\n\r\n  setRegionDetails(user: Object) {\r\n    this.regionList = user['userRegionMappingsById'];\r\n  }\r\n\r\n  setDataSource(res:Object[]){\r\n    this.dataSource.data = res;\r\n    this.dataSource.sort = this.sort;\r\n    this.dataSource.paginator = this.paginator;\r\n  }\r\n\r\n  backToLogin(){\r\n    this.serviceMatrix.logout(this.userService.user['id']);\r\n    this.router.navigate([\"login\"]);\r\n  }\r\n\r\n  backToLandingPage(){\r\n    this.router.navigate(['currentState', this.selectedRegionId]);\r\n  }\r\n\r\n  assignHours(row:any){\r\n    this.selectedTask = row;\r\n    this.assignedTasks.push(row);\r\n    this.addRow(row);\r\n  }\r\n\r\n  onRowEditInit(csHoursData: any) {\r\n    alert('Inside edit' + csHoursData.taskId);\r\n  }\r\n\r\nonRowEditSave(csHoursData: any) {\r\n    alert('Inside Save');\r\n}\r\n\r\nonRowEditCancel(csHoursData: any, index: number) {\r\n    alert('Inside Cancel');\r\n}\r\n\r\n}\r\n","module.exports = \"<!-- <h1 mat-dialog-title>{{data.name}}</h1> -->\\r\\n<div mat-dialog-content>\\r\\n  <p>Please choose the data type: Mission Level or Current State </p>\\r\\n</div>\\r\\n<div class=\\\"text-center\\\">\\r\\n  <button mat-raised-button (click)=\\\"closeDialog('mission')\\\" class=\\\"mr-2\\\">Mission Level</button>\\r\\n  <button mat-raised-button color=\\\"primary\\\" (click)=\\\"closeDialog('current')\\\" cdkFocusInitial>Current State</button>\\r\\n</div>\\r\\n\"","module.exports = \".loginForm {\\r\\n  min-height: 50vh;\\r\\n  padding-top: 80px;\\r\\n  width: 350px;\\r\\n  margin: auto;\\r\\n}\\r\\n\\r\\n.text-center {\\r\\n  text-align: center;\\r\\n}\\r\\n\\r\\n.login-table {\\r\\n  width: 85%;\\r\\n  margin: auto;\\r\\n}\\r\\n\\r\\n.login-table .mat-form-field {\\r\\n  width: 100%;\\r\\n}\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbG9naW4vbG9naW4tZm9ybS9sb2dpbi1mb3JtLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxnQkFBZ0I7RUFDaEIsaUJBQWlCO0VBQ2pCLFlBQVk7RUFDWixZQUFZO0FBQ2Q7O0FBRUE7RUFDRSxrQkFBa0I7QUFDcEI7O0FBRUE7RUFDRSxVQUFVO0VBQ1YsWUFBWTtBQUNkOztBQUVBO0VBQ0UsV0FBVztBQUNiIiwiZmlsZSI6InNyYy9hcHAvbG9naW4vbG9naW4tZm9ybS9sb2dpbi1mb3JtLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIubG9naW5Gb3JtIHtcclxuICBtaW4taGVpZ2h0OiA1MHZoO1xyXG4gIHBhZGRpbmctdG9wOiA4MHB4O1xyXG4gIHdpZHRoOiAzNTBweDtcclxuICBtYXJnaW46IGF1dG87XHJcbn1cclxuXHJcbi50ZXh0LWNlbnRlciB7XHJcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG59XHJcblxyXG4ubG9naW4tdGFibGUge1xyXG4gIHdpZHRoOiA4NSU7XHJcbiAgbWFyZ2luOiBhdXRvO1xyXG59XHJcblxyXG4ubG9naW4tdGFibGUgLm1hdC1mb3JtLWZpZWxkIHtcclxuICB3aWR0aDogMTAwJTtcclxufVxyXG4iXX0= */\"","module.exports = \"<form class=\\\"loginForm\\\" [formGroup]=\\\"loginForm\\\">\\r\\n  <mat-card>\\r\\n    <mat-card-header>\\r\\n      <mat-card-title>Login</mat-card-title>\\r\\n    </mat-card-header>\\r\\n    <mat-card-content>\\r\\n      <table cellspacing=\\\"0\\\" class=\\\"login-table\\\">\\r\\n        <tr>\\r\\n          <td>\\r\\n            <div class=\\\"form-group\\\">\\r\\n              <mat-form-field>\\r\\n                <input matInput placeholder=\\\"Username\\\" name=\\\"username\\\" required formControlName=\\\"username\\\">\\r\\n                <mat-error\\r\\n                  *ngIf=\\\"loginForm.controls['username'].errors?.required && loginForm.controls['username'].touched\\\">\\r\\n                  Username is <strong>required</strong>\\r\\n                </mat-error>\\r\\n              </mat-form-field>\\r\\n            </div>\\r\\n          </td>\\r\\n        </tr>\\r\\n        <tr>\\r\\n          <td>\\r\\n            <mat-form-field>\\r\\n              <input matInput placeholder=\\\"Password\\\" type=\\\"password\\\" name=\\\"password\\\" formControlName=\\\"password\\\"\\r\\n                required>\\r\\n              <mat-error\\r\\n                *ngIf=\\\"loginForm.controls['password'].errors?.required && loginForm.controls['password'].touched\\\">\\r\\n                Password is <strong>required</strong>\\r\\n              </mat-error>\\r\\n            </mat-form-field>\\r\\n          </td>\\r\\n        </tr>\\r\\n        <tr>\\r\\n          <td>\\r\\n            <span style=\\\"color:red;\\\" *ngIf=\\\"errMsg != null\\\">{{errMsg}}</span>\\r\\n          </td>\\r\\n        </tr>\\r\\n      </table>\\r\\n      <mat-spinner [style.display]=\\\"showSpinner ? 'block' : 'none'\\\"></mat-spinner>\\r\\n    </mat-card-content>\\r\\n    <mat-card-actions class=\\\"text-center\\\">\\r\\n      <button type=\\\"button\\\" mat-raised-button (click)=\\\"resetPassword()\\\">Reset Password</button>\\r\\n      <button type=\\\"submit\\\" mat-raised-button color=\\\"primary\\\" (click)=\\\"onSubmit()\\\">Login</button>\\r\\n    </mat-card-actions>\\r\\n  </mat-card>\\r\\n</form>\\r\\n\"","import { Component, OnInit, Inject } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { AuthenticationService } from '../../_services/authentication.service';\r\nimport { FormBuilder, FormGroup, Validators, FormControl, FormGroupDirective, NgForm } from '@angular/forms';\r\nimport { UserService } from 'src/app/_services';\r\nimport { MatSnackBarComponent } from 'src/app/service/mat-snack-bar/mat-snack-bar.component';\r\nimport { MAT_DIALOG_DATA, MatDialogRef, MatDialog, ErrorStateMatcher, MatDialogConfig } from '@angular/material';\r\n\r\n\r\n@Component({\r\n  selector: 'app-login-form',\r\n  templateUrl: './login-form.component.html',\r\n  styleUrls: ['./login-form.component.css']\r\n})\r\nexport class LoginFormComponent implements OnInit {\r\n\r\n  show: boolean = false;\r\n  userName: FormControl;\r\n  password: FormControl;\r\n  loginForm: FormGroup;\r\n  errMsg: string = null;\r\n\r\n  constructor(private router: Router, private authenticationService: AuthenticationService,\r\n    private formBuilder: FormBuilder, private userService: UserService, private dialog: MatDialog,\r\n    private snackBar: MatSnackBarComponent) { }\r\n\r\n  ngOnInit() {\r\n    this.loginForm = this.formBuilder.group({\r\n      username: new FormControl('', Validators.required),\r\n      password: new FormControl('', Validators.required)\r\n    });\r\n    // reset login status\r\n    this.authenticationService.logout();\r\n  }\r\n\r\n  // convenience getter for easy access to form fields\r\n  get f() { return this.loginForm.controls; }\r\n\r\n  login() {\r\n    this.router.navigate(['service']);\r\n  }\r\n\r\n  onSubmit() {\r\n    if (this.loginForm.valid) {\r\n      var self = this;\r\n      this.authenticationService.login(this.f.username.value, this.f.password.value).then(\r\n        validUser => {\r\n          if (validUser) {\r\n            var mappedRegions = self.userService.user != undefined ? self.userService.user['userRegionMappingsById'] : null;\r\n            if (mappedRegions != null && mappedRegions.length > 0) {\r\n              mappedRegions = mappedRegions.sort(\r\n                (function(a, b){\r\n                if(a.regionByRegionId.regionName < b.regionByRegionId.regionName) { return -1; }\r\n                if(a.regionByRegionId.regionName > b.regionByRegionId.regionName) { return 1; }\r\n                return 0;\r\n              }));\r\n              let userRegion = mappedRegions[0]['regionByRegionId'];\r\n              if(self.userService.user['dataTypeByDataTypeId']['dataType'] == 'mission') {\r\n                  self.router.navigate(['service', userRegion[\"regionName\"], userRegion[\"regionId\"]]);\r\n              } else if (self.userService.user['dataTypeByDataTypeId']['dataType'] == 'current') {\r\n                 self.router.navigate(['currentState', userRegion[\"regionId\"]]);\r\n              } else if (self.userService.user['dataTypeByDataTypeId']['dataType'] == 'both'){\r\n                  this.chooseDataType(userRegion);\r\n              }\r\n            } else {\r\n              //  this.snackBar.openSnackBar( `User ${this.f.username.value} does not have access to any region.`, 'Close', \"red-snackbar\");\r\n              self.errMsg = `User does not have access to any region. `;\r\n              self.router.navigate(['login']);\r\n            }\r\n          } else {\r\n            // this.snackBar.openSnackBar( \"Invalid Credentials\", 'Close', \"red-snackbar\");\r\n            self.errMsg = \"Invalid Credentials\";\r\n            self.router.navigate(['login']);\r\n          }\r\n        }\r\n      );\r\n    }\r\n  }\r\n\r\n  resetPassword() {\r\n    const dialogRef = this.dialog.open(ResestPasswordDialog, {\r\n      width: '500px',\r\n      data: { confirm: 'No' }\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe(result => {\r\n    });\r\n  }\r\n\r\n\r\n  chooseDataType(userRegion:any){\r\n    status = 'A';\r\n\r\n      const dialogRef = this.dialog.open(DataTypeSelectionDialog, {\r\n        width: '500px',\r\n        data: {confirm: 'No'}\r\n      });\r\n\r\n      dialogRef.afterClosed().subscribe(result => {\r\n        if (result.confirm == 'mission'){\r\n          sessionStorage.setItem(\"tool-access\", \" - Mission Level\");\r\n          this.router.navigate(['service', userRegion[\"regionName\"], userRegion[\"regionId\"]]);\r\n        } else {\r\n          sessionStorage.setItem(\"tool-access\", \" - Current State\");\r\n          this.router.navigate(['currentState', userRegion[\"regionId\"]]);\r\n        }\r\n      });\r\n\r\n  }\r\n}\r\n\r\n\r\n@Component({\r\n  selector: 'reset-password-dialog',\r\n  templateUrl: 'reset-password-dialog.html',\r\n})\r\nexport class ResestPasswordDialog {\r\n\r\n  resetForm: FormGroup;\r\n  errorMsg: string;\r\n\r\n  constructor(\r\n    public dialogRef: MatDialogRef<ResestPasswordDialog>, private authenticationService: AuthenticationService, private snackBar: MatSnackBarComponent,\r\n    @Inject(MAT_DIALOG_DATA) public data: any) { }\r\n\r\n  ngOnInit() {\r\n    this.resetForm = new FormGroup({\r\n      userName: new FormControl('', Validators.required),\r\n      password: new FormControl('', Validators.required),\r\n      newPassword: new FormControl('', Validators.required),\r\n      confirmPassword: new FormControl('', Validators.required)\r\n    });\r\n  }\r\n\r\n  checkPasswords() {\r\n    let pass = this.resetForm.controls.newPassword.value;\r\n    let confirmPass = this.resetForm.controls.confirmPassword.value;\r\n    if (pass === confirmPass) {\r\n      return true;\r\n    } else {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  resetPassword() {\r\n    if (this.checkPasswords() == false) {\r\n      this.resetForm.controls['confirmPassword'].setErrors({ 'incorrect': true });\r\n    } else {\r\n      this.resetForm.controls['confirmPassword'].setErrors(null);\r\n      this.authenticationService.resetPassword(this.resetForm.controls['userName'].value, this.resetForm.controls['password'].value, this.resetForm.controls['newPassword'].value)\r\n        .subscribe(res => {\r\n          if (res != null) {\r\n            this.snackBar.openSnackBar(\"Password saved successfully\", 'Close', \"green-snackbar\");\r\n            this.closeDialog('Yes');\r\n          } else {\r\n            this.errorMsg = \"Invalid user credentials\"\r\n          }\r\n        })\r\n    }\r\n  }\r\n\r\n  closeDialog(confirm): void {\r\n    this.dialogRef.close({ 'confirm': confirm });\r\n  }\r\n}\r\n\r\n@Component({\r\n  selector: 'data-type-selection-dialog',\r\n  templateUrl: 'data-type-selection-dialog.html',\r\n})\r\nexport class DataTypeSelectionDialog {\r\n\r\n  constructor(\r\n    public dialogRef: MatDialogRef<DataTypeSelectionDialog>,\r\n    @Inject(MAT_DIALOG_DATA) public data: any) {}\r\n\r\n  closeDialog(confirm): void{\r\n    this.dialogRef.close({'confirm': confirm});\r\n  }\r\n\r\n}\r\n","module.exports = \"<h1 mat-dialog-title>Reset Password</h1>\\r\\n<div mat-dialog-content style=\\\"min-height:200px;\\\">\\r\\n  <p *ngIf=\\\"errorMsg != null\\\" style=\\\"color:red\\\">{{errorMsg}}</p>\\r\\n  <form class=\\\"resetForm\\\" [formGroup]=\\\"resetForm\\\">\\r\\n    <mat-form-field class=\\\"p-2\\\">\\r\\n      <input matInput placeholder=\\\"Username\\\" name=\\\"userName\\\" required formControlName=\\\"userName\\\">\\r\\n      <mat-error>\\r\\n        Username is <strong>required</strong>\\r\\n      </mat-error>\\r\\n    </mat-form-field>\\r\\n\\r\\n    <mat-form-field class=\\\"p-2\\\">\\r\\n      <input matInput placeholder=\\\"Password\\\" type=\\\"password\\\" name=\\\"password\\\" formControlName=\\\"password\\\" required>\\r\\n      <mat-error>\\r\\n        Password is <strong>required</strong>\\r\\n      </mat-error>\\r\\n    </mat-form-field>\\r\\n\\r\\n    <mat-form-field class=\\\"p-2\\\">\\r\\n      <input matInput placeholder=\\\"New Password\\\" type=\\\"password\\\" name=\\\"newPassword\\\" formControlName=\\\"newPassword\\\"\\r\\n        required minlength=\\\"6\\\" maxlength=\\\"15\\\">\\r\\n      <mat-error\\r\\n        *ngIf=\\\"resetForm.controls['newPassword'].errors != null && resetForm.controls['newPassword'].errors.required\\\">\\r\\n        Password is <strong>required</strong>\\r\\n      </mat-error>\\r\\n      <mat-error\\r\\n        *ngIf=\\\"resetForm.controls['newPassword'].errors != null && resetForm.controls['newPassword'].errors.minlength\\\">\\r\\n        Password length must match be minimum of 6\\r\\n      </mat-error>\\r\\n    </mat-form-field>\\r\\n\\r\\n    <mat-form-field class=\\\"p-2\\\">\\r\\n      <input matInput placeholder=\\\"Confirm Password\\\" type=\\\"password\\\" name=\\\"confirmPassword\\\"\\r\\n        formControlName=\\\"confirmPassword\\\" required minlength=\\\"6\\\" maxlength=\\\"15\\\">\\r\\n      <mat-error\\r\\n        *ngIf=\\\"resetForm.controls['confirmPassword'].errors != null && resetForm.controls['confirmPassword'].errors.required\\\">\\r\\n        Password is <strong>required</strong>\\r\\n      </mat-error>\\r\\n      <mat-error\\r\\n        *ngIf=\\\"resetForm.controls['confirmPassword'].errors != null && resetForm.controls['confirmPassword'].errors.incorrect\\\">\\r\\n        Password must match with new password\\r\\n      </mat-error>\\r\\n      <mat-error\\r\\n        *ngIf=\\\"resetForm.controls['confirmPassword'].errors != null && resetForm.controls['confirmPassword'].errors.minlength\\\">\\r\\n        Password length must match be minimum of 6\\r\\n      </mat-error>\\r\\n    </mat-form-field>\\r\\n  </form>\\r\\n</div>\\r\\n<div style=\\\"font-size:14px;\\\">\\r\\n  <li>Password needs to be 6-15 characters in length and may be any combination of keyboard characters.</li>\\r\\n  <li>If you forget your password, please reach out to project team.</li>\\r\\n  <br>\\r\\n</div>\\r\\n<div class=\\\"text-center\\\">\\r\\n  <button mat-raised-button (click)=\\\"closeDialog('No')\\\" class=\\\"mr-2\\\">Cancel</button>\\r\\n  <button mat-raised-button color=\\\"primary\\\" (click)=\\\"resetPassword()\\\" [disabled]=\\\"!resetForm.valid\\\">Reset</button>\\r\\n</div>\\r\\n\"","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class LoginRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { LoginRoutingModule } from './login-routing.module';\nimport { LoginFormComponent } from './login-form/login-form.component';\nimport { FormsModule, ReactiveFormsModule} from '@angular/forms';\n\n\nimport {\n  MatButtonModule, MatCardModule, MatDialogModule, MatInputModule, MatTableModule,\n  MatToolbarModule, MatMenuModule,MatIconModule, MatProgressSpinnerModule\n} from '@angular/material';\n\nimport { BrowserAnimationsModule} from '@angular/platform-browser/animations';\n\n@NgModule({\n  declarations: [LoginFormComponent],\n  imports: [\n    CommonModule,\n    LoginRoutingModule,\n    MatButtonModule,\n    MatCardModule,\n    MatDialogModule,\n     MatInputModule,\n     MatTableModule,\n     MatToolbarModule,\n     MatMenuModule,\n     MatIconModule,\n     MatProgressSpinnerModule,\n     BrowserAnimationsModule,\n     FormsModule,\n     ReactiveFormsModule\n  ]\n})\nexport class LoginModule { }\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3NlcnZpY2UvZmVlZGJhY2svZmVlZGJhY2suY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<div>\\r\\n    <!-- <mat-card>\\r\\n        <mat-card-header>\\r\\n            <mat-card-title>Feedbacks</mat-card-title> -->\\r\\n            <h4>Feedbacks</h4>\\r\\n        <!-- </mat-card-header>\\r\\n        <mat-card-content> -->\\r\\n            <table mat-table [dataSource]=\\\"feedbacks\\\" class=\\\"mat-elevation-z8 w-100\\\">\\r\\n                <!-- Position Column -->\\r\\n                <ng-container matColumnDef=\\\"name\\\">\\r\\n                    <th mat-header-cell *matHeaderCellDef> Respondent Name </th>\\r\\n                    <td mat-cell *matCellDef=\\\"let element\\\"> {{element.userById.userName}} </td>\\r\\n                </ng-container>\\r\\n\\r\\n                <!-- Position Column -->\\r\\n                <ng-container matColumnDef=\\\"feedback\\\">\\r\\n                    <th mat-header-cell *matHeaderCellDef> Feedback </th>\\r\\n                    <td mat-cell *matCellDef=\\\"let element\\\"> {{element.feedback}} </td>\\r\\n                </ng-container>\\r\\n\\r\\n                <tr mat-header-row *matHeaderRowDef=\\\"inputDisplayedColumns\\\"></tr>\\r\\n                <tr mat-row *matRowDef=\\\"let row; columns: inputDisplayedColumns;\\\"></tr>\\r\\n            </table>\\r\\n        <!-- </mat-card-content> -->\\r\\n        <div class=\\\"text-center pt-2\\\">\\r\\n            <button mat-raised-button color=\\\"primary\\\" (click)=\\\"onClose()\\\">Close</button>\\r\\n        </div>\\r\\n    <!-- </mat-card> -->\\r\\n</div>\"","import { Component, OnInit, Inject } from '@angular/core';\r\nimport { ServiceMatrixService } from '../service-matrix.service';\r\nimport { MatDialogRef, MAT_DIALOG_DATA, MatTableDataSource } from '@angular/material';\r\nimport { UserService } from 'src/app/_services';\r\nimport { MatSnackBarComponent } from '../mat-snack-bar/mat-snack-bar.component';\r\nimport { Router } from '@angular/router';\r\n\r\n\r\n@Component({\r\n    selector: 'app-feedback',\r\n    templateUrl: './feedback.component.html',\r\n    styleUrls: ['./feedback.component.css']\r\n})\r\nexport class FeedbackComponent implements OnInit {\r\n    user: Object;\r\n    selectedRegionObject: any;\r\n    feedbacks = new MatTableDataSource<Object>();\r\n    inputDisplayedColumns: string[] = [ \"name\", \"feedback\"];\r\n\r\n    errorMessage: string = null;\r\n    successMessage: string = null;\r\n\r\n    constructor(private serviceMatrix: ServiceMatrixService,\r\n        public dialogRef: MatDialogRef<FeedbackComponent>,\r\n        private userService: UserService,\r\n        @Inject(MAT_DIALOG_DATA) public data: any,\r\n        private router: Router, private snackBar: MatSnackBarComponent\r\n    ) {}\r\n\r\n    ngOnInit() {\r\n        this.user = this.userService.user;\r\n        this.selectedRegionObject = this.userService.getSelectedRegionObject(this.data.regionName);\r\n        this.fetchFeedbacks();\r\n    }\r\n\r\n    fetchFeedbacks(): any {\r\n        let _self = this;\r\n        this.serviceMatrix.fetchInputs(this.selectedRegionObject.regionId, this.data.taskId ).subscribe(\r\n        data => {\r\n            var dt = data as Object[];            \r\n            _self.feedbacks.data = dt.filter(e => e['feedback'] != null && e['feedback'] != '');\r\n        },\r\n        err => {\r\n            this.errorMessage = \"Error fectching input values. Please try again later.\"\r\n        });\r\n    }\r\n\r\n    onClose() {\r\n        this.dialogRef.close();\r\n    }\r\n}","module.exports = \".highlight{\\r\\n  background: #ddd;\\r\\n}\\r\\n\\r\\n.mat-row:hover{\\r\\n  background-color: #EEE;\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvc2VydmljZS9pbnB1dHMvaW5wdXRzLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxnQkFBZ0I7QUFDbEI7O0FBRUE7RUFDRSxzQkFBc0I7QUFDeEIiLCJmaWxlIjoic3JjL2FwcC9zZXJ2aWNlL2lucHV0cy9pbnB1dHMuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi5oaWdobGlnaHR7XHJcbiAgYmFja2dyb3VuZDogI2RkZDtcclxufVxyXG5cclxuLm1hdC1yb3c6aG92ZXJ7XHJcbiAgYmFja2dyb3VuZC1jb2xvcjogI0VFRTtcclxufSJdfQ== */\"","module.exports = \"<div *ngIf=\\\"inputs.data.length > 0\\\">\\r\\n  <!-- <mat-card>\\r\\n  <mat-card-header>\\r\\n    <mat-card-title> -->\\r\\n      <h5 class=\\\"text-center\\\" style=\\\"color: white\\\">Review Inputs</h5>\\r\\n    <!-- </mat-card-title>\\r\\n  </mat-card-header>\\r\\n  <mat-card-content> -->\\r\\n    <table mat-table [dataSource]=\\\"inputs\\\" class=\\\"mat-elevation-z8 w-100\\\">\\r\\n      <!-- Position Column -->\\r\\n      <ng-container matColumnDef=\\\"name\\\">\\r\\n        <th mat-header-cell *matHeaderCellDef> Respondent Name </th>\\r\\n        <td mat-cell *matCellDef=\\\"let element\\\"> {{element.userById.userName}} </td>\\r\\n      </ng-container>\\r\\n\\r\\n      <!-- Position Column -->\\r\\n      <ng-container matColumnDef=\\\"value\\\">\\r\\n        <th mat-header-cell *matHeaderCellDef> Input Value </th>\\r\\n        <td mat-cell *matCellDef=\\\"let element\\\"> {{element.inputValue}} </td>\\r\\n      </ng-container>\\r\\n\\r\\n      <!-- Position Column -->\\r\\n      <ng-container matColumnDef=\\\"status\\\">\\r\\n        <th mat-header-cell *matHeaderCellDef> Status </th>\\r\\n        <td mat-cell *matCellDef=\\\"let element\\\"> {{element.statusBySttsId.statusCode}} </td>\\r\\n      </ng-container>\\r\\n\\r\\n      <!-- Position Column -->\\r\\n      <ng-container matColumnDef=\\\"approverName\\\">\\r\\n        <th mat-header-cell *matHeaderCellDef> Validated By </th>\\r\\n        <td mat-cell *matCellDef=\\\"let element\\\">\\r\\n          <div *ngIf=\\\"element.userByApproverId != undefined\\\"> {{element.userByApproverId.userName}} </div>\\r\\n        </td>\\r\\n      </ng-container>\\r\\n\\r\\n      <ng-container matColumnDef=\\\"feedback\\\">\\r\\n        <th mat-header-cell *matHeaderCellDef> Feedback </th>\\r\\n        <td mat-cell *matCellDef=\\\"let element\\\">\\r\\n          {{element.feedback}}\\r\\n        </td>\\r\\n      </ng-container>\\r\\n\\r\\n      <ng-container matColumnDef=\\\"totalHours\\\">\\r\\n        <th mat-header-cell *matHeaderCellDef> Total Hours </th>\\r\\n        <td mat-cell *matCellDef=\\\"let element\\\"> {{element.inputValue * totalHours}} </td>\\r\\n      </ng-container>\\r\\n\\r\\n      <tr mat-header-row *matHeaderRowDef=\\\"inputDisplayedColumns\\\"></tr>\\r\\n      <tr mat-row *matRowDef=\\\"let row; columns: inputDisplayedColumns;\\\"\\r\\n        [ngClass]=\\\"{'highlight': selectedRowIndex == row.id}\\\" (click)=\\\"highlight(row)\\\">\\r\\n      </tr>\\r\\n    </table>\\r\\n  <!-- </mat-card-content> -->\\r\\n  <div class=\\\"text-center pt-2\\\" *ngIf=\\\"userRole == 'admin' || userRole == 'm_lead'\\\">\\r\\n    <!--<button mat-raised-button color=\\\"primary\\\" (click)=\\\"approveResponse()\\\" class=\\\"mx-2 text-dark bg-white task-input-multiplier-btn\\\"\\r\\n      [disabled]=true>Select</button>-->\\r\\n      <button mat-raised-button color=\\\"primary\\\" (click)=\\\"approveResponse()\\\" class=\\\"mx-2 text-dark bg-white task-input-multiplier-btn\\\"\\r\\n        [disabled]=\\\"this.selectedRow != undefined && this.selectedRow.taskStatus == 'Approved'\\\">Select</button>\\r\\n    <!-- <button mat-raised-button color=\\\"primary\\\" (click)=\\\"provideYourInput()\\\" class=\\\"text-dark bg-white task-input-multiplier-btn\\\">Provide your own Input</button> -->\\r\\n  </div>\\r\\n<!-- </mat-card> -->\\r\\n</div>\\r\\n\"","import { Component, OnInit, AfterViewInit, Inject, Input, Output, EventEmitter } from '@angular/core';\r\nimport { ServiceMatrixService } from '../service-matrix.service';\r\nimport { MatDialogRef, MAT_DIALOG_DATA, MatTableDataSource } from '@angular/material';\r\nimport { UserService } from 'src/app/_services';\r\nimport { Router } from '@angular/router';\r\nimport { MatSnackBarComponent } from '../mat-snack-bar/mat-snack-bar.component';\r\n\r\n@Component({\r\n  selector: 'app-inputs',\r\n  templateUrl: './inputs.component.html',\r\n  styleUrls: ['./inputs.component.css']\r\n})\r\nexport class InputsComponent implements OnInit  {\r\n\r\n  selectedRowIndex: number = -1;\r\n  selectedRow: any;\r\n  selectedRegionObject: any;\r\n  user: any;\r\n  inputs = new MatTableDataSource<Object>();\r\n  inputDisplayedColumns: string[] = [  \"name\", \"status\", \"approverName\", \"feedback\", \"value\", \"totalHours\"];\r\n  approvedInput: number;\r\n\r\n  errorMessage: string = null;\r\n  successMessage: string = null;\r\n  userRole: string;\r\n  // data: any;\r\n  @Input('regionName') regionName: string;\r\n  @Input('taskId') taskId: string;\r\n  @Input('totalHours') totalHours: number;\r\n  @Input('changeDetection') changeDetection: boolean;\r\n\r\n  @Output() approved = new EventEmitter();\r\n\r\n  constructor(private serviceMatrix : ServiceMatrixService,\r\n              // public dialogRef : MatDialogRef<InputsComponent>,\r\n              private userService:UserService,\r\n            // @Inject(MAT_DIALOG_DATA) public data: any,\r\n          private router: Router, private snackBar: MatSnackBarComponent\r\n         ) {\r\n\r\n          }\r\n\r\n  ngOnInit() {\r\n    this.user = this.userService.user;\r\n    this.userRole = this.userService.userRole;\r\n    this.selectedRegionObject = this.userService.getSelectedRegionObject(this.regionName);\r\n    this.fetchInputs();\r\n  }\r\n\r\n  ngOnChanges() {\r\n    this.selectedRegionObject = this.userService.getSelectedRegionObject(this.regionName);\r\n    this.fetchInputs();\r\n  }\r\n\r\n  fetchInputs(){\r\n    let _self = this;\r\n    this.serviceMatrix.fetchInputs(this.selectedRegionObject.regionId, this.taskId ).subscribe(\r\n    data => {\r\n      _self.inputs.data = data as Object[];\r\n    },\r\n    err => {\r\n      this.errorMessage = \"Error fectching input values. Please try again later.\"\r\n    });\r\n  }\r\n\r\n  approveResponse(){\r\n    this.serviceMatrix.selectedRowIndex = this.selectedRowIndex;\r\n    let _self = this;\r\n    this.serviceMatrix.selectInput(this.selectedRegionObject.regionId, this.taskId,this.selectedRow.id, this.userService.userId).subscribe(\r\n    data => {\r\n      _self.approvedInput = Number(data);\r\n      this.snackBar.openSnackBar( \"Selected Input is approved\", 'Close', \"green-snackbar\");\r\n      this.fetchInputs();\r\n      this.approved.emit(\"approved\");\r\n      // this.dialogRef.close(this.data);\r\n    },\r\n    err => {\r\n        this.snackBar.openSnackBar( \"Error saving selected input\", 'Close', \"red-snackbar\");\r\n        this.onClose();\r\n    });\r\n  }\r\n\r\n  provideYourInput() {\r\n    this.onClose();\r\n  }\r\n\r\n  highlight(row){\r\n    var myJSON = JSON.stringify(row);\r\n    this.selectedRowIndex = row.id;\r\n    this.selectedRow = row;\r\n  }\r\n\r\n  onClose() {\r\n    // this.dialogRef.close();\r\n  }\r\n\r\n  /*openSnackBar(message: string, action: string) {\r\n  let config = new MatSnackBarConfig();\r\n   config.verticalPosition = 'bottom';\r\n   config.horizontalPosition = 'right';\r\n   config.duration = 2000;\r\n    this.snackBar.open(message, action, config);\r\n  } */\r\n\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3NlcnZpY2UvbWF0LXNuYWNrLWJhci9tYXQtc25hY2stYmFyLmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<p>\\r\\n  mat-snack-bar works!\\r\\n</p>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport {MatSnackBar} from '@angular/material';\r\n\r\n@Component({\r\n  selector: 'app-mat-snack-bar',\r\n  templateUrl: './mat-snack-bar.component.html',\r\n  styleUrls: ['./mat-snack-bar.component.css']\r\n})\r\nexport class MatSnackBarComponent implements OnInit {\r\n\r\n  constructor(private snackBar: MatSnackBar) { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  // this function will open up snackbar on top right position with custom background color (defined in css)\r\nopenSnackBar(message: string, action: string, className: string) {\r\n    this.snackBar.open(message, action, {\r\n     duration: 4000,\r\n     verticalPosition: 'bottom',\r\n     horizontalPosition: 'right',\r\n     panelClass: [className],\r\n    });\r\n}\r\n\r\n}\r\n","module.exports = \"mat-cell,\\r\\n.mat-cell,\\r\\nmat-footer-cell,\\r\\n.mat-footer-cell,\\r\\nmat-header-cell, .mat-header-cell {\\r\\n  padding: 0.75rem !important;\\r\\n}\\r\\n\\r\\ntable, mat-paginator {\\r\\n  width: 90%;\\r\\n}\\r\\n\\r\\nmat-header-cell {\\r\\n  display:flex;\\r\\n  justify-content:flex-end;\\r\\n }\\r\\n\\r\\n.mat-form-field {\\r\\n   font-size: 14px;\\r\\n   width: 50%;\\r\\n }\\r\\n\\r\\n.mat-row:hover {\\r\\n  background-color: #DDD;\\r\\n}\\r\\n\\r\\n.example-fill-remaining-space {\\r\\n  /* This fills the remaining space, by using flexbox.\\r\\n     Every toolbar row uses a flexbox row layout. */\\r\\n  flex: 1 1 auto;\\r\\n}\\r\\n\\r\\nmat-toolbar  span, mat-toolbar  a  span {\\r\\n  font-size: 10pt;\\r\\n}\\r\\n\\r\\n.table-col-title {\\r\\n  font-weight: 500;\\r\\n  color: black;\\r\\n  font-size: 14px;\\r\\n}\\r\\n\\r\\n.table-col-header {\\r\\n  font-size: 12px;\\r\\n}\\r\\n\\r\\n.filter-input{\\r\\n  width: 75%;\\r\\n  text-align: left;\\r\\n}\\r\\n\\r\\n.th-header-background{\\r\\n  background: #1f4e79;\\r\\n  color: white;\\r\\n  font-size: 14px;\\r\\n}\\r\\n\\r\\n.help-text-icon {\\r\\n  font-size: 14px;\\r\\n}\\r\\n\\r\\n::ng-deep .mat-tooltip  {\\r\\n white-space: pre-line    !important;\\r\\n font-size: 10px   !important;\\r\\n}\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvc2VydmljZS9tYXRyaXgtZGV0YWlscy9tYXRyaXgtZGV0YWlscy5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOzs7OztFQUtFLDJCQUEyQjtBQUM3Qjs7QUFFQTtFQUNFLFVBQVU7QUFDWjs7QUFFQTtFQUNFLFlBQVk7RUFDWix3QkFBd0I7Q0FDekI7O0FBRUE7R0FDRSxlQUFlO0dBQ2YsVUFBVTtDQUNaOztBQUVBO0VBQ0Msc0JBQXNCO0FBQ3hCOztBQUVBO0VBQ0U7bURBQ2lEO0VBQ2pELGNBQWM7QUFDaEI7O0FBRUE7RUFDRSxlQUFlO0FBQ2pCOztBQUVBO0VBQ0UsZ0JBQWdCO0VBQ2hCLFlBQVk7RUFDWixlQUFlO0FBQ2pCOztBQUVBO0VBQ0UsZUFBZTtBQUNqQjs7QUFFQTtFQUNFLFVBQVU7RUFDVixnQkFBZ0I7QUFDbEI7O0FBRUE7RUFDRSxtQkFBbUI7RUFDbkIsWUFBWTtFQUNaLGVBQWU7QUFDakI7O0FBRUE7RUFDRSxlQUFlO0FBQ2pCOztBQUVBO0NBQ0MsbUNBQW1DO0NBQ25DLDRCQUE0QjtBQUM3QiIsImZpbGUiOiJzcmMvYXBwL3NlcnZpY2UvbWF0cml4LWRldGFpbHMvbWF0cml4LWRldGFpbHMuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIm1hdC1jZWxsLFxyXG4ubWF0LWNlbGwsXHJcbm1hdC1mb290ZXItY2VsbCxcclxuLm1hdC1mb290ZXItY2VsbCxcclxubWF0LWhlYWRlci1jZWxsLCAubWF0LWhlYWRlci1jZWxsIHtcclxuICBwYWRkaW5nOiAwLjc1cmVtICFpbXBvcnRhbnQ7XHJcbn1cclxuXHJcbnRhYmxlLCBtYXQtcGFnaW5hdG9yIHtcclxuICB3aWR0aDogOTAlO1xyXG59XHJcblxyXG5tYXQtaGVhZGVyLWNlbGwge1xyXG4gIGRpc3BsYXk6ZmxleDtcclxuICBqdXN0aWZ5LWNvbnRlbnQ6ZmxleC1lbmQ7XHJcbiB9XHJcblxyXG4gLm1hdC1mb3JtLWZpZWxkIHtcclxuICAgZm9udC1zaXplOiAxNHB4O1xyXG4gICB3aWR0aDogNTAlO1xyXG4gfVxyXG5cclxuIC5tYXQtcm93OmhvdmVyIHtcclxuICBiYWNrZ3JvdW5kLWNvbG9yOiAjREREO1xyXG59XHJcblxyXG4uZXhhbXBsZS1maWxsLXJlbWFpbmluZy1zcGFjZSB7XHJcbiAgLyogVGhpcyBmaWxscyB0aGUgcmVtYWluaW5nIHNwYWNlLCBieSB1c2luZyBmbGV4Ym94LlxyXG4gICAgIEV2ZXJ5IHRvb2xiYXIgcm93IHVzZXMgYSBmbGV4Ym94IHJvdyBsYXlvdXQuICovXHJcbiAgZmxleDogMSAxIGF1dG87XHJcbn1cclxuXHJcbm1hdC10b29sYmFyICBzcGFuLCBtYXQtdG9vbGJhciAgYSAgc3BhbiB7XHJcbiAgZm9udC1zaXplOiAxMHB0O1xyXG59XHJcblxyXG4udGFibGUtY29sLXRpdGxlIHtcclxuICBmb250LXdlaWdodDogNTAwO1xyXG4gIGNvbG9yOiBibGFjaztcclxuICBmb250LXNpemU6IDE0cHg7XHJcbn1cclxuXHJcbi50YWJsZS1jb2wtaGVhZGVyIHtcclxuICBmb250LXNpemU6IDEycHg7XHJcbn1cclxuXHJcbi5maWx0ZXItaW5wdXR7XHJcbiAgd2lkdGg6IDc1JTtcclxuICB0ZXh0LWFsaWduOiBsZWZ0O1xyXG59XHJcblxyXG4udGgtaGVhZGVyLWJhY2tncm91bmR7XHJcbiAgYmFja2dyb3VuZDogIzFmNGU3OTtcclxuICBjb2xvcjogd2hpdGU7XHJcbiAgZm9udC1zaXplOiAxNHB4O1xyXG59XHJcblxyXG4uaGVscC10ZXh0LWljb24ge1xyXG4gIGZvbnQtc2l6ZTogMTRweDtcclxufVxyXG5cclxuOjpuZy1kZWVwIC5tYXQtdG9vbHRpcCAge1xyXG4gd2hpdGUtc3BhY2U6IHByZS1saW5lICAgICFpbXBvcnRhbnQ7XHJcbiBmb250LXNpemU6IDEwcHggICAhaW1wb3J0YW50O1xyXG59XHJcbiJdfQ== */\"","module.exports = \"<div align=\\\"center\\\" class=\\\"mb-4\\\">\\r\\n    <mat-toolbar>\\r\\n        <div class=\\\"row w-100 m-0\\\">\\r\\n        <div class=\\\"col-md-6 text-left\\\">\\r\\n        <span> <b>Task Catalog</b> </span>\\r\\n\\r\\n        <button mat-button color=\\\"primary\\\" matTooltip=\\\"User Info\\\" style=\\\"cursor:default;\\\">\\r\\n            <mat-icon>account_box</mat-icon>\\r\\n            {{user.userName}}\\r\\n          </button>\\r\\n          <button mat-button color=\\\"primary\\\" matTooltip=\\\"Region/Branch/District\\\" style=\\\"cursor:default;\\\">\\r\\n              <mat-icon>language</mat-icon>\\r\\n              {{selectedRegion}}\\r\\n            </button>\\r\\n        </div>\\r\\n        <div class=\\\"col-md-6 text-right\\\">\\r\\n          <span> <b>Actions: </b></span>\\r\\n          <button mat-button color = \\\"primary\\\" [matMenuTriggerFor]=\\\"region\\\">\\r\\n              <mat-icon>language</mat-icon>\\r\\n              Choose Region/Branch/District\\r\\n          </button>\\r\\n\\r\\n          <mat-menu #region=\\\"matMenu\\\">\\r\\n            <button mat-menu-item *ngFor=\\\"let item of regionList\\\"\\r\\n            (click)=\\\"chooseRegion(item.regionByRegionId.regionName, item.regionByRegionId.regionId)\\\"> {{item.regionByRegionId.regionName}} </button>\\r\\n          </mat-menu>\\r\\n\\r\\n\\r\\n          <a mat-button color=\\\"primary\\\" title=\\\"Provide Feedback\\\" target=\\\"_new\\\" href=\\\"https://deloittesurvey.deloitte.com/Community/se/3FC11B2638966086\\\">\\r\\n              <mat-icon>feedback</mat-icon>\\r\\n          </a>\\r\\n          <a mat-button color=\\\"primary\\\" title=\\\"Respondent Resource Hub\\\" target=\\\"_new\\\" href=\\\"http://dfgintranet/portal/BusinessOperations/Budget/ServiceBasedBudgeting/Respondents/tabid/2880/Default.aspx\\\">\\r\\n              <mat-icon>file_copy</mat-icon>\\r\\n          </a>\\r\\n\\r\\n          <button mat-button color = \\\"primary\\\" (click)=\\\"backToLogin()\\\">\\r\\n              <mat-icon>power_settings_new</mat-icon>\\r\\n              Logout\\r\\n          </button>\\r\\n        </div>\\r\\n        </div>\\r\\n      </mat-toolbar>\\r\\n  <!-- <mat-toolbar >\\r\\n    <h4> Task Catalog &nbsp;&nbsp; </h4>\\r\\n    <mat-icon matListAvatar color=\\\"primary\\\" matTooltip = \\\"User Info\\\">account_box</mat-icon>\\r\\n    <span>{{user.userName}} &nbsp;&nbsp;</span>\\r\\n    <mat-icon matListAvatar color=\\\"primary\\\">language</mat-icon>\\r\\n    <span > {{selectedRegion}} &nbsp;&nbsp;</span>\\r\\n    <span class=\\\"example-fill-remaining-space\\\"></span>\\r\\n    <span> <b>Actions: </b> </span>\\r\\n    <button mat-button color = \\\"primary\\\" [matMenuTriggerFor]=\\\"region\\\">\\r\\n        <mat-icon>language</mat-icon>\\r\\n        Pick a different region\\r\\n    </button>\\r\\n\\r\\n    <mat-menu #region=\\\"matMenu\\\">\\r\\n      <button mat-menu-item *ngFor=\\\"let item of regionList\\\"\\r\\n      (click)=\\\"chooseRegion(item.regionByRegionId.regionName)\\\"> {{item.regionByRegionId.regionName}} </button>\\r\\n    </mat-menu>\\r\\n\\r\\n    <button mat-button color = \\\"primary\\\" (click)=\\\"backToLogin()\\\">\\r\\n        <mat-icon>power_settings_new</mat-icon>\\r\\n        Logout\\r\\n    </button>\\r\\n\\r\\n  </mat-toolbar> -->\\r\\n\\r\\n  <mat-form-field>\\r\\n    <input matInput (keyup)=\\\"applyFilter($event.target.value)\\\" placeholder=\\\"Filter\\\" [(ngModel)] = \\\"globalFilter\\\">\\r\\n  </mat-form-field>\\r\\n  <button mat-button color=\\\"primary\\\" (click)=\\\"clearAllFilters()\\\">Clear All Filters</button>\\r\\n  <button mat-button color=\\\"primary\\\" (click)=\\\"loadLastUsedFilter()\\\" *ngIf=\\\"user['filter'] != null\\\">Use Most Recent Filter</button>\\r\\n\\r\\n\\r\\n\\r\\n  <table mat-table [dataSource] = \\\"dataSource\\\" matSort class=\\\"mat-elevation-z8\\\">\\r\\n    <ng-container matColumnDef =\\\"viewTask\\\">\\r\\n      <th mat-header-cell *matHeaderCellDef mat-sort-header class=\\\"th-header-background\\\"></th>\\r\\n      <td mat-cell *matCellDef= \\\"let row\\\">\\r\\n        <button mat-button color = \\\"primary\\\" (click)=\\\"showTask(row)\\\">\\r\\n            <mat-icon>visibility</mat-icon>\\r\\n        </button>\\r\\n      </td>\\r\\n    </ng-container>\\r\\n\\r\\n    <ng-container matColumnDef=\\\"viewTask-filter\\\">\\r\\n        <th mat-header-cell *matHeaderCellDef>\\r\\n\\r\\n        </th>\\r\\n    </ng-container>\\r\\n\\r\\n\\r\\n    <ng-container matColumnDef =\\\"taskId\\\">\\r\\n      <th mat-header-cell *matHeaderCellDef mat-sort-header class=\\\"th-header-background\\\">Task ID</th>\\r\\n      <td mat-cell *matCellDef= \\\"let element\\\">\\r\\n        {{element.taskId}}\\r\\n      </td>\\r\\n    </ng-container>\\r\\n\\r\\n   <ng-container matColumnDef =\\\"serviceName\\\">\\r\\n      <th mat-header-cell *matHeaderCellDef mat-sort-header class=\\\"th-header-background\\\">Service</th>\\r\\n      <td mat-cell *matCellDef= \\\"let element\\\">\\r\\n        {{element.serviceName}}\\r\\n      </td>\\r\\n    </ng-container>\\r\\n\\r\\n   <ng-container matColumnDef =\\\"program\\\">\\r\\n      <th mat-header-cell *matHeaderCellDef mat-sort-header class=\\\"th-header-background\\\">Program</th>\\r\\n      <td mat-cell *matCellDef= \\\"let element\\\">\\r\\n        {{element.program}}\\r\\n      </td>\\r\\n    </ng-container>\\r\\n\\r\\n   <ng-container matColumnDef =\\\"subProgram\\\">\\r\\n       <th mat-header-cell *matHeaderCellDef mat-sort-header class=\\\"th-header-background\\\">Sub Program</th>\\r\\n       <td mat-cell *matCellDef= \\\"let element\\\">\\r\\n         {{element.subProgram}}\\r\\n       </td>\\r\\n     </ng-container>\\r\\n\\r\\n     <ng-container matColumnDef =\\\"taskCategory\\\">\\r\\n        <th mat-header-cell *matHeaderCellDef mat-sort-header class=\\\"th-header-background\\\">Task Category</th>\\r\\n        <td mat-cell *matCellDef= \\\"let element\\\">\\r\\n          {{element.taskCategory}}\\r\\n        </td>\\r\\n      </ng-container>\\r\\n\\r\\n      <ng-container matColumnDef =\\\"taskName\\\">\\r\\n         <th mat-header-cell *matHeaderCellDef mat-sort-header class=\\\"th-header-background\\\">Task</th>\\r\\n         <td mat-cell *matCellDef= \\\"let element\\\">\\r\\n           {{element.taskName}}\\r\\n         </td>\\r\\n       </ng-container>\\r\\n\\r\\n    <ng-container matColumnDef=\\\"myInput\\\">\\r\\n     <th mat-header-cell *matHeaderCellDef mat-sort-header class=\\\"th-header-background\\\"\\r\\n      matTooltip=\\\"Displays the input you provided, if applicable. You may select the task in question to update your prior entry if necessary. \\\"\\r\\n     >\\r\\n       My Input <i class=\\\"material-icons help-text-icon\\\"\\r\\n       placement=\\\"bottom\\\"\\r\\n       >help</i>\\r\\n      </th>\\r\\n     <td mat-cell *matCellDef=\\\"let element\\\">\\r\\n             {{element.myInput}}\\r\\n     </td>\\r\\n   </ng-container>\\r\\n\\r\\n   <!--<ng-container matColumnDef =\\\"approved\\\">\\r\\n      <th mat-header-cell *matHeaderCellDef mat-sort-header class=\\\"th-header-background\\\">Approved</th>\\r\\n      <td mat-cell *matCellDef= \\\"let element\\\">\\r\\n        <button mat-icon-button color=\\\"primary\\\" >\\r\\n            <mat-icon class=\\\"mat-18\\\">done_all</mat-icon>\\r\\n        </button>\\r\\n      </td>\\r\\n    </ng-container> -->\\r\\n\\r\\n   <ng-container matColumnDef =\\\"statusCode\\\">\\r\\n      <th mat-header-cell *matHeaderCellDef mat-sort-header class=\\\"th-header-background\\\"\\r\\n      matTooltip=\\\"'Not started' indicates that no input has been provided for this task.\\r\\n      'Pending' indicates that one or more inputs have been provided, and that the Region lead / Approver has not yet made the final input selection.\\r\\n      'Approved' indicates that the assigned Region lead / Approver has validated the final input and closed the item. Please e-mail your assigned Region lead / Approver with any additional comments you may have. \\\">\\r\\n        Status <i class=\\\"material-icons help-text-icon\\\" placement=\\\"bottom\\\"\\r\\n         >help</i>\\r\\n        </th>\\r\\n      <td mat-cell *matCellDef= \\\"let element\\\">\\r\\n        {{element.taskStatus}}\\r\\n      </td>\\r\\n    </ng-container>\\r\\n\\r\\n    <ng-container matColumnDef =\\\"inputCount\\\">\\r\\n       <th mat-header-cell *matHeaderCellDef mat-sort-header class=\\\"th-header-background\\\"\\r\\n       matTooltip=\\\"Yes answer indicates that at least one input was received; No answer indicates that there has been no input provided by anyone in the region so far. Filter for Yes on this column to select only the tasks that have received one or more inputs across the region so far.\\\">\\r\\n         Input Received <i class=\\\"material-icons help-text-icon\\\" placement=\\\"bottom\\\"\\r\\n          >help</i>\\r\\n        </th>\\r\\n       <td mat-cell *matCellDef= \\\"let element\\\">\\r\\n         {{element.inputReceived}}\\r\\n       </td>\\r\\n     </ng-container>\\r\\n\\r\\n    <ng-container matColumnDef =\\\"toBeEnteredBy\\\">\\r\\n      <th mat-header-cell *matHeaderCellDef mat-sort-header class=\\\"th-header-background\\\"\\r\\n      data-html=\\\"true\\\"\\r\\n      matTooltip=\\\"{{serviceMatrix.toBeEnteredBy.join('\\\\n')}}\\\" [matTooltipClass] =\\\"mat-tooltip\\\"\\r\\n        >\\r\\n        To Be Entered By\\r\\n        <i class=\\\"material-icons help-text-icon\\\" placement=\\\"bottom\\\"\\r\\n         >help</i>\\r\\n       </th>\\r\\n      <td mat-cell *matCellDef= \\\"let element\\\">\\r\\n        {{element.toBeEnteredBy}}\\r\\n      </td>\\r\\n    </ng-container>\\r\\n\\r\\n    <ng-container matColumnDef =\\\"updateInd\\\">\\r\\n       <th mat-header-cell *matHeaderCellDef mat-sort-header class=\\\"th-header-background\\\"\\r\\n       matTooltip=\\\"Filter to 'Yes' to display only those tasks that were updated during the MLDC Review period.\\\">\\r\\n         Updated <i class=\\\"material-icons help-text-icon\\\" placement=\\\"bottom\\\"\\r\\n          >help</i>\\r\\n        </th>\\r\\n       <td mat-cell *matCellDef= \\\"let element\\\">\\r\\n         {{element.updateInd}}\\r\\n       </td>\\r\\n     </ng-container>\\r\\n\\r\\n     <ng-container matColumnDef =\\\"feedbackReceived\\\">\\r\\n      <th mat-header-cell *matHeaderCellDef mat-sort-header class=\\\"th-header-background\\\">\\r\\n        Feedback Received\\r\\n       </th>\\r\\n      <td mat-cell *matCellDef= \\\"let element\\\">\\r\\n        {{element.feedbackReceived}}\\r\\n      </td>\\r\\n    </ng-container>\\r\\n\\r\\n     <!-- Task Id Filter Column -->\\r\\n    <ng-container matColumnDef=\\\"taskId-filter\\\">\\r\\n        <th mat-header-cell *matHeaderCellDef>\\r\\n          <input class=\\\"filter-input\\\" value=\\\"{{filteredValues.taskId}}\\\"\\r\\n            (keyup)=\\\"applyColumnFilter($event.target.value, 'taskId')\\\"\\r\\n            placeholder=\\\"Filter\\\">\\r\\n        </th>\\r\\n    </ng-container>\\r\\n\\r\\n    <!-- Service Filter Column -->\\r\\n    <ng-container matColumnDef=\\\"serviceName-filter\\\">\\r\\n        <th mat-header-cell *matHeaderCellDef>\\r\\n          <input  class=\\\"filter-input\\\" value=\\\"{{filteredValues.serviceName}}\\\"\\r\\n            (keyup)=\\\"applyColumnFilter($event.target.value, 'serviceName')\\\"\\r\\n            placeholder=\\\"Filter\\\">\\r\\n        </th>\\r\\n    </ng-container>\\r\\n\\r\\n    <!-- Program Filter Column -->\\r\\n    <ng-container matColumnDef=\\\"program-filter\\\">\\r\\n        <th mat-header-cell *matHeaderCellDef>\\r\\n          <input  class=\\\"filter-input\\\" value=\\\"{{filteredValues.program}}\\\"\\r\\n            (keyup)=\\\"applyColumnFilter($event.target.value, 'program')\\\"\\r\\n            placeholder=\\\"Filter\\\">\\r\\n        </th>\\r\\n    </ng-container>\\r\\n\\r\\n    <!-- Sub Program Filter Column -->\\r\\n    <ng-container matColumnDef=\\\"subProgram-filter\\\">\\r\\n        <th mat-header-cell *matHeaderCellDef>\\r\\n          <input  class=\\\"filter-input\\\" value=\\\"{{filteredValues.subProgram}}\\\"\\r\\n            (keyup)=\\\"applyColumnFilter($event.target.value, 'subProgram')\\\"\\r\\n            placeholder=\\\"Filter\\\">\\r\\n        </th>\\r\\n    </ng-container>\\r\\n\\r\\n    <!-- Task Category Filter Column -->\\r\\n    <ng-container matColumnDef=\\\"taskCategory-filter\\\">\\r\\n        <th mat-header-cell *matHeaderCellDef>\\r\\n          <input  class=\\\"filter-input\\\" value=\\\"{{filteredValues.taskCategory}}\\\"\\r\\n            (keyup)=\\\"applyColumnFilter($event.target.value, 'taskCategory')\\\"\\r\\n            placeholder=\\\"Filter\\\">\\r\\n        </th>\\r\\n    </ng-container>\\r\\n\\r\\n    <!-- Task Filter Column -->\\r\\n    <ng-container matColumnDef=\\\"taskName-filter\\\">\\r\\n        <th mat-header-cell *matHeaderCellDef>\\r\\n          <input  class=\\\"filter-input\\\" value=\\\"{{filteredValues.taskName}}\\\"\\r\\n            (keyup)=\\\"applyColumnFilter($event.target.value, 'taskName')\\\"\\r\\n            placeholder=\\\"Filter\\\">\\r\\n        </th>\\r\\n    </ng-container>\\r\\n\\r\\n    <!-- Myinput Filter Column -->\\r\\n    <ng-container matColumnDef=\\\"myInput-filter\\\">\\r\\n      <th mat-header-cell *matHeaderCellDef>\\r\\n      <input  class=\\\"filter-input\\\" value=\\\"{{filteredValues.myInput}}\\\"\\r\\n        (keyup)=\\\"applyColumnFilter($event.target.value, 'myInput')\\\"\\r\\n        placeholder=\\\"Filter\\\">\\r\\n      </th>\\r\\n    </ng-container>\\r\\n\\r\\n    <!-- Status Filter Column -->\\r\\n    <ng-container matColumnDef=\\\"statusCode-filter\\\">\\r\\n        <th mat-header-cell *matHeaderCellDef>\\r\\n          <input  class=\\\"filter-input\\\" value=\\\"{{filteredValues.statusCode}}\\\"\\r\\n            (keyup)=\\\"applyColumnFilter($event.target.value, 'statusCode')\\\"\\r\\n            placeholder=\\\"Filter\\\">\\r\\n        </th>\\r\\n    </ng-container>\\r\\n\\r\\n    <!-- Count Input Filter Column -->\\r\\n    <ng-container matColumnDef=\\\"inputCount-filter\\\">\\r\\n      <th mat-header-cell *matHeaderCellDef>\\r\\n        <input class=\\\"filter-input\\\" value=\\\"{{filteredValues.inputCount}}\\\"\\r\\n          (keyup)=\\\"applyColumnFilter($event.target.value, 'inputCount')\\\"\\r\\n          placeholder=\\\"Filter\\\">\\r\\n      </th>\\r\\n    </ng-container>\\r\\n\\r\\n    <!-- Feedback Received Filter Column -->\\r\\n    <ng-container matColumnDef=\\\"feedbackReceived-filter\\\">\\r\\n      <th mat-header-cell *matHeaderCellDef>\\r\\n        <input class=\\\"filter-input\\\" value=\\\"{{filteredValues.feedbackReceived}}\\\"\\r\\n          (keyup)=\\\"applyColumnFilter($event.target.value, 'feedbackReceived')\\\"\\r\\n          placeholder=\\\"Filter\\\">\\r\\n      </th>\\r\\n    </ng-container>\\r\\n\\r\\n    <!-- To Be Entered By Filter Column -->\\r\\n    <ng-container matColumnDef=\\\"toBeEnteredBy-filter\\\">\\r\\n      <th mat-header-cell *matHeaderCellDef>\\r\\n        <input class=\\\"filter-input\\\" value=\\\"{{filteredValues.toBeEnteredBy}}\\\"\\r\\n          (keyup)=\\\"applyColumnFilter($event.target.value, 'toBeEnteredBy')\\\"\\r\\n          placeholder=\\\"Filter\\\">\\r\\n      </th>\\r\\n    </ng-container>\\r\\n\\r\\n    <ng-container matColumnDef=\\\"updateInd-filter\\\">\\r\\n      <th mat-header-cell *matHeaderCellDef>\\r\\n        <input class=\\\"filter-input\\\" value=\\\"{{filteredValues.updateInd }}\\\"\\r\\n          (keyup)=\\\"applyColumnFilter($event.target.value, 'updateInd')\\\"\\r\\n          placeholder=\\\"Filter\\\">\\r\\n      </th>\\r\\n    </ng-container>\\r\\n\\r\\n    <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\r\\n    <tr mat-header-row *matHeaderRowDef=\\\"displayedFilterColumns\\\" class=\\\"example-second-header-row\\\"></tr>\\r\\n    <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></tr>\\r\\n  </table>\\r\\n<mat-paginator #paginator\\r\\n  [pageSizeOptions]=\\\"[5, 20, 50, 100, 500, 1000]\\\" showFirstLastButtons\\r\\n  (page)=\\\"pageEvent = handlePage($event)\\\"></mat-paginator>\\r\\n</div>\\r\\n\"","\r\nimport { Component, OnInit, ViewChild, AfterViewInit } from '@angular/core';\r\nimport { HttpClient, HttpClientModule } from '@angular/common/http'\r\nimport { MatSort, MatPaginator, MatTableDataSource } from '@angular/material';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { ServiceMatrixService }  from '../service-matrix.service';\r\nimport { DataSource } from '@angular/cdk/table';\r\nimport { Observable } from 'rxjs';\r\nimport { AuthenticationService, UserService } from 'src/app/_services';\r\nimport { NgForm, FormControl } from '@angular/forms';\r\n\r\n@Component({\r\n  selector: 'app-matrix-details',\r\n  templateUrl: './matrix-details.component.html',\r\n  styleUrls: ['./matrix-details.component.css']\r\n})\r\nexport class MatrixDetailsComponent implements OnInit{\r\n  dataSource = new MatTableDataSource<Object>();\r\n  searchInput: string;\r\n  user:Object;\r\n  starColor : string = \"primary\";\r\n  displayedColumns: string[] = [];\r\n  displayedFilterColumns: string[] = [];\r\n  globalFilter = '';\r\n  selectedRegionId: number;\r\n  selectedRegion:string;\r\n  regionList;\r\n  filteredValues = { taskId:'', serviceName:'', program:'',\r\n    subProgram:'', taskCategory: '', taskName : '', statusCode: '',\r\n    myInput:'', inputCount: '', feedbackReceived: '', toBeEnteredBy: '',\r\n    updateInd: ''//, topFilter: false\r\n  };\r\n\r\n  @ViewChild(MatPaginator) paginator: MatPaginator;\r\n  @ViewChild(MatSort) sort: MatSort;\r\n\r\n  constructor(private http: HttpClient, private router: Router, private serviceMatrix :ServiceMatrixService,\r\n  private userService:UserService, private route: ActivatedRoute) {\r\n\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.route.params.subscribe(params => {\r\n      this.selectedRegionId = params['regionId'];\r\n      this.selectedRegion = params['regionName']\r\n      this.customInit(params);\r\n    });\r\n    this.dataSource.filterPredicate = this.customFilterPredicate();\r\n  };\r\n\r\n    customInit(params){\r\n      this.user = this.userService.user;\r\n      this.displayedColumns = [\"viewTask\", \"taskId\", \"serviceName\", \"program\",\r\n      \"subProgram\", \"taskCategory\", \"taskName\", \"myInput\",  \"statusCode\", \"inputCount\", \"toBeEnteredBy\", \"updateInd\", \"feedbackReceived\"];\r\n      this.displayedFilterColumns = [];\r\n      this.displayedColumns.forEach(e => {\r\n        this.displayedFilterColumns.push(e + '-filter');\r\n      });\r\n      // if('admin' === this.user['userRoleByRoleId']['roleName'] || 'm_lead' === this.user['userRoleByRoleId']['roleName']){\r\n      //   this.displayedColumns.push(\"feedbackReceived\");\r\n      //   this.displayedFilterColumns.push('feedbackReceived-filter');\r\n      // }\r\n      this.getMatrixDetails(this.userService.user['id']);\r\n      this.getRegionDetails(this.user);\r\n    }\r\n\r\n    public getMatrixDetails = (userId:string ) => {\r\n        this.serviceMatrix.getData(this.selectedRegionId, userId)\r\n        .subscribe(res => {\r\n          this.globalFilter = this.serviceMatrix.filterStore.globalFilter;\r\n          if(this.serviceMatrix.filterStore.columnFilter != undefined){\r\n            this.filteredValues = this.serviceMatrix.filterStore.columnFilter;\r\n          }\r\n          this.dataSource.data = res as Object[];\r\n          this.dataSource.data.forEach(e => {\r\n            e[\"statusCode\"] = e[\"taskStatus\"];\r\n          });\r\n          this.applyAllFilters(this.globalFilter, this.filteredValues);\r\n          this.paginator.pageIndex = this.serviceMatrix.filterStore.pageIndex;\r\n          this.paginator.pageSize = this.serviceMatrix.filterStore.pageSize;\r\n          this.dataSource.paginator = this.paginator;\r\n          this.dataSource.sort = this.sort;\r\n        });\r\n    }\r\n\r\n    public getRegionDetails  (user: Object) {\r\n      this.regionList =  user['userRegionMappingsById'].sort(\r\n        (function(a, b){\r\n        if(a.regionByRegionId.regionName < b.regionByRegionId.regionName) { return -1; }\r\n        if(a.regionByRegionId.regionName > b.regionByRegionId.regionName) { return 1; }\r\n        return 0;\r\n      })); ;\r\n    }\r\n\r\n    loadLastUsedFilter(){\r\n      var fstore = JSON.parse(this.user['filter']);\r\n      this.applyAllFilters(fstore.globalFilter, fstore.columnFilter);\r\n      this.paginator.pageIndex = fstore.pageIndex;\r\n      this.paginator.pageSize = fstore.pageSize;\r\n      this.dataSource.paginator = this.paginator;\r\n    }\r\n\r\n    applyAllFilters(gFilter, fValues){\r\n      this.applyFilter(gFilter);\r\n      this.applyColumnFilter(fValues.taskId, 'taskId');\r\n      this.applyColumnFilter(fValues.serviceName, 'serviceName');\r\n      this.applyColumnFilter(fValues.program, 'program');\r\n      this.applyColumnFilter(fValues.subProgram, 'subProgram');\r\n      this.applyColumnFilter(fValues.taskCategory, 'taskCategory');\r\n      this.applyColumnFilter(fValues.taskName, 'taskName');\r\n      this.applyColumnFilter(fValues.myInput, 'myInput');\r\n      this.applyColumnFilter(fValues.statusCode, 'statusCode');\r\n      this.applyColumnFilter(fValues.inputCount, 'inputReceived');\r\n      this.applyColumnFilter(fValues.feedbackReceived, 'feedbackReceived');\r\n      this.applyColumnFilter(fValues.toBeEnteredBy, 'toBeEnteredBy');\r\n      this.applyColumnFilter(fValues.updateInd, 'updateInd');\r\n    }\r\n\r\n    clearAllFilters(){\r\n      this.paginator.pageIndex = 0;\r\n      this.paginator.pageSize = 50;\r\n      this.dataSource.paginator = this.paginator;\r\n      this.globalFilter = '';\r\n      this.filteredValues = { taskId:'', serviceName:'', program:'',\r\n        subProgram:'', taskCategory: '', taskName : '', statusCode: '',\r\n        myInput:'', inputCount: '',\r\n        feedbackReceived:'', toBeEnteredBy: '', updateInd: ''\r\n      };\r\n      this.serviceMatrix.filterStore.pageIndex = 0;\r\n      this.serviceMatrix.filterStore.globalFilter = '';\r\n      this.serviceMatrix.filterStore.columnFilter = undefined;\r\n      this.serviceMatrix.filterStore.selectedSubProgTasks = [];\r\n      this.serviceMatrix.filterStore.pageSize = 50;\r\n      this.applyAllFilters(this.globalFilter, this.filteredValues);\r\n    }\r\n\r\n  customFilterPredicate() {\r\n    const myFilterPredicate = (data: any, filter: string): boolean => {\r\n      var globalMatch = !this.globalFilter;\r\n      if (this.globalFilter) {\r\n        let taskIdFound = data.taskId.toString().trim().toLowerCase().indexOf(this.globalFilter.toString().toLowerCase()) !== -1;\r\n        let serviceNameFound = data.serviceName.toString().trim().toLowerCase().indexOf(this.globalFilter.toString().toLowerCase()) !== -1;\r\n        let programFound = data.program.toString().trim().toLowerCase().indexOf(this.globalFilter.toString().toLowerCase()) !== -1;\r\n        let subProgramFound = data.subProgram.toString().trim().toLowerCase().indexOf(this.globalFilter.toString().toLowerCase()) !== -1;\r\n        let taskCategoryFound = data.taskCategory.toString().trim().toLowerCase().indexOf(this.globalFilter.toString().toLowerCase()) !== -1;\r\n        let taskNameFound = data.taskName.toString().trim().toLowerCase().indexOf(this.globalFilter.toString().toLowerCase()) !== -1;\r\n        let statusFound = data.taskStatus.toString().trim().toLowerCase().indexOf(this.globalFilter.toString().toLowerCase()) !== -1;\r\n        let inputFound = data.myInput.toString().trim().toLowerCase().indexOf(this.globalFilter.toString().toLowerCase()) !== -1;\r\n        let countFound = data.inputReceived.toString().trim().toLowerCase().indexOf(this.globalFilter.toString().toLowerCase()) !== -1;\r\n        let fbReceivedFound = data.feedbackReceived.toString().trim().toLowerCase().indexOf(this.globalFilter.toString().toLowerCase()) !== -1;\r\n        let taskDescFound = data.taskDesc.toString().trim().toLowerCase().indexOf(this.globalFilter.toString().toLowerCase()) !== -1;\r\n        let sgFound = data.serviceGlossary.toString().trim().toLowerCase().indexOf(this.globalFilter.toString().toLowerCase()) !== -1;\r\n        let toBeEnteredFound = data.toBeEnteredBy.toString().trim().toLowerCase().indexOf(this.globalFilter.toString().toLowerCase()) !== -1;\r\n        let updateInd = data.updateInd.toString().trim().toLowerCase().indexOf(this.globalFilter.toString().toLowerCase()) !== -1;\r\n        globalMatch = taskIdFound || serviceNameFound || programFound || subProgramFound || taskCategoryFound || taskNameFound || statusFound || inputFound || countFound || fbReceivedFound || taskDescFound || sgFound || toBeEnteredFound || updateInd;\r\n      }\r\n\r\n      if (!globalMatch) {\r\n        return;\r\n      }\r\n\r\n      let searchString = JSON.parse(filter);\r\n      let taskIdFound = data.taskId.toString().trim().toLowerCase().indexOf(searchString.taskId.toString().toLowerCase()) !== -1;\r\n      let serviceNameFound = data.serviceName.toString().trim().toLowerCase().indexOf(searchString.serviceName.toString().toLowerCase()) !== -1;\r\n      let programFound = data.program.toString().trim().toLowerCase().indexOf(searchString.program.toString().toLowerCase()) !== -1;\r\n      let subProgramFound = data.subProgram.toString().trim().toLowerCase().indexOf(searchString.subProgram.toString().toLowerCase()) !== -1;\r\n      let taskCategoryFound = data.taskCategory.toString().trim().toLowerCase().indexOf(searchString.taskCategory.toString().toLowerCase()) !== -1;\r\n      let taskNameFound = data.taskName.toString().trim().toLowerCase().indexOf(searchString.taskName.toString().toLowerCase()) !== -1;\r\n      let statusFound = data.taskStatus.toString().trim().toLowerCase().indexOf(searchString.statusCode.toString().toLowerCase()) !== -1;\r\n      let inputFound = data.myInput.toString().trim().toLowerCase().indexOf(searchString.myInput.toString().toLowerCase()) !== -1;\r\n      let countFound = data.inputReceived.toString().trim().toLowerCase().indexOf(searchString.inputCount.toString().toLowerCase()) !== -1;\r\n      let fbReceivedFound = data.feedbackReceived.toString().trim().toLowerCase().indexOf(searchString.feedbackReceived.toString().toLowerCase()) !== -1;\r\n      let toBeEnteredFound = data.toBeEnteredBy.toString().trim().toLowerCase().indexOf(searchString.toBeEnteredBy.toString().toLowerCase()) !== -1;\r\n      let updateIndFound = data.updateInd.toString().trim().toLowerCase().indexOf(searchString.updateInd.toString().toLowerCase()) !== -1;\r\n      return taskIdFound && serviceNameFound && programFound && subProgramFound && taskCategoryFound && taskNameFound && statusFound && inputFound && countFound && fbReceivedFound && toBeEnteredFound && updateIndFound;\r\n    }\r\n    return myFilterPredicate;\r\n  }\r\n\r\n    applyColumnFilter(filterValue: string, col: string) {\r\n      this.filteredValues[col] = filterValue;\r\n      this.dataSource.filter = JSON.stringify(this.filteredValues);\r\n    }\r\n\r\n    applyFilter(filter) {\r\n    //  this.globalFilter = filterValue;\r\n      //  this.dataSource.filter = filterValue.trim().toLowerCase();\r\n\r\n      this.globalFilter = filter;\r\n      this.dataSource.filter = JSON.stringify(this.filteredValues);\r\n    }\r\n\r\n    showTask(row) {\r\n      this.storeFilterValues(this.paginator.pageIndex, this.paginator.pageSize);\r\n      this.router.navigate([this.selectedRegion, this.selectedRegionId, \"task\", row.taskId ]);\r\n      //var tasks = this.dataSource.data.filter(e => e['program'] == row.program);\r\n      var tasks = this.dataSource.filteredData;\r\n      /*if(tasks.length == this.dataSource.data.length){\r\n        tasks = this.dataSource.data.filter(e => e['program'] == row.program);\r\n      }*/\r\n      this.serviceMatrix.filterStore.selectedSubProgTasks = [];\r\n      if(tasks.length > 1){\r\n        for(var i=0; i<tasks.length; i++){\r\n          var sspt = tasks[i];\r\n          if(i==0){\r\n            sspt[\"prevTaskId\"] = tasks[tasks.length-1]['taskId'];\r\n            sspt[\"nextTaskId\"] = tasks[i+1]['taskId'];\r\n          } else if (i == tasks.length-1) {\r\n            sspt[\"prevTaskId\"] = tasks[i-1]['taskId'];\r\n            sspt[\"nextTaskId\"] = tasks[0]['taskId'];\r\n          } else {\r\n            sspt[\"prevTaskId\"] = tasks[i-1]['taskId'];\r\n            sspt[\"nextTaskId\"] = tasks[i+1]['taskId'];\r\n          }\r\n          sspt[\"index\"]= i+1;\r\n          this.serviceMatrix.filterStore.selectedSubProgTasks.push(sspt);\r\n        }\r\n      }\r\n    }\r\n\r\n    chooseRegion(regionName: string, regionId: number) {\r\n      this.router.navigate([\"service\", regionName, regionId]);\r\n    }\r\n\r\n    backToLogin(){\r\n      this.serviceMatrix.logout(this.userService.user['id']);\r\n\r\n    this.serviceMatrix.filterStore.pageIndex = 0;\r\n    this.serviceMatrix.filterStore.globalFilter = '';\r\n    this.serviceMatrix.filterStore.columnFilter = undefined;\r\n    this.serviceMatrix.filterStore.pageSize = 50;\r\n    this.serviceMatrix.filterStore.selectedSubProgTasks = [];\r\n      this.router.navigate([\"login\"]);\r\n    }\r\n\r\n    storeFilterValues(pageIndex: number, pageSize :number){\r\n      this.serviceMatrix.filterStore.pageIndex = pageIndex;\r\n      this.serviceMatrix.filterStore.pageSize = pageSize;\r\n      this.serviceMatrix.filterStore.globalFilter = this.globalFilter;\r\n      this.serviceMatrix.filterStore.columnFilter = this.filteredValues;\r\n    }\r\n\r\n    public handlePage(e: any) {\r\n      window.scrollTo(0, 0);\r\n    }\r\n}\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable, ViewChild } from '@angular/core';\r\nimport { MatPaginator, MatSort, MatTableDataSource } from '@angular/material';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ServiceMatrixService {\r\n  matMtrixDataStore;\r\n  matrixJsonString;\r\n  taskInfo;\r\n  laborDataStore;\r\n  selectedRowIndex;\r\n  filterStore: Filters;\r\n  //API_URL:string = \"http://ec2-18-220-6-166.us-east-2.compute.amazonaws.com:8080/\";\r\n  //API_URL: string = \"http://localhost:8080/\";\r\n  API_URL:string = \"https://prod.cdfw-sbb.com/\";\r\n  //API_URL:string = \"https://dev.cdfw-sbb.com/\";\r\n  @ViewChild(MatPaginator) paginator: MatPaginator;\r\n  inputDataStore = [{\r\n    id: 1,\r\n    value: \"5\",\r\n    name: \"Bob\"\r\n  },\r\n  {\r\n    id: 2,\r\n    value: \"3\",\r\n    name: \"Bob\"\r\n  },\r\n  {\r\n    id: 3,\r\n    value: \"1\",\r\n    name: \"Bob\"\r\n  },\r\n  {\r\n    id: 4,\r\n    value: \"4\",\r\n    name: \"Bob\"\r\n  },\r\n  {\r\n    id: 5,\r\n    value: \"2\",\r\n    name: \"Bob\"\r\n  },\r\n  {\r\n    id: 6,\r\n    value: \"3\",\r\n    name: \"Bob\"\r\n  }\r\n  ];\r\n\r\n  toBeEnteredBy = [\"AQUA  Aquaculture\",\r\n    \"ASB   Accounting Services Branch\",\r\n    \"AUD   Audits Branch\",\r\n    \"BDB   Biogeographic Data Branch\",\r\n    \"BIZOPS\t\tBusiness Operations\",\r\n    \"BMB\t\t\tBusiness Management Branch\",\r\n    \"BUDGETS\t\tBudget Branch\",\r\n    \"CONENGR\t\tConservation Engineering\",\r\n    \"EEO\t\t\tOfc of Equal Employment Opportunity\",\r\n    \"FACENGR\t\tFacilities Engineering\",\r\n    \"FB\t\t\tFisheries Branch\",\r\n    \"FGC\t\t\tFish & Game Commission\",\r\n    \"HCPB\t\tHabitat Conservation Planning Branch\",\r\n    \"HRB\t\t\tHuman Resources Branch\",\r\n    \"IT\t\t\tIT Operations & Systems Branches\",\r\n    \"LED\t\t\tLaw Enforcement (all)\",\r\n    \"LEG\t\t\tLegislative Office\",\r\n    \"LRB\t\t\tLicense & Revenue Branch\",\r\n    \"OCEO\t\tOfc of Communication, Education & Outreach\",\r\n    \"ODB\t\t\tOrganizational Development Branch\",\r\n    \"OGC\t\t\tOfc of General Counsel\",\r\n    \"OSPR\t\tOfc of Spill Prevention & Response\",\r\n    \"REGION\t\tRegions 1-7\",\r\n    \"REGSUNIT\tRegulations\",\r\n    \"SCIINST\t\tScience Institute\",\r\n    \"WATER\t\tWater Branch\",\r\n    \"WLB\t\t\tWildlife Branch\",\r\n    \"WRGB\t\tWatershed Restoration Grants Branch\"\r\n  ];\r\n\r\n  @ViewChild(MatSort) sort: MatSort;\r\n\r\n  constructor(private http: HttpClient) {\r\n    this.filterStore = new Filters();\r\n  }\r\n\r\n  async getServiceMatrix1() {\r\n    var self = this;\r\n    await fetch(this.API_URL + 'service')\r\n      .then(function (response) {\r\n        response.json().then(\r\n          function (data) {\r\n            self.matrixJsonString = data;\r\n            self.matMtrixDataStore = new MatTableDataSource(data);\r\n\r\n            self.matMtrixDataStore.paginator = this.paginator;\r\n            self.matMtrixDataStore.sort = this.sort;\r\n          }\r\n        );\r\n        //this.matMtrixDataStore = new MatTableDataSource (this.matrixJsonString);\r\n      });\r\n    // this.matMtrixDataStore = new MatTableDataSource (response);\r\n  }\r\n\r\n  public getData = (selectedRegionId: number, userId: string) => {\r\n    return this.http.get(this.API_URL + 'service/' + selectedRegionId + '/' + userId);\r\n  }\r\n\r\n  public getLaborMappingsData = (selectedRegion: number, userId: string) => {\r\n    return this.http.get(this.API_URL + 'csservice/' + selectedRegion + '/' + userId);\r\n  }\r\n\r\n\r\n  getLaborClassSummary(selectedRegion: number, userId: any, laborClassName: any) {\r\n    return this.http.get(this.API_URL + 'csservice/laborclasssummary/' + selectedRegion + '/' + userId + '/' + laborClassName);\r\n  }\r\n\r\n  getLaborClassSummaryByPositionId(selectedRegion: number, laborClassName: any) {\r\n    return this.http.get(this.API_URL + 'csservice/laborclasssummary/' + selectedRegion + '/' + laborClassName);\r\n  }\r\n\r\n  public getCsMatrixData = () => {\r\n    return this.http.get(this.API_URL + 'cslaborhours');\r\n  }\r\n\r\n  public selectInput = (regionId: number, taskId: string, userId: string, approvedUserId: any) => {\r\n    return this.http.get(this.API_URL + 'selectInput/' + regionId + '/' + taskId + '/' + userId + '/' + approvedUserId);\r\n  }\r\n\r\n  public fetchInputs = (regionId: number, taskId: string) => {\r\n    return this.http.get(this.API_URL + 'fetchInputs/' + regionId + '/' + taskId);\r\n  }\r\n\r\n  async getTaskDetail(taskId: string) {\r\n    var self = this;\r\n    await fetch('../assets/data.json')\r\n      .then(function (response) {\r\n        response.json().then(\r\n          function (data) {\r\n            self.taskInfo = data.find(item => item.taskId === taskId);\r\n          }\r\n        );\r\n      });\r\n  }\r\n\r\n  getTaskDetail1 = (selectedRegion: string, taskId: string) => {\r\n    return this.http.get(this.API_URL + selectedRegion + '/task/' + taskId);\r\n  }\r\n\r\n  getRegionDetails = () => {\r\n    return this.http.get('../assets/data.json');\r\n  }\r\n\r\n  public saveUserInput(userId: number, regionName: string, taskId: string, inputValue: number, taskfeedback: string) {\r\n    return this.http.post(this.API_URL + 'saveInput', { userId: userId, regionName: regionName, taskId: taskId, inputValue: inputValue, feedback: taskfeedback });\r\n  }\r\n\r\n\r\n  saveCsInput(selectedRegionId: number, userId: any, pid: any, taskid: string, taskhours: number, feedback: string, isValidator: boolean) {\r\n      return this.http.post(this.API_URL + 'addCsInput', { regionId: selectedRegionId, userId: userId, positionId: pid, taskId: taskid, inputHours: taskhours, feedback: feedback, isValidator: isValidator });\r\n  }\r\n\r\n  public getCSInput(regionId: number, userId: number, positionId: string, taskid: string) {\r\n    return this.http.get(this.API_URL + 'getCsInput/'+regionId+'/'+userId+'/'+positionId+'/'+taskid);\r\n  }\r\n\r\n  public editCSInput(csInput: Object, editedBy: number, isValidator: boolean) {\r\n    return this.http.post(this.API_URL + 'editCsInput', { regionId: csInput['regionId'], userId: csInput['userId'], positionId: csInput['positionId'], taskId: csInput['taskId'], inputHours: csInput['inputHours'], feedback: csInput['feedback'], editedBy: editedBy, isValidator: isValidator});\r\n  }\r\n\r\n  public deleteCSInput(csInput: Object) {\r\n    return this.http.post(this.API_URL + 'deleteCsInput', { regionId: csInput['regionId'], userId: csInput['userId'], positionId: csInput['positionId'], taskId: csInput['taskId'], inputHours: csInput['inputHours'] });\r\n  }\r\n\r\n  public approveAllInputs(regionId:number, positionId: string,  approverId: number){\r\n    return this.http.post(this.API_URL + 'approveAllInputs', { regionId: regionId, positionId: positionId, approverId: approverId});\r\n  }\r\n\r\n  public approveCSInput(csInput: Object, approverId: number){\r\n    return this.http.post(this.API_URL + 'approveCsInput', { regionId: csInput['regionId'], userId: csInput['userId'], positionId: csInput['positionId'], taskId: csInput['taskId'], inputHours: csInput['inputHours'], approverId: approverId});\r\n  }\r\n\r\n  public updateAndValidateCsInput(csInput: Object, approverId: number){\r\n    return this.http.post(this.API_URL + 'updateAndValidateCsInput', { regionId: csInput['regionId'], userId: csInput['userId'], positionId: csInput['positionId'], taskId: csInput['taskId'], inputHours: csInput['inputHours'], approverId: approverId, feedback: csInput['feedback']});\r\n  }\r\n\r\n  public copyTasks(regionId:number, userId:number, sourcePosition:string, destinationPositions:string[], tasksToBeCopied:string[]) {\r\n    return this.http.post(this.API_URL+ 'copyTasks', {regionId: regionId, userId:userId, sourcePosition: sourcePosition , destinationPositions: destinationPositions,tasksToBeCopied: tasksToBeCopied }, {responseType: 'text'});\r\n  }\r\n\r\n  async getTaskInfo(taskId: string) {\r\n    var self = this;\r\n    await fetch('../assets/data.json')\r\n      .then(function (response) {\r\n        response.json().then(\r\n          function (data) {\r\n            self.taskInfo = data.find(item => item.taskId === taskId);\r\n            self.laborDataStore = new MatTableDataSource(self.taskInfo.service.category.task.laborClass);\r\n          }\r\n        );\r\n      });\r\n  }\r\n\r\n  logout(usrId: string) {\r\n    this.http.post(this.API_URL + \"logout\", { userId: usrId }).subscribe(res => {\r\n      // console.log(res);\r\n    });\r\n  }\r\n\r\n  saveFilter(userId: number, filter: string) {\r\n    return this.http.post(this.API_URL + 'saveFilter', { userId: userId, filter: filter });\r\n  }\r\n\r\n  testBackend() {\r\n    this.http.get('http://localhost:8080/greeting').toPromise()\r\n      .then(function (response) {\r\n      });\r\n  }\r\n}\r\n\r\nexport class Filters {\r\n  pageIndex: number = 0;\r\n  globalFilter: string = '';\r\n  columnFilter: any;\r\n  selectedSubProgTasks: any[] = [];\r\n  pageSize: number = 50;\r\n\r\n  toString() {\r\n    var str = {};\r\n    str[\"pageIndex\"] = this.pageIndex;\r\n    str[\"pageSize\"] = this.pageSize;\r\n    str[\"globalFilter\"] = this.globalFilter;\r\n    str[\"columnFilter\"] = this.columnFilter;\r\n    return JSON.stringify(str);\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { MatrixDetailsComponent } from \"./matrix-details/matrix-details.component\"\n\n\nconst routes: Routes = [\n  {\n    path:\"\",\n    component: MatrixDetailsComponent\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class ServiceRoutingModule { }\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { ServiceRoutingModule } from './service-routing.module';\r\nimport { MatrixDetailsComponent } from './matrix-details/matrix-details.component';\r\nimport { FormsModule } from '@angular/forms';\r\n\r\nimport {NgbModule} from '@ng-bootstrap/ng-bootstrap';\r\nimport { NgbTooltipModule } from '@ng-bootstrap/ng-bootstrap';\r\n\r\nimport {\r\n  MatButtonModule, MatCardModule, MatDialogModule, MatInputModule, MatTableModule,\r\n  MatToolbarModule, MatMenuModule,MatIconModule, MatProgressSpinnerModule, MatListModule,\r\n  MatExpansionModule, MatPaginatorModule, MatSortModule, MatSidenavModule\r\n} from '@angular/material';\r\nimport { TaskDetailsComponent, SaveResponseConfirmDialog } from './task-details/task-details.component';\r\nimport { ServiceMatrixService } from './service-matrix.service';\r\nimport { InputsComponent } from './inputs/inputs.component';\r\n\r\nimport {MatTooltipModule} from '@angular/material/tooltip';\r\nimport {MatTabsModule} from '@angular/material/tabs';\r\nimport { FeedbackComponent } from './feedback/feedback.component';\r\n\r\n\r\n@NgModule({\r\n  declarations: [MatrixDetailsComponent, TaskDetailsComponent, InputsComponent, SaveResponseConfirmDialog, FeedbackComponent],\r\n  entryComponents : [SaveResponseConfirmDialog],\r\n  providers : [ServiceMatrixService],\r\n  imports: [\r\n    CommonModule,\r\n    ServiceRoutingModule,\r\n    MatButtonModule, MatCardModule, MatDialogModule, MatInputModule, MatTableModule,\r\n    MatToolbarModule, MatMenuModule,MatIconModule, MatProgressSpinnerModule, MatListModule,\r\n    MatExpansionModule,  MatPaginatorModule, MatSortModule, MatSidenavModule, MatTooltipModule,\r\n    MatTabsModule,\r\n    FormsModule,\r\n    NgbModule.forRoot(),\r\n    NgbTooltipModule\r\n  ]\r\n})\r\n\r\nexport class ServiceModule { }\r\n","module.exports = \"<!-- <h1 mat-dialog-title>{{data.name}}</h1> -->\\r\\n<div mat-dialog-content>\\r\\n  <p>The task has inputs from other respondents. To override, press continue. To review inputs, press Review Inputs.</p>\\r\\n</div>\\r\\n<div class=\\\"text-center\\\">\\r\\n  <button mat-raised-button (click)=\\\"closeDialog('No')\\\" class=\\\"mr-2\\\">Review Inputs</button>\\r\\n  <button mat-raised-button color=\\\"primary\\\" (click)=\\\"closeDialog('Yes')\\\" cdkFocusInitial>Continue</button>\\r\\n</div>\\r\\n\"","module.exports = \".task-container{\\r\\n  width: 100%;\\r\\n}\\r\\n\\r\\n.mat-form-field{\\r\\n  width: 100%;\\r\\n}\\r\\n\\r\\n.example-fill-remaining-space {\\r\\n  flex: 1 1 auto;\\r\\n}\\r\\n\\r\\ntextarea {\\r\\n    padding: 10px;\\r\\n    line-height: 1.5;\\r\\n    border-radius: 5px;\\r\\n    border: 1px solid #ccc;\\r\\n    width: 100%;\\r\\n}\\r\\n\\r\\nmat-toolbar  span, mat-toolbar  a  span {\\r\\n  font-size: 10pt;\\r\\n}\\r\\n\\r\\n.help-text-icon {\\r\\n  font-size: 14px;\\r\\n}\\r\\n\\r\\n.input-task-feedback-lbl {\\r\\n  margin: 3px 3px 3px 10px !important;\\r\\n}\\r\\n\\r\\n.input-task-feedback-area {\\r\\n  margin: 3px 3px 10px 10px !important;\\r\\n}\\r\\n\\r\\n.w-65{\\r\\n  width: 65%;\\r\\n}\\r\\n\\r\\n.w-94{\\r\\n  width: 94%;\\r\\n}\\r\\n\\r\\n.task-input-multiplier:disabled, .input-task-feedback-area:disabled {\\r\\n  background-color: #FEFEFE;\\r\\n}\\r\\n\\r\\n::ng-deep .mat-tooltip  {\\r\\n white-space: pre-line    !important;\\r\\n font-size: 10px   !important;\\r\\n}\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvc2VydmljZS90YXNrLWRldGFpbHMvdGFzay1kZXRhaWxzLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxXQUFXO0FBQ2I7O0FBRUE7RUFDRSxXQUFXO0FBQ2I7O0FBRUE7RUFDRSxjQUFjO0FBQ2hCOztBQUVBO0lBQ0ksYUFBYTtJQUNiLGdCQUFnQjtJQUNoQixrQkFBa0I7SUFDbEIsc0JBQXNCO0lBQ3RCLFdBQVc7QUFDZjs7QUFFQTtFQUNFLGVBQWU7QUFDakI7O0FBRUE7RUFDRSxlQUFlO0FBQ2pCOztBQUVBO0VBQ0UsbUNBQW1DO0FBQ3JDOztBQUVBO0VBQ0Usb0NBQW9DO0FBQ3RDOztBQUVBO0VBQ0UsVUFBVTtBQUNaOztBQUVBO0VBQ0UsVUFBVTtBQUNaOztBQUVBO0VBQ0UseUJBQXlCO0FBQzNCOztBQUVBO0NBQ0MsbUNBQW1DO0NBQ25DLDRCQUE0QjtBQUM3QiIsImZpbGUiOiJzcmMvYXBwL3NlcnZpY2UvdGFzay1kZXRhaWxzL3Rhc2stZGV0YWlscy5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLnRhc2stY29udGFpbmVye1xyXG4gIHdpZHRoOiAxMDAlO1xyXG59XHJcblxyXG4ubWF0LWZvcm0tZmllbGR7XHJcbiAgd2lkdGg6IDEwMCU7XHJcbn1cclxuXHJcbi5leGFtcGxlLWZpbGwtcmVtYWluaW5nLXNwYWNlIHtcclxuICBmbGV4OiAxIDEgYXV0bztcclxufVxyXG5cclxudGV4dGFyZWEge1xyXG4gICAgcGFkZGluZzogMTBweDtcclxuICAgIGxpbmUtaGVpZ2h0OiAxLjU7XHJcbiAgICBib3JkZXItcmFkaXVzOiA1cHg7XHJcbiAgICBib3JkZXI6IDFweCBzb2xpZCAjY2NjO1xyXG4gICAgd2lkdGg6IDEwMCU7XHJcbn1cclxuXHJcbm1hdC10b29sYmFyICBzcGFuLCBtYXQtdG9vbGJhciAgYSAgc3BhbiB7XHJcbiAgZm9udC1zaXplOiAxMHB0O1xyXG59XHJcblxyXG4uaGVscC10ZXh0LWljb24ge1xyXG4gIGZvbnQtc2l6ZTogMTRweDtcclxufVxyXG5cclxuLmlucHV0LXRhc2stZmVlZGJhY2stbGJsIHtcclxuICBtYXJnaW46IDNweCAzcHggM3B4IDEwcHggIWltcG9ydGFudDtcclxufVxyXG5cclxuLmlucHV0LXRhc2stZmVlZGJhY2stYXJlYSB7XHJcbiAgbWFyZ2luOiAzcHggM3B4IDEwcHggMTBweCAhaW1wb3J0YW50O1xyXG59XHJcblxyXG4udy02NXtcclxuICB3aWR0aDogNjUlO1xyXG59XHJcblxyXG4udy05NHtcclxuICB3aWR0aDogOTQlO1xyXG59XHJcblxyXG4udGFzay1pbnB1dC1tdWx0aXBsaWVyOmRpc2FibGVkLCAuaW5wdXQtdGFzay1mZWVkYmFjay1hcmVhOmRpc2FibGVkIHtcclxuICBiYWNrZ3JvdW5kLWNvbG9yOiAjRkVGRUZFO1xyXG59XHJcblxyXG46Om5nLWRlZXAgLm1hdC10b29sdGlwICB7XHJcbiB3aGl0ZS1zcGFjZTogcHJlLWxpbmUgICAgIWltcG9ydGFudDtcclxuIGZvbnQtc2l6ZTogMTBweCAgICFpbXBvcnRhbnQ7XHJcbn1cclxuIl19 */\"","module.exports = \"<mat-toolbar>\\r\\n  <div class=\\\"row w-100 m-0\\\">\\r\\n  <div class=\\\"col-md-6\\\">\\r\\n  <span> <b>Task Details</b> </span>\\r\\n\\r\\n  <button mat-button color=\\\"primary\\\" matTooltip=\\\"User Info\\\" style=\\\"cursor:default;\\\">\\r\\n      <mat-icon>account_box</mat-icon>\\r\\n      {{user.userName}}\\r\\n    </button>\\r\\n    <button mat-button color=\\\"primary\\\" matTooltip=\\\"Region/Branch/District\\\" style=\\\"cursor:default;\\\">\\r\\n        <mat-icon>language</mat-icon>\\r\\n        {{selectedRegion}}\\r\\n      </button>\\r\\n  </div>\\r\\n  <div class=\\\"col-md-6 text-right\\\">\\r\\n    <span> <b>Actions: </b></span>\\r\\n    <button mat-button color=\\\"primary\\\" (click)=\\\"goBackToMatrix()\\\">\\r\\n      <mat-icon>arrow_back</mat-icon>\\r\\n      Back to Catalog\\r\\n    </button>\\r\\n    <a mat-button color=\\\"primary\\\" title=\\\"Provide Feedback\\\" target=\\\"_new\\\" href=\\\"https://deloittesurvey.deloitte.com/Community/se/3FC11B2638966086\\\">\\r\\n        <mat-icon>feedback</mat-icon>\\r\\n    </a>\\r\\n    <a mat-button color=\\\"primary\\\" title=\\\"Respondent Resource Hub\\\" target=\\\"_new\\\" href=\\\"http://dfgintranet/portal/BusinessOperations/Budget/ServiceBasedBudgeting/Respondents/tabid/2880/Default.aspx\\\">\\r\\n        <mat-icon>file_copy</mat-icon>\\r\\n    </a>\\r\\n    <button mat-button color=\\\"primary\\\" (click)=\\\"backToLogin()\\\">\\r\\n      <mat-icon>power_settings_new</mat-icon>\\r\\n      Logout\\r\\n    </button>\\r\\n  </div>\\r\\n  </div>\\r\\n</mat-toolbar>\\r\\n\\r\\n<ngb-alert *ngIf=\\\"approved && userRole==='m_resp' && approvedMsgResp !== null\\\" type=\\\"success\\\"\\r\\n  (close)=\\\"approvedMsgResp = null\\\">{{ approvedMsgResp }}</ngb-alert>\\r\\n<ngb-alert *ngIf=\\\"approved && (userRole==='m_lead' || userRole==='admin') && approvedMsgLead !== null\\\" type=\\\"success\\\"\\r\\n  (close)=\\\"approvedMsgLead = null\\\">{{ approvedMsgLead }}</ngb-alert>\\r\\n\\r\\n\\r\\n<div class=\\\"task-container\\\" *ngIf=\\\"task != undefined\\\">\\r\\n  <mat-card class=\\\"example-card m-3\\\">\\r\\n      <mat-card-header>\\r\\n    <div style=\\\"width:75%\\\">\\r\\n        <mat-card-title>{{task.taskName}} (Task ID: {{task.taskId}})\\r\\n      </mat-card-title>\\r\\n        <mat-card-subtitle>{{task.serviceName}} / {{task.program}} / {{task.subProgram}} /{{task.taskCategory}}\\r\\n      </mat-card-subtitle>\\r\\n    </div>\\r\\n    <div class=\\\"flex-sm-fill\\\" *ngIf=\\\"serviceMatrix.filterStore.selectedSubProgTasks.length > 0\\\">\\r\\n    ({{task.index}} out of {{serviceMatrix.filterStore.selectedSubProgTasks.length}})\\r\\n  <button mat-button class=\\\"float-sm-right\\\" *ngIf=\\\"task.nextTaskId != undefined\\\" title=\\\"{{task.nextTaskId}}\\\" (click)=\\\"goToTask(task.nextTaskId)\\\">\\r\\n      <mat-icon class=\\\"next_task_icon\\\">navigate_next</mat-icon>\\r\\n  </button>\\r\\n  <button mat-button class=\\\"float-sm-right\\\" *ngIf=\\\"task.nextTaskId != undefined\\\" title=\\\"{{task.prevTaskId}}\\\" (click)=\\\"goToTask(task.prevTaskId)\\\">\\r\\n      <mat-icon class=\\\"next_task_icon\\\">navigate_before</mat-icon>\\r\\n  </button>\\r\\n</div>\\r\\n\\r\\n    </mat-card-header>\\r\\n    <mat-divider matInset></mat-divider>\\r\\n    <mat-card-content class=\\\"py-3\\\">\\r\\n      <div class=\\\"row\\\" style=\\\"background: #1f4e79;\\\">\\r\\n        <div class=\\\"col-md-8\\\">\\r\\n            <table class=\\\"text-white\\\" style=\\\"background: #1f4e79; height: 80px; width: auto !important;\\\">\\r\\n              <tr>\\r\\n                <td style=\\\"width: 150px;\\\">\\r\\n                  <label for=\\\"inputmul\\\" style=\\\"margin-left:10px; margin-bottom: 0px; margin-top: 5px;\\\">Input Multiplier<i\\r\\n                      class=\\\"material-icons help-text-icon\\\"\\r\\n                      matTooltip=\\\"Displays the input recorded for this task. This is the only field that requires an input from respondents in this exercise. \\\">help</i></label>\\r\\n                </td>\\r\\n                <td class=\\\"w-50\\\">\\r\\n                  <label style=\\\"margin-left:10px; margin-bottom: 0px; margin-top: 5px;\\\">Feedback</label>\\r\\n                </td>\\r\\n                <td style=\\\"width: 150px;\\\">\\r\\n                </td>\\r\\n              </tr>\\r\\n              <tr>\\r\\n                  <td class=\\\"align-top\\\">\\r\\n                      <input id=\\\"inputmul\\\" type=\\\"number\\\" name=\\\"test_name\\\" min=\\\"0\\\" class=\\\"task-input-multiplier align-top\\\"\\r\\n                        oninput=\\\"validity.valid||(value='');\\\" [(ngModel)]=\\\"multiplier\\\" [disabled]=\\\"saveRespInputDisabled\\\">\\r\\n                      <div>\\r\\n                        <label for=\\\"tobeenteredby\\\" style=\\\"margin-left:10px; margin-bottom: 0px; margin-top: 5px;\\\">To be entered by<i\\r\\n                              class=\\\"material-icons help-text-icon\\\"\\r\\n                              matTooltip=\\\"{{serviceMatrix.toBeEnteredBy.join('\\\\n')}}\\\">help</i></label>\\r\\n                        <textarea id=\\\"tobeenteredby\\\" matInput value=\\\"{{task.toBeEnteredBy}}\\\"></textarea>\\r\\n                      </div>\\r\\n                    </td>\\r\\n                    <td class= \\\"align-top\\\">\\r\\n                      <textarea name=\\\"taskfeedback\\\" [(ngModel)]=\\\"taskfeedback\\\" rows=\\\"3\\\" cols=\\\"20\\\" maxlength=\\\"2000\\\"\\r\\n                        class=\\\"input-task-feedback-area w-94\\\" [disabled]=\\\"saveRespInputDisabled || multiplier == undefined\\\"> </textarea>\\r\\n                    </td>\\r\\n                    <td class=\\\"text-center align-top\\\">\\r\\n                      <button mat-button class=\\\"text-dark bg-white task-input-multiplier-btn\\\" (click)=\\\"saveResponse()\\\" [disabled]=\\\"saveRespInputDisabled\\r\\n                                    || multiplier == undefined\\\">\\r\\n                      <!--<button mat-button class=\\\"text-dark bg-white task-input-multiplier-btn\\\" (click)=\\\"saveResponse()\\\" [disabled]=true>-->\\r\\n                        <mat-icon>save</mat-icon>\\r\\n                        Save Response\\r\\n                      </button>\\r\\n                    </td>\\r\\n              </tr>\\r\\n\\r\\n            </table>\\r\\n          </div>\\r\\n            <div class=\\\"col-md-4 pt-3\\\">\\r\\n              <table style=\\\"color: white; border: 1px solid white; float: right;\\\">\\r\\n                <tr>\\r\\n                <td>\\r\\n                  <label style=\\\"margin-left:10px; margin-bottom: 0px; margin-top: 5px;\\\" for=\\\"frequency\\\">Frequency <i\\r\\n                      class=\\\"material-icons help-text-icon\\\"\\r\\n                      matTooltip=\\\"Number of times per year that the task needs to be accomplished (predefined).\\\">help</i></label>\\r\\n                </td>\\r\\n\\r\\n                <td class=\\\"align-top\\\" style=\\\"width: 150px;\\\">\\r\\n                    <input id=\\\"frequency\\\" matInput style=\\\"width:90%; border-bottom: 1px solid white;\\\" value=\\\"{{task.frequency}}\\\" readonly class=\\\"m-1\\\">\\r\\n                  </td>\\r\\n                </tr>\\r\\n                  <tr>\\r\\n                <td>\\r\\n                  <label style=\\\"margin-left:10px; margin-bottom: 0px; margin-top: 5px;\\\" for=\\\"totallaborhours\\\">Total time of Labor\\r\\n                    Hours <i class=\\\"material-icons help-text-icon\\\"\\r\\n                      matTooltip=\\\"Sum of time per labor classification (predefined).\\\">help</i></label>\\r\\n                </td>\\r\\n                <td class=\\\"align-top\\\">\\r\\n                  <input id=\\\"totallaborhours\\\" matInput style=\\\"width:90%; border-bottom: 1px solid white;\\\" value=\\\"{{task.totalLaborHours}}\\\" readonly class=\\\"m-1\\\">\\r\\n                </td>\\r\\n              </tr>\\r\\n                <tr>\\r\\n                <td>\\r\\n                  <label style=\\\"margin-left:10px; margin-bottom: 0px; margin-top: 5px;\\\" for=\\\"totalhours\\\">Total Hours <i\\r\\n                      class=\\\"material-icons help-text-icon\\\"\\r\\n                      matTooltip=\\\"Product of multiplier (input), times the total time of labor hours, times the frequency (automatically calculated).\\\">help</i></label>\\r\\n                </td>\\r\\n                <td class=\\\"align-top\\\">\\r\\n                  <input id=\\\"totalhours\\\" matInput style=\\\"width:90%; border-bottom: 1px solid white;\\\" value=\\\"{{task.totalLaborHours * task.frequency * multiplier}}\\\" readonly\\r\\n                    class=\\\"m-1\\\">\\r\\n                </td>\\r\\n              </tr>\\r\\n            </table>\\r\\n        </div>\\r\\n      </div>\\r\\n      <div class=\\\"row\\\" style=\\\"background: #1f4e79;\\\">\\r\\n        <div class=\\\"col-md-12 pb-3\\\">\\r\\n          <app-inputs [taskId]=\\\"inpuTaskId\\\" [regionName]=\\\"selectedRegion\\\"\\r\\n          [totalHours]=\\\"task.totalLaborHours * task.frequency\\\"\\r\\n          [changeDetection]=\\\"changeInputDetection\\\"\\r\\n          (approved)=\\\"onApproval(task, $event)\\\"></app-inputs>\\r\\n        </div>\\r\\n      </div>\\r\\n      <div class=\\\"row\\\">\\r\\n        <div class=\\\"col-md-6 pt-3\\\">\\r\\n          <mat-card style=\\\"min-height: 570px;\\\">\\r\\n            <!-- <mat-card-actions class=\\\"m-0 p-0 mb-3\\\"> -->\\r\\n              <!-- <table class=\\\"text-white w-100\\\" style=\\\"background: #1f4e79; height: 80px;\\\">\\r\\n                <tr>\\r\\n                  <td>\\r\\n                      <label for=\\\"inputmul\\\" style=\\\"margin-left:10px; margin-bottom: 0px; margin-top: 5px;\\\">Input Multiplier<i class=\\\"material-icons help-text-icon\\\"\\r\\n                        matTooltip=\\\"Displays the input recorded for this task. This is the only field that requires an input from respondents in this exercise. \\\">help</i></label>\\r\\n                  </td>\\r\\n                  <td class=\\\"w-65\\\">\\r\\n                      <label style=\\\"margin-left:10px; margin-bottom: 0px; margin-top: 5px;\\\">Feedback</label>\\r\\n                  </td>\\r\\n                </tr>\\r\\n                <tr>\\r\\n                  <td class=\\\"align-top\\\">\\r\\n                      <input id=\\\"inputmul\\\" type=\\\"number\\\" name=\\\"test_name\\\" min=\\\"0\\\" class=\\\"task-input-multiplier align-top\\\"\\r\\n                      oninput=\\\"validity.valid||(value='');\\\" [(ngModel)]=\\\"multiplier\\\" [disabled]=\\\"saveRespInputDisabled\\\">\\r\\n                  </td>\\r\\n\\r\\n                  <td>\\r\\n                      <textarea name=\\\"taskfeedback\\\" [(ngModel)]=\\\"taskfeedback\\\" rows=\\\"5\\\" cols=\\\"25\\\" maxlength=\\\"2000\\\" class=\\\"input-task-feedback-area w-94\\\"\\r\\n                      [disabled]=\\\"saveRespInputDisabled || multiplier == undefined\\\"> </textarea>\\r\\n                  </td>\\r\\n                </tr>\\r\\n                <tr>\\r\\n                  <td class=\\\"text-center align-top\\\" colspan=\\\"2\\\">\\r\\n                    <button mat-button class=\\\"text-dark bg-white task-input-multiplier-btn\\\" (click)=\\\"saveResponse()\\\" [disabled]=\\\"saveRespInputDisabled\\r\\n                    || multiplier == undefined\\\">\\r\\n                        <mat-icon>save</mat-icon>\\r\\n                        Save Response\\r\\n                      </button>\\r\\n\\r\\n                    <button mat-button class=\\\"mx-2 text-dark bg-white task-input-multiplier-btn\\\" (click)=\\\"viewInputs()\\\" [disabled]=\\\"task['inputCount'] == 0\\\">\\r\\n                    <mat-icon>touch_app</mat-icon>\\r\\n                    Review Inputs ({{task['inputCount']}})\\r\\n                  </button>\\r\\n                </td>\\r\\n                </tr>\\r\\n              </table> -->\\r\\n              <!-- <div class=\\\"row mx-0 text-white p-2\\\" style=\\\"background: #1f4e79; \\\">\\r\\n                <div class=\\\"col-sm-4\\\">\\r\\n                      <label for=\\\"inputmul\\\">Input Multiplier<i class=\\\"material-icons help-text-icon\\\"\\r\\n                          matTooltip=\\\"Displays the input recorded for this task. This is the only field that requires an input from respondents in this exercise. \\\">help</i></label>\\r\\n                      <input id=\\\"inputmul\\\" type=\\\"number\\\" name=\\\"test_name\\\" min=\\\"0\\\"\\r\\n                        oninput=\\\"validity.valid||(value='');\\\" [(ngModel)]=\\\"multiplier\\\" [disabled]=\\\"saveRespInputDisabled\\\">\\r\\n\\r\\n                </div>\\r\\n                <div class=\\\"col-sm-4 pt-4\\\">\\r\\n                      <button mat-raised-button class=\\\"text-dark\\\" (click)=\\\"saveResponse()\\\" [disabled]=\\\"saveRespInputDisabled || multiplier == undefined || multiplier == 0\\\">\\r\\n                      <mat-icon>save</mat-icon>\\r\\n                      Save Response\\r\\n                    </button>\\r\\n\\r\\n                  </div>\\r\\n                  <div class=\\\"col-sm-4 pt-4\\\">\\r\\n                      <button mat-raised-button class=\\\"text-dark\\\" (click)=\\\"viewInputs()\\\" [disabled]=\\\"task['inputCount'] == 0\\\"\\r\\n                        *ngIf=\\\"(userRole==='admin' || userRole==='m_lead')\\\">\\r\\n                        <mat-icon>touch_app</mat-icon>\\r\\n                        Review Inputs ({{task['inputCount']}})\\r\\n                      </button>\\r\\n\\r\\n                    </div>\\r\\n              </div> -->\\r\\n            <!-- </mat-card-actions> -->\\r\\n            <!-- <mat-divider matInset></mat-divider> -->\\r\\n            <mat-card-content>\\r\\n              <div class=\\\"row pt-1\\\">\\r\\n                <div class=\\\"col-sm-6\\\">\\r\\n                  <mat-form-field appearance=\\\"outline\\\">\\r\\n                    <mat-label>Task Description</mat-label>\\r\\n                    <textarea matInput id=\\\"taskdesc\\\" name=\\\"taskdesc\\\" rows=\\\"5\\\" cols=\\\"30\\\" disabled class=\\\"border-0 font-color-black\\\"> {{task.taskDesc}} </textarea>\\r\\n                  </mat-form-field>\\r\\n                </div>\\r\\n                <div class=\\\"col-sm-6\\\">\\r\\n                    <mat-form-field appearance=\\\"outline\\\">\\r\\n                  <mat-label>Input Multiplier Description</mat-label>\\r\\n                  <textarea matInput id=\\\"multiDesc\\\" name=\\\"multiDesc\\\" rows=\\\"5\\\" cols=\\\"30\\\" disabled class=\\\"border-0 font-color-black\\\"> {{task.multDesc}} </textarea>\\r\\n                </mat-form-field>\\r\\n                </div>\\r\\n              </div>\\r\\n              <div class=\\\"row pt-3\\\">\\r\\n                <div class=\\\"col-sm-6\\\">\\r\\n                    <mat-form-field appearance=\\\"outline\\\">\\r\\n                  <mat-label>Glossary</mat-label>\\r\\n                  <textarea matInput id=\\\"srvcGlosry\\\" name=\\\"taskdesc\\\" rows=\\\"5\\\" cols=\\\"30\\\" disabled class=\\\"border-0 font-color-black\\\"> {{task.serviceGlossary}} </textarea>\\r\\n                </mat-form-field>\\r\\n                </div>\\r\\n                <div class=\\\"col-sm-6\\\">\\r\\n                    <mat-form-field appearance=\\\"outline\\\">\\r\\n                  <mat-label>Desired Performance</mat-label>\\r\\n                  <textarea matInput id=\\\"taskdesc2\\\" name=\\\"taskdesc\\\" rows=\\\"5\\\" cols=\\\"30\\\" disabled class=\\\"border-0 font-color-black\\\"> {{task.desiredPerf}} </textarea>\\r\\n                </mat-form-field>\\r\\n                </div>\\r\\n              </div>\\r\\n              <div class=\\\"row pt-3\\\">\\r\\n                <div class=\\\"col-sm-6\\\">\\r\\n                    <mat-form-field appearance=\\\"outline\\\">\\r\\n                  <mat-label>Additional Budget Factor(s)</mat-label>\\r\\n                  <textarea matInput  id=\\\"multiDesc2\\\" name=\\\"multiDesc\\\" rows=\\\"5\\\" cols=\\\"30\\\" disabled class=\\\"border-0 font-color-black\\\"> {{task.addtnlBudgetFator}} </textarea>\\r\\n                </mat-form-field>\\r\\n                </div>\\r\\n                <div class=\\\"col-sm-6\\\">\\r\\n                </div>\\r\\n              </div>\\r\\n            </mat-card-content>\\r\\n          </mat-card>\\r\\n        </div>\\r\\n        <div class=\\\"col-md-6 pt-3\\\">\\r\\n          <mat-card style=\\\"min-height: 570px;\\\">\\r\\n            <!-- <mat-card-actions class=\\\"m-0 p-0 mb-3\\\"> -->\\r\\n              <!-- <div class=\\\"row mx-0\\\" style=\\\"max-height:80px;\\\">\\r\\n                  <div class=\\\"col-sm-3\\\">\\r\\n                <mat-form-field>\\r\\n                  <label for=\\\"frequency\\\">Frequency <i class=\\\"material-icons help-text-icon\\\"\\r\\n                      matTooltip=\\\"Number of times per year that the task needs to be accomplished (predefined).\\\">help</i></label>\\r\\n                  <input id=\\\"frequency\\\" matInput value=\\\"{{task.frequency}}\\\" readonly>\\r\\n                </mat-form-field></div>\\r\\n                <div class=\\\"col-sm-6\\\">\\r\\n                <mat-form-field>\\r\\n                  <label for=\\\"totallaborhours\\\">Total time of Labor Hours <i class=\\\"material-icons help-text-icon\\\"\\r\\n                      matTooltip=\\\"Sum of time per labor classification (predefined).\\\">help</i></label>\\r\\n                  <input id=\\\"totallaborhours\\\" matInput value=\\\"{{task.totalLaborHours}}\\\" readonly>\\r\\n                </mat-form-field></div>\\r\\n                <div class=\\\"col-sm-3\\\">\\r\\n\\r\\n                <mat-form-field>\\r\\n                  <label for=\\\"totalhours\\\">Total Hours <i class=\\\"material-icons help-text-icon\\\"\\r\\n                      matTooltip=\\\"Product of multiplier (input), times the total time of labor hours, times the frequency (automatically calculated).\\\">help</i></label>\\r\\n                  <input id=\\\"totalhours\\\" matInput value=\\\"{{task.totalLaborHours * task.frequency * multiplier}}\\\"\\r\\n                    readonly>\\r\\n                </mat-form-field></div>\\r\\n              </div> -->\\r\\n            <!-- </mat-card-actions> -->\\r\\n            <!-- <mat-divider matInset></mat-divider> -->\\r\\n            <mat-card-content>\\r\\n              <div class=\\\"row pt-1\\\">\\r\\n                <div class=\\\"col-sm-8\\\">\\r\\n                  <label for=\\\"laborTable\\\">Labor Classification<i class=\\\"material-icons help-text-icon\\\"\\r\\n                      matTooltip=\\\"Displays the time that each labor classification would spend on the task in question, in the future state / at mission level (predefined). \\\">help</i></label>\\r\\n                  <table id=\\\"laborTable\\\" mat-table [dataSource]=\\\"dataSource\\\" matSort class=\\\"mat-elevation-z1 w-100\\\">\\r\\n                    <ng-container matColumnDef=\\\"title\\\">\\r\\n                      <th mat-header-cell *matHeaderCellDef> Title </th>\\r\\n                      <!--<td mat-cell *matCellDef=\\\"let element\\\"> {{element.laborClassLookupByRoleId.title}} </td>-->\\r\\n                      <td mat-cell *matCellDef=\\\"let element\\\"> {{element.title}} </td>\\r\\n                    </ng-container>\\r\\n                    <ng-container matColumnDef=\\\"role\\\">\\r\\n                      <th mat-header-cell *matHeaderCellDef> Code </th>\\r\\n                      <td mat-cell *matCellDef=\\\"let element\\\"> {{element.role}} </td>\\r\\n                    </ng-container>\\r\\n                    <ng-container matColumnDef=\\\"time\\\">\\r\\n                      <th mat-header-cell *matHeaderCellDef> Time (hours) </th>\\r\\n                      <td mat-cell *matCellDef=\\\"let element\\\" class=\\\"text-center\\\"> {{element.time}} </td>\\r\\n                    </ng-container>\\r\\n                    <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\r\\n                    <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></tr>\\r\\n                  </table>\\r\\n                  <!--  <mat-paginator\\r\\n          [pageSizeOptions]=\\\"[3, 5, 7]\\\" showFirstLastButtons></mat-paginator> -->\\r\\n                </div>\\r\\n                <div class=\\\"col-sm-4\\\">\\r\\n                  <label for=\\\"justcat\\\">Justification Category</label>\\r\\n                  <table id=\\\"justcat\\\" mat-table [dataSource]=\\\"dataSourceJustification\\\" matSort\\r\\n                    class=\\\"mat-elevation-z1 w-100\\\">\\r\\n                    <ng-container matColumnDef=\\\"categoryName\\\">\\r\\n                      <th mat-header-cell *matHeaderCellDef> Name </th>\\r\\n                      <td mat-cell *matCellDef=\\\"let element\\\"> {{element.categoryName}} </td>\\r\\n                    </ng-container>\\r\\n                    <tr mat-header-row *matHeaderRowDef=\\\"displayedColumnsJustification\\\"></tr>\\r\\n                    <tr mat-row *matRowDef=\\\"let row; columns: displayedColumnsJustification;\\\"></tr>\\r\\n                  </table>\\r\\n                </div>\\r\\n              </div>\\r\\n            </mat-card-content>\\r\\n          </mat-card>\\r\\n        </div>\\r\\n      </div>\\r\\n    </mat-card-content>\\r\\n  </mat-card>\\r\\n</div>\\r\\n\"","import { Component, OnInit, Input, Inject } from '@angular/core';\r\nimport { ActivatedRoute, ParamMap, Router } from '@angular/router';\r\nimport { ServiceMatrixService } from '../service-matrix.service';\r\nimport { MatDialog, MatDialogConfig, MatTableDataSource, MatDialogRef, MAT_DIALOG_DATA } from '@angular/material';\r\nimport { InputsComponent } from '../inputs/inputs.component';\r\n\r\nimport { MatSnackBarComponent } from '../mat-snack-bar/mat-snack-bar.component';\r\nimport { UserService } from 'src/app/_services';\r\nimport { FeedbackComponent } from '../feedback/feedback.component';\r\n\r\n\r\n\r\n@Component({\r\n  selector: 'app-task-details',\r\n  templateUrl: './task-details.component.html',\r\n  styleUrls: ['./task-details.component.css']\r\n})\r\nexport class TaskDetailsComponent implements OnInit {\r\n  inpuTaskId : string;\r\n  user: Object;\r\n  userRole: string;\r\n  task : Object;\r\n  dataSource = new MatTableDataSource<Object>();\r\n  dataSourceJustification = new MatTableDataSource<Object>();\r\n  displayedColumns: string[] = [\"title\", \"role\", \"time\"];\r\n  displayedColumnsJustification: string[] = [\"categoryName\"];\r\n  selectedRegion:string;\r\n  selectedRegionId:number;\r\n  selectedTask:string;\r\n  multiplier: number= 0;\r\n  taskfeedback: string;\r\n  saveRespInputDisabled : boolean = false;\r\n  approved: boolean = false;\r\n  errorMessage: string = null;\r\n  successMessage: string = null;\r\n  approvedMsgResp: string = null;\r\n  approvedMsgLead: string = null;\r\n  subProgramTasks: any[] = [];\r\n  changeInputDetection: boolean = false;\r\n\r\n  constructor(private route: ActivatedRoute, private serviceMatrix : ServiceMatrixService,\r\n    private router: Router, private dialog: MatDialog,\r\n    private userService:UserService, private snackBar: MatSnackBarComponent\r\n  ) {\r\n\r\n     }\r\n\r\n  ngOnInit() {\r\n    this.route.params.subscribe(params => {\r\n      this.selectedRegionId = params['regionId'];\r\n      this.customInit(params['regionName'], params['taskId']);\r\n    });\r\n  }\r\n\r\n  ngOnChanges(){\r\n\r\n  }\r\n\r\n  customInit(regionName:string, taskId: string){\r\n    this.user = this.userService.user;\r\n    this.getTaskInfo1(regionName, taskId);\r\n    this.userRole = this.userService.userRole;\r\n    this.selectedRegion = regionName;\r\n    this.inpuTaskId = taskId;\r\n\r\n    if (this.serviceMatrix.filterStore.selectedSubProgTasks != undefined) {\r\n      this.subProgramTasks = this.serviceMatrix.filterStore.selectedSubProgTasks;\r\n    }\r\n    this.saveFilter(this.serviceMatrix.filterStore);\r\n  }\r\n\r\n  saveFilter(fstore){\r\n    var cf = '{\"taskId\":\"\",\"serviceName\":\"\",\"program\":\"\",\"subProgram\":\"\",\"taskCategory\":\"\",\"taskName\":\"\",\"statusCode\":\"\",\"myInput\":\"\",\"inputCount\":\"\",\"feedbackReceived\":\"\",\"toBeEnteredBy\":\"\",\"inputReceived\":\"\"}';\r\n    if(fstore.pageIndex !=0 || fstore.globalFilter != ''\r\n    || fstore.pageSize != 50 || (fstore.columnFilter != undefined && JSON.stringify(fstore.columnFilter) != cf)){\r\n      if(this.user['filter'] != fstore.toString()){\r\n        this.serviceMatrix.saveFilter(this.user['id'], fstore.toString()).subscribe(data => {\r\n          let user = JSON.parse(localStorage.getItem('currentUser'));\r\n          user['filter'] = fstore.toString();\r\n          localStorage.setItem('currentUser', JSON.stringify(user));\r\n        });\r\n      }\r\n    }\r\n  }\r\n\r\n\r\n  public getTaskInfo1 = (selectedRegion, taskId) => {\r\n        let _self = this;\r\n          this.serviceMatrix.getTaskDetail1(selectedRegion, taskId).subscribe(\r\n        data => {\r\n          _self.task = data;\r\n          _self.dataSource.data = data['laborClassesByTaskId'];\r\n          _self.dataSourceJustification.data = data['jrsdctnCtgriesByTaskId'];\r\n          let inputs = data['missionUserInputsByTaskId'];\r\n          _self.serviceMatrix.inputDataStore = inputs;\r\n          _self.approved = false;\r\n          _self.multiplier = 0;\r\n          _self.taskfeedback = \"\";\r\n          _self.saveRespInputDisabled = false;\r\n           if('Validated' === _self.task['taskStatus']) {\r\n             _self.approved = true;\r\n             if(_self.userService.userRole === 'm_resp'){\r\n               _self.saveRespInputDisabled = true;\r\n               _self.approvedMsgResp = \"The multiplier input for this task has been validated. You may submit additional suggestions to your designated Region lead by reaching out directly.\";\r\n             } else {\r\n               _self.approvedMsgLead = \"The multiplier input for this task has been validated.\";\r\n             }\r\n             let approvedInput =  inputs.filter(function(input) {\r\n               return input['regionByRegionId']['regionName'] == selectedRegion && input['sttsId'] == \"A\";\r\n              });\r\n\r\n              if (approvedInput.length == 1) {\r\n                _self.multiplier = approvedInput[0].inputValue;\r\n              }\r\n           } else  {\r\n             let myInput = this.filterInputsByUserAndRegion(inputs, _self.user['id'], selectedRegion);\r\n              if (myInput.length == 1) {\r\n                _self.multiplier = myInput[0].inputValue;\r\n              }\r\n           }\r\n\r\n           let loggedinUserInput = this.filterInputsByUserAndRegion(inputs, _self.user['id'], selectedRegion);\r\n           if (loggedinUserInput.length == 1) {\r\n             _self.taskfeedback = loggedinUserInput[0].feedback;\r\n           }\r\n\r\n           if(this.subProgramTasks.length > 1){\r\n             var fltr = this.subProgramTasks.filter(e => e['taskId'] == _self.task['taskId']);\r\n             if(fltr.length > 0){\r\n              _self.task[\"nextTaskId\"] = fltr[0].nextTaskId;\r\n              _self.task[\"prevTaskId\"] = fltr[0].prevTaskId;\r\n              _self.task[\"index\"] = fltr[0].index;\r\n            }\r\n           }\r\n\r\n        },\r\n        err => {\r\n          this.snackBar.openSnackBar( \"Error fetching task details. Please try again later\", 'Close', \"red-snackbar\");\r\n        },\r\n        () => {\r\n\r\n        }\r\n      );\r\n  }\r\n\r\n  goToTask(taskId){\r\n    this.router.navigate([this.selectedRegion, this.selectedRegionId, \"task\", taskId ]);\r\n  }\r\n\r\n  filterInputsByUserAndRegion(inputs:any, userId:number, regionName:string){\r\n    let myInputs = inputs.filter(function(input) {\r\n      return input.id == userId && input['regionByRegionId']['regionName'] == regionName;\r\n     });\r\n     return myInputs;\r\n  }\r\n\r\n\r\n  saveResponse(){\r\n    let status = 'N';\r\n    if('admin' === this.user['userRoleByRoleId']['roleName'] || 'm_lead' === this.user['userRoleByRoleId']['roleName']) {\r\n        status = 'A';\r\n        if (this.task['missionUserInputsByTaskId'] != undefined && this.task['missionUserInputsByTaskId'].length > 0)  {\r\n          var missionUserInputsByTaskIdByRegion = this.task['missionUserInputsByTaskId'].filter(e => e.regionByRegionId.regionName == this.selectedRegion);\r\n          if(missionUserInputsByTaskIdByRegion.length > 0) {\r\n            const dialogRef = this.dialog.open(SaveResponseConfirmDialog, {\r\n              width: '500px',\r\n              data: {confirm: 'No'}\r\n            });\r\n\r\n            dialogRef.afterClosed().subscribe(result => {\r\n              if (result.confirm == 'Yes'){\r\n                this.saveUserInput(status);\r\n              }\r\n            });\r\n          } else {\r\n            this.saveUserInput(status);\r\n          }\r\n        } else {\r\n          this.saveUserInput(status);\r\n        }\r\n     } else if ('m_resp' === this.user['userRoleByRoleId']['roleName']) {\r\n       status = 'P';\r\n       this.saveUserInput(status);\r\n     }\r\n  }\r\n\r\n  onApproval(task, status){\r\n    let _self = this;\r\n    _self.approved = true;\r\n    _self.approvedMsgLead = \"The multiplier input for this task has been validated.\";\r\n  }\r\n\r\n  saveUserInput(stats){\r\n    this.serviceMatrix.saveUserInput(this.user['id'], this.selectedRegion, this.inpuTaskId, this.multiplier, this.taskfeedback).subscribe(res => {\r\n        this.customInit(this.selectedRegion , this.inpuTaskId);\r\n        this.changeInputDetection = !this.changeInputDetection;\r\n        this.snackBar.openSnackBar( \"Input saved successfully\", 'Close', \"green-snackbar\");\r\n      },\r\n      err => {\r\n        this.snackBar.openSnackBar( \"Error saving input value\", 'Close', \"red-snackbar\");\r\n      }\r\n    );\r\n  }\r\n\r\n  goBackToMatrix(){\r\n    this.router.navigate([\"service\", this.selectedRegion, this.selectedRegionId]);\r\n  }\r\n\r\n  viewInputs(){\r\n    const dialogConfig = new MatDialogConfig();\r\n    dialogConfig.width = '800px';\r\n    dialogConfig.maxHeight = '400px';\r\n    dialogConfig.autoFocus = true;\r\n    dialogConfig.data = {\r\n        regionName: this.selectedRegion,\r\n        userId: this.user['id'],\r\n        taskId : this.task['taskId']\r\n    };\r\n    const inputDialogRef = this.dialog.open(InputsComponent, dialogConfig);\r\n\r\n    inputDialogRef.afterClosed().subscribe(data => {\r\n      if(data != undefined) {\r\n        this.customInit(data.regionName , data.taskId);\r\n      }\r\n    });\r\n  }\r\n\r\n  viewFeedbacks(){\r\n    const dialogConfig = new MatDialogConfig();\r\n    dialogConfig.width = '800px';\r\n    dialogConfig.maxHeight = '400px';\r\n    dialogConfig.autoFocus = true;\r\n    dialogConfig.data = {\r\n        regionName: this.selectedRegion,\r\n        userId: this.user['id'],\r\n        taskId : this.task['taskId']\r\n    };\r\n    const inputDialogRef = this.dialog.open(FeedbackComponent, dialogConfig);\r\n\r\n    inputDialogRef.afterClosed().subscribe(data => {});\r\n  }\r\n\r\n  provideYourInputs(){\r\n    this.router.navigate(['task',this.inpuTaskId]);\r\n  }\r\n\r\n  backToRegion(){\r\n    this.router.navigate([\"region\"]);\r\n  }\r\n\r\n  backToLogin(){\r\n    this.serviceMatrix.logout(this.userService.user['id']);\r\n    this.serviceMatrix.filterStore.pageIndex = 0;\r\n    this.serviceMatrix.filterStore.pageSize = 50;\r\n    this.serviceMatrix.filterStore.globalFilter = '';\r\n    this.serviceMatrix.filterStore.columnFilter = undefined;\r\n    this.serviceMatrix.filterStore.selectedSubProgTasks = [];\r\n    this.router.navigate([\"login\"]);\r\n  }\r\n\r\n/*  openSnackBar(message: string, action: string) {\r\n  let config = new MatSnackBarConfig();\r\n   config.verticalPosition = 'bottom';\r\n   config.horizontalPosition = 'right';\r\n   config.duration = 2000;\r\n    this.snackBar.open(message, action, config);\r\n  } */\r\n\r\n}\r\n\r\n@Component({\r\n  selector: 'save-input-confirm-dialog',\r\n  templateUrl: 'save-input-confirm-dialog.html',\r\n})\r\nexport class SaveResponseConfirmDialog {\r\n\r\n  constructor(\r\n    public dialogRef: MatDialogRef<SaveResponseConfirmDialog>,\r\n    @Inject(MAT_DIALOG_DATA) public data: any) {}\r\n\r\n  closeDialog(confirm): void{\r\n    this.dialogRef.close({'confirm': confirm});\r\n  }\r\n\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3VzZXIvdXNlci1yZWdpc3RyYXRpb24vdXNlci1yZWdpc3RyYXRpb24uY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<p>\\n  user-registration works!\\n</p>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-user-registration',\n  templateUrl: './user-registration.component.html',\n  styleUrls: ['./user-registration.component.css']\n})\nexport class UserRegistrationComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { UserRegistrationComponent } from \"./user-registration/user-registration.component\"\n\nconst routes: Routes = [\n  {\n    path:\"\",\n    component: UserRegistrationComponent\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class UserRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { UserRoutingModule } from './user-routing.module';\nimport { UserRegistrationComponent } from './user-registration/user-registration.component';\n\n@NgModule({\n  declarations: [UserRegistrationComponent],\n  imports: [\n    CommonModule,\n    UserRoutingModule\n  ]\n})\nexport class UserModule { }\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: true\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}