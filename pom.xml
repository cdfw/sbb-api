<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>org.springframework</groupId>
	<artifactId>sbb-rest-service</artifactId>
	<version>0.1.1</version>


	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>2.0.5.RELEASE</version>
	</parent>

	<dependencies>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>com.jayway.jsonpath</groupId>
			<artifactId>json-path</artifactId>
			<scope>test</scope>
		</dependency>

		<!-- JPA Data (We are going to use Repositories, Entities, Hibernate, etc...) -->

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-jpa</artifactId>
		</dependency>

		<!-- Use MySQL Connector-J -->
		<dependency>
			<groupId>mysql</groupId>
			<artifactId>mysql-connector-java</artifactId>
		</dependency>

		<dependency>
			<groupId>javax.xml.bind</groupId>
			<artifactId>jaxb-api</artifactId>
			<version>2.3.0</version>
		</dependency>

	</dependencies>

	<properties>
		<docker.image.prefix>acrcdfw.azurecr.io</docker.image.prefix>
		<docker.registry>acrcdfw.azurecr.io</docker.registry>
		<java.version>1.8</java.version>
	</properties>


	<build>
		<plugins>
			<!--<plugin> <groupId>com.github.eirslett</groupId> <artifactId>frontend-maven-plugin</artifactId>
				<version>1.7.5</version> <executions> <execution> <id>install node and npm</id>
				<goals> <goal>install-node-and-npm</goal> </goals> <configuration> <nodeVersion>v10.15.0</nodeVersion>
				<npmVersion>6.4.1</npmVersion> </configuration> </execution> <execution>
				<id>npm run build</id> <goals> <goal>npm</goal> </goals> <configuration>
				<arguments>run build</arguments> <workingDirectory>C:/Users/pravgandhi/Desktop/Thisan/project/CDFW/SBB</workingDirectory>
				</configuration> </execution> </executions> </plugin> -->

			<!-- <plugin> <groupId>com.microsoft.azure</groupId> <artifactId>azure-webapp-maven-plugin</artifactId>
				<version>1.4.0</version> <configuration> <deploymentType>jar</deploymentType>
				<appSettings> <property> <name>JAVA_OPTS</name> <value>-Dserver.port=80</value>
				</property> </appSettings> <resourceGroup>rs-cdfw-test</resourceGroup> <appName>cdfw-test</appName>
				<region>eastus</region> <linuxRuntime>jre8</linuxRuntime> </configuration>
				</plugin> -->

			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
			</plugin>

			<plugin>
			<groupId>com.spotify</groupId>
			<artifactId>dockerfile-maven-plugin</artifactId>
			<version>1.4.9</version>
			<configuration>
					<!-- <repository>${docker.image.prefix}/${project.artifactId}</repository> -->
					<repository>${docker.image.prefix}/sbb-mysql</repository>
					<serverId>${docker.registry}</serverId>
					<registryUrl>https://${docker.registry}</registryUrl>
			</configuration>
	</plugin>

	<plugin>
							 <groupId>org.apache.maven.plugins</groupId>
							 <artifactId>maven-dependency-plugin</artifactId>
							 <executions>
									 <execution>
											 <id>unpack</id>
											 <phase>package</phase>
											 <goals>
													 <goal>unpack</goal>
											 </goals>
											 <configuration>
													 <artifactItems>
															 <artifactItem>
																	 <groupId>${project.groupId}</groupId>
																	 <artifactId>${project.artifactId}</artifactId>
																	 <version>${project.version}</version>
															 </artifactItem>
													 </artifactItems>
											 </configuration>
									 </execution>
							 </executions>
					 </plugin>


		</plugins>
	</build>
</project>
